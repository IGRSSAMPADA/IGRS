package com.wipro.igrs.RegCompMaker.sql;




public class RegCommonMkrSQL {
	public static final String SELECT_APP_INFO = "SELECT R.REG_TXN_ID,R.PARTY_FIRST_NAME,R.PARTY_MIDDLE_NAME,R.PARTY_LAST_NAME,R.PARTY_GENDER,R.PARTY_AGE,R.NATIONALITY,R.PARTY_ADDRESS,R.PHOTO_PROOF_TYPE_ID,R.POSTAL_CODE,R.PHONE_NUMBER,R.MOBILE_NUMBER,R.EMAIL_ID,R.PHOTO_PROOF_ID,R.BANK_NAME,R.BANK_ADDRESS,R.ORGANIZATION_NAME,R.GUARDIAN_NAME,R.MOTHER_NAME,P.PHOTO_PROOF_TYPE_NAME,C.COUNTRY_NAME,S.STATE_NAME,D.DISTRICT_NAME,T.PARTY_TYPE_NAME FROM IGRS_REG_INIT_TXN_PARTY_DTLS R,IGRS_PHOTOID_PROOF_TYPE_MASTER P,IGRS_COUNTRY_MASTER C,IGRS_DISTRICT_MASTER D,IGRS_STATE_MASTER S,IGRS_PARTY_TYPE_MASTER T WHERE C.COUNTRY_ID=R.COUNTRY_ID AND R.PHOTO_PROOF_TYPE_ID=P.PHOTO_PROOF_TYPE_ID AND T.PARTY_TYPE_ID=R.PARTY_ROLE_TYPE_ID AND REG_TXN_ID=";
	
	public static final String SELECT_CHECK_INFO = 
		"SELECT COUNT(*) FROM IGRS_REG_INITN_TXN_PARTY_DTLS R,"
		+"IGRS_PARTY_TYPE_MASTER T,IGRS_DISTRICT_MASTER D,"
		+"IGRS_STATE_MASTER S,IGRS_COUNTRY_MASTER C,"
		+"IGRS_PHOTOID_PROOF_TYPE_MASTER P WHERE "
		+"T.PARTY_TYPE_ID=R.PARTY_TYPE_ID AND "
		+"R.DISTRICT_ID=D.DISTRICT_ID AND "
		+"R.STATE_ID=S.STATE_ID AND C.COUNTRY_ID=R.COUNTRY_ID "
		+"AND R.PHOTO_PROOF_TYPE_ID=P.PHOTO_PROOF_TYPE_ID AND "
		+"REG_TXN_ID=";
	
	public static final String SELECT_SPOT_INSPECTION = null;
	
	public static final String COMPLIANCE_LIST_QUERY = "SELECT  COMPLIANCE_ID,COMPLAINCE_DESC  FROM IGRS_REG_COMPLIANCE_DETAILS ORDER BY COMPLIANCE_ID";
	
	public static final String SELECT_REG_DEED_DETAIL = "SELECT REG_DEED_TXN_ID FROM  IGRS_REG_COMP_DEED_DETAILS WHERE REG_TXN_ID =?";
	
	public static final String SELECT_DEED_TYPE = "SELECT DEED_TYPE_ID,DEED_TYPE_NAME,PROPERTY_VAL_REQD,DUTY_CAL_REQD,PROPERTY_RELATED_DEED FROM IGRS_DEED_TYPE_MASTER WHERE DEED_STATUS='A'";
	
	public static final String SELECT_PROP_BY_REGID = 
		"SELECT DISTINCT C.PROPERTY_TXN_ID FROM "
		+"IGRS_REG_PROPERTY_DETAILS C, IGRS_REG_COMP_DEED_DETAILS B "
		+"WHERE B.REG_TXN_ID = C.REG_TXN_ID AND C.PROPERTY_TXN_ID NOT "
		+"IN (SELECT PROPERTY_TXN_ID FROM IGRS_REG_DEED_PROP_MAP "
		+"WHERE REG_DEED_TXN_ID =?) AND C.REG_TXN_ID=?";
	
	
	//added to get E-Stamp Details
	public static final String GET_ESTAMP_DETAILS="SELECT e.TRANSACTION_ID,e.ESTAMP_TXN_ID,e.PAYMENT_TXN_ID,e.APPLICATION_STATUS,p.AMOUNT_PAID  FROM IGRS_REG_INIT_TXN_DETLS e,IGRS_PAYMENT_TXN_DETAILS p " +
			"										 WHERE e.PAYMENT_TXN_ID=p.TRANSACTION_ID AND e.TRANSACTION_ID=";

	public static final String CHECK_APPLICATION_NUMBER="SELECT REG_TXN_ID,IS_TXN_COMPLETE FROM IGRS_REG_INIT_TXN_PARTY_DTLS  WHERE IS_TXN_COMPLETE='Y' AND REG_TXN_ID=";
	//CREATED ON 12.02.2012 BY ANKITA
	//public static final String GET_LINKED_AMOUNT_BY_REG_NUMBER="SELECT DISTINCT REG_TXN_ID,TOTAL_DUTY,REGISTRATION_FEE FROM IGRS_REG_INIT_PROPRTY_DTLS_DMY  WHERE REG_TXN_ID=";
	
	public static final String GET_LINKED_AMOUNT_BY_REG_NUMBER="SELECT DISTINCT REG_TXN_ID,STAMP_DUTY,REG_FEE FROM IGRS_REG_CHK_STAMP_DUTY_DTLS WHERE REG_TXN_ID= ?";
	
	public static final String GET_LINKED_AMOUNT_BY_ESTAMP="SELECT DISTINCT es.ESTAMP_CODE,ed.STAMP_DUTY FROM " +
			"IGRS_ESTAMP_DUTY_DETLS ed,IGRS_ESTAMP_DETLS es  WHERE " +
			"ed.ESTAMP_TXN_ID = es.ESTAMP_TXN_ID AND es.ESTAMP_CODE = ?";
	
	public static final String GET_LINKED_AMOUNT_BY_PHYSICAL_STAMP="";
	
	// CREATED ON 13.02.2013 BY ANKITA
	public static final String GET_TOTAL_DUTY ="SELECT DISTINCT d.REG_TXN_ID,d.GOVERNMENT_STAMP_DUTY,d.MUNICIPAL_DUTY,d.JANPAD_DUTY,d.UPKAR,d.TOTAL_DUTY,d.REGISTRATION_FEE ," +
			"t.ESTAMP_TXN_ID,t.PAYMENT_TXN_ID,t.TRANSACTION_ID,p.AMOUNT_PAID FROM IGRS_REG_INIT_PROPRTY_DTLS_DMY d,IGRS_REG_INIT_TXN_DETLS t,IGRS_PAYMENT_TXN_DETAILS p  " +
			"WHERE t.TRANSACTION_ID=d.REG_TXN_ID AND p.TRANSACTION_ID=t.PAYMENT_TXN_ID AND  REG_TXN_ID= ?";
	
	
	// Commented by Simran
	/*public static final String INSERT_LINKED_AMOUNTS ="INSERT INTO IGRS_REG_INIT_PROP_PYMNT_LNKNG(PROPERTY_ID,REG_TXN_ID,LINKED_REG_TXN_ID," +
					"LINKED_ESTAMP_CODE,LINKED_PHY_STAMP_CODE,REG_FEE,STAMP_DUTY,BALANCE_DUTY,BALANCE_FEE,SNO) " +
					"VALUES(?,?,?,?,?,?,?,?,?,?)";*/
   
	public static final String INSERT_LINKED_AMOUNTS = "INSERT INTO IGRS_REG_MKR_PROP_PYMNT_LNKNG" +
			"(PROP_LNK_TXN_ID,PROPERTY_ID,REG_TXN_ID,REGISTRATION_NUMBER,LINKED_ESTAMP_CODE," +
			"LINKED_PHY_STAMP_CODE,REG_FEE,STAMP_DUTY,CREATED_BY,CREATED_DATE, DELETE_FLAG,OLD_REGISTRATION_NUMBER,DENOTING_FLAG,LINKING_FLAG,OLD_REG_DATE)" +
			" VALUES(?,?,?,?,?,?,?,?,?,?,'0',?,?,?,TO_DATE(?,'dd/mm/yyyy'))";
					
	public static final String PARAM_ID_GENERATION = "select IGRS_REG_PROP_PMNT_LNKG_SEQ.NEXTVAL from dual";
   
	public static final String PARAM_ID_WITNESS_DTLS = "select IGRS_REG_PROP_PMNT_LNKG_SEQ.NEXTVAL from dual";
    
	public static final String PARAM_ID_PROP_LINKNG_HISTORY="SELECT IGRS_REG_LNKNG_PROP_HIST_SEQ.NEXTVAL from dual";
   
	// Commented By Simran
	/*public static final String INSERT_HOLD_TABLE_DATA="INSERT INTO IGRS_REG_CMPLTN_MKR_HOLD(REG_TXN_ID,HLD_FLAG,FORWARD_PAGE,CREATED_DATE,CREATED_BY,REASON_FOR_HOLD,REMARKS_FOR_HOLD)" +
    													"VALUES (?,?,?,?,?,?,?) " ;*/
	
	public static final String INSERT_HOLD_TABLE_DATA = "INSERT INTO IGRS_REG_TXN_HOLD(HOLD_TXN_ID,HOLD_ID,REG_TXN_ID,HOLD_DATE," +
			"HOLD_REMARKS,CREATED_DATE,CREATED_BY,HOLD_STATUS) VALUES (IGRS_REG_TXN_HOLD_SEQ.nextval,?,?,?,?,?,?,'Y')";
	
    ///commented by SIMRAN
	/*public static final String INSERT_OTHER_DEED_DTLS="INSERT INTO IGRS_REG_OTHR_DEED_DTLS(WITNESS_TXN_NUM,WITNESS_FIRST_NAME,WITNESS_MIDDLE_NAME,WITNESS_LAST_NAME,WITNESS_GENDER," +
    		"  WITNESS_AGE,FATHER_NAME,MOTHER_NAME,SPOUSE_NAME,NATIONALITY,WITNESS_ADDRESS,COUNTRY_ID,STATE_ID,DISTRICT_ID," +
    		"  POSTAL_CODE,PHONE_NUMBER,LOAN_INFO,PENDING_TAX_DUTIES,REG_TXN_ID,CREATED_BY,CREATED_DATE) VALUES " +
    		"  (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";*/
	
	public static final String INSERT_OTHER_DEED_DTLS="INSERT INTO IGRS_REG_TXN_WITNESS_DTLS(WITNESS_TXN_NUM,WITNESS_FIRST_NAME,WITNESS_MIDDLE_NAME,WITNESS_LAST_NAME,WITNESS_GENDER," +
			"WITNESS_DOB,FATHER_NAME,MOTHER_NAME,SPOUSE_NAME,NATIONALITY,WITNESS_ADDRESS, POSTAL_CODE,PHONE_NUMBER," +
			"CREATED_BY,CREATED_DATE,REG_TXN_ID,DELETED_FLAG,RELATION_TYPE_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'0',?)";
    
   /* public static final String INSERT_PROP_LINKING_HISTORY ="INSERT INTO IGRS_REG_LNKNG_PROP_HISTORY (INITIATED_REG_TXN_ID,INITIATED_PROP_ID," +
    		"  OLD_REG_TXN_ID , OLD_PROP_ID, LINKING_STATUS, REG_COMPLETION_NUM, CREATED_BY,   CREATED_DATE,SNO ) " +
    		"  VALUES(?,?,?,?,?,?,?,?,?)";*/
    
    public static final String INSERT_PROP_LINKING_HISTORY = "INSERT INTO IGRS_REG_LNKNG_PROP_HISTORY (TXN_ID,REG_TXN_ID," +
    		"INITIATED_PROP_ID,OLD_REG_TXN_ID , OLD_PROP_ID,TRANSACTION_TYPE, LINKING_STATUS, REGISTRATION_NUMBER, CREATED_BY, " +
    		"  CREATED_DATE) VALUES(?,?,?,?,?,?,?,?,?,?)";
    
    //Commented by SIMRAN
    //public static final String GET_TRANSACTING_PARTY_DETAILS ="SELECT PARTY_TXN_ID,PARTY_FIRST_NAME,PARTY_LAST_NAME,PARTY_ROLE_TYPE_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME  FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE REG_TXN_ID=";
    
   /* public static final String GET_TRANSACTING_PARTY_DETAILS = "SELECT PARTY_TXN_ID,PARTY_FIRST_NAME," +
    		"PARTY_LAST_NAME,PARTY_TYPE_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME FROM IGRS_REG_TXN_PARTY_DETLS " +
    		"WHERE REG_TXN_ID=";*/
   /* public static final String GET_TRANSACTING_PARTY_DETAILS = "SELECT PARTY_TXN_ID,PARTY_FIRST_NAME," +
	"PARTY_LAST_NAME,PARTY_TYPE_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,ROLE_NAME, OFFICIAL_CHECK,APPELLATE_TYPE_ID,NAME_OF_OFFICIAL,PARTY_AGE,GUARDIAN_NAME  FROM IGRS_REG_TXN_PARTY_DETLS A  " +
	"WHERE REG_TXN_ID= ? AND (IS_APPLICANT='Y' OR IS_APPLICANT='N' OR IS_APPLICANT='C') 
	
    //above commented and Modified by akansha - GUardian ,middle and for will deed Authernticated  
     * 
     */
    public static final String GET_TRANSACTING_PARTY_DETAILS = " SELECT PARTY_TXN_ID,PARTY_FIRST_NAME," +
	"PARTY_LAST_NAME,PARTY_TYPE_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,ROLE_NAME, OFFICIAL_CHECK,APPELLATE_TYPE_ID,NAME_OF_OFFICIAL,PARTY_AGE,GUARDIAN_NAME,party_middle_name,MINOR_GUARDIAN,relation_type_name, UNIVERSAL_DEED_CLAIMANT_FLAG ,H_RELATION_TYPE_NAME FROM " +
    	"(SELECT A.PARTY_TXN_ID,A.PARTY_FIRST_NAME," +
	"A.PARTY_LAST_NAME,A.PARTY_TYPE_ID,A.ORGANIZATION_NAME,A.AUTHRZD_PERSN_NAME,A.ROLE_NAME, A.OFFICIAL_CHECK,A.APPELLATE_TYPE_ID,A.NAME_OF_OFFICIAL,A.PARTY_AGE,A.GUARDIAN_NAME,A.party_middle_name,A.MINOR_GUARDIAN,D.relation_type_name, A.UNIVERSAL_DEED_CLAIMANT_FLAG ,D.H_RELATION_TYPE_NAME    FROM IGRS_REG_TXN_PARTY_DETLS A ,IGRS_RELATION_TYPE_MASTER D  " +
	"WHERE REG_TXN_ID= ? AND (IS_APPLICANT='Y' OR IS_APPLICANT='N' OR IS_APPLICANT='C') AND D.relation_type_id =A.relation_type_id " +
	" UNION "+
	" SELECT A.PARTY_TXN_ID,A.PARTY_FIRST_NAME," +
	"A.PARTY_LAST_NAME,A.PARTY_TYPE_ID,A.ORGANIZATION_NAME,A.AUTHRZD_PERSN_NAME,A.ROLE_NAME, A.OFFICIAL_CHECK,A.APPELLATE_TYPE_ID,A.NAME_OF_OFFICIAL,A.PARTY_AGE,A.GUARDIAN_NAME,A.party_middle_name,A.MINOR_GUARDIAN, ' ' AS relation_type_name, A.UNIVERSAL_DEED_CLAIMANT_FLAG ,' ' AS H_RELATION_TYPE_NAME    FROM IGRS_REG_TXN_PARTY_DETLS A ,IGRS_RELATION_TYPE_MASTER D  " +
	"WHERE REG_TXN_ID= ? AND (IS_APPLICANT='Y' OR IS_APPLICANT='N' OR IS_APPLICANT='C') AND A.relation_type_id IS NULL )" +
	"ORDER BY PARTY_TXN_ID" ;
	//"AND UPPER(IS_APPLICANT)!= 'O' ";
    
   /* public static final String GET_TRANSACTING_PARTY_DETAILS = "SELECT P.PARTY_TXN_ID,P.PARTY_FIRST_NAME," +
	"P.PARTY_LAST_NAME,P.PARTY_TYPE_ID,P.ORGANIZATION_NAME,P.AUTHRZD_PERSN_NAME,P.ROLE_NAME, P.OFFICIAL_CHECK,P.APPELLATE_TYPE_ID,P.NAME_OF_OFFICIAL,O.PHOTO_FILENAME,O.PHOTO_FILEPATH FROM IGRS_REG_TXN_PARTY_DETLS P,IGRS_REG_TXN_PARTY_OTHER_DTLS O  " +
	"WHERE REG_TXN_ID= ? AND (IS_APPLICANT='Y' OR IS_APPLICANT='N' OR IS_APPLICANT='C') AND P.PARTY_OTHER_DETLS_ID=O.PARTY_OTHER_DETLS_ID" ;
    
    */
    //public static final String GET_WITNESS_DETAILS="SELECT WITNESS_FIRST_NAME,WITNESS_LAST_NAME,WITNESS_TXN_NUM FROM IGRS_REG_OTHR_DEED_DTLS WHERE STATUS IS NULL AND REG_TXN_ID=";
    
    public static final String GET_WITNESS_DETAILS = "SELECT WITNESS_FIRST_NAME,WITNESS_LAST_NAME,WITNESS_TXN_NUM FROM " +
    		"IGRS_REG_TXN_WITNESS_DTLS WHERE STATUS IS NULL AND DELETED_FLAG = '0' AND REG_TXN_ID= ?";
   
    public static final String GET_GOVT_OFFICIAL_lIST="SELECT   GOV_OFFICIAL_ID,GOV_OFFICIAL_NAME ,GOV_OFFICIAL_DESC FROM  IGRS_TYPEOF_GOVOFFICIAL_MASTER WHERE GOV_OFFICIAL_STATUS='A'"	;
    
   //commented by Simran
   // public static final String INSERT_PARTY_PRESENT_DETAILS="INSERT INTO IGRS_COMP_PARTY_PRESENT_DET(PARTY_TXN_ID, REG_TXN_ID, IS_GOV_OFFICIAL, TYPE_OF_GOV_EMP,PRESENTATION_DATE ,CREATED_BY, CREATED_DATE ) VALUES (?,?,?,?,?,?,?)";
    
    public static final String UPDATE_PARTY_AT_MAKER = "UPDATE IGRS_REG_TXN_PARTY_DETLS SET PARTY_PRESENT_AT_MAKER  = 'Y', UPDATE_BY = ? , UPDATE_DATE =to_date(?,'dd/mm/yy')" +
    		"  WHERE REG_TXN_ID = ? AND PARTY_TXN_ID = ?";
   
    public static final String UPDT_OTHR_DEED_TBL_WITNESS_PRESENT="UPDATE IGRS_REG_OTHR_DEED_DTLS SET WITNESS_PRESENT=?,PRESENTATION_DATE=?,UPDATE_BY=?,UPDATE_DATE=? WHERE REG_TXN_ID=? AND WITNESS_TXN_NUM =?";
   
    /*public static final String GET_TYPE_OF_AREA="SELECT P1.PROP_VAL_ID,P1.REG_TXN_ID,P2.AREA_ID,P2.VAL_TXN_ID FROM IGRS_REG_INIT_PROPRTY_DTLS P1," +
    											"IGRS_PROP_TXN_DETAILS P2 WHERE  P2.VAL_TXN_ID=P1.PROP_VAL_ID AND P1.REG_TXN_ID=";*/
    
    public static final String GET_TYPE_OF_AREA = "SELECT AREA_TYPE_ID FROM IGRS_REG_PROPRTY_DTLS " +
    		"WHERE  REG_TXN_ID= ?";
    
    public static final String CHECK_IS_POA="SELECT PARTY_TYPE_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE REG_TXN_ID = ?";
   // public static final String GET_PARTY_DETAILS="SELECT T1.REG_TXN_ID,T1.PARTY_FIRST_NAME||''||T1.PARTY_LAST_NAME , T1.PARTY_TXN_ID,T1.PHOTO_PROOF_TYPE_ID,T1.PHOTO_PROOF_ID ,P1.PHOTO_PROOF_TYPE_ID,P1.PHOTO_PROOF_TYPE_NAME FROM IGRS_REG_INIT_TXN_PARTY_DTLS T1," +
    //											 "IGRS_PHOTOID_PROOF_TYPE_MASTER P1 WHERE P1.PHOTO_PROOF_TYPE_ID = T1.PHOTO_PROOF_TYPE_ID AND REG_TXN_ID=";
    // modified for Govt - Rahul 
    public static final String GET_PARTY_DETAILS="SELECT REG_TXN_ID,PARTY_FIRST_NAME||''||PARTY_LAST_NAME,PARTY_TXN_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,Appellate_Type_Id , NAME_OF_OFFICIAL  FROM IGRS_REG_TXN_PARTY_DETLS  WHERE REG_TXN_ID= ?";
   
    public static final String GET_PHOTO_PROOF_NAME="SELECT PHOTO_PROOF_TYPE_NAME FROM IGRS_PHOTOID_PROOF_TYPE_MASTER WHERE PHOTO_PROOF_TYPE_ID= ?";
    
    public static final String INSERT_COMPLIANCE_ID ="INSERT INTO IGRS_REG_COMPLIANCE_TXN_DTLS(REG_TXN_ID,COMPLIANCE_ID,COMPLIANCE_STATUS,CREATED_BY,CREATED_DATE) VALUES (?,?,?,?,?)";

    public static final String GET_CHECKED_COMPLIANCE_ID="SELECT COMPLIANCE_ID FROM IGRS_REG_COMPLIANCE_TXN_DTLS WHERE COMPLIANCE_STATUS='A' AND REG_TXN_ID= ?";

    public static final String GET_LINKED_DUTIES="SELECT  DUTY_ALREADY_PAID,REG_ALREADY_PAID  FROM IGRS_REG_INIT_STAMP_DUTY_DETLS WHERE REG_TXN_ID= ?";

    public static final String GET_PROPERTY_ID_MARKET_VALUE="select PROPERTY_ID,MARKET_VALUE from IGRS_REG_PROPRTY_DTLS where REG_TXN_ID= ?";

    //Commented By Simran
   /* public static final String INSERT_INTO_CHECKLIST="INSERT INTO IGRS_REG_COMP_CHECKLIST(CHECKLIST_TXN_NUM,REG_TXN_ID,EXECUTION_DATE,DEED_EXE_OUT_FLG,COURT_DECREE_FLG," +
    												"ORDER_DATE,COURT_DCR_APL_FLG,DOC_AFTER_DEATH_FLG,UPLOAD_DEATH_CERT, " +
    												"UPLOAD_RELATION_PROOF,COMMENTS,POA_FLG,POA_FROM_MP_FLG,POA_AUTH_NUMBER,LAST_APPEAL_DATE,  " +
    												"CREATED_BY,CREATED_DATE,EXECUTED_OUT_IND_DATE)  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";*/

    public static final String INSERT_INTO_CHECKLIST = "INSERT INTO IGRS_REG_COMP_CHECKLIST(CHECKLIST_TXN_NUM,REG_TXN_ID,EXECUTION_DATE," +
    		"DEED_EXE_OUT_FLG,COURT_DECREE_FLG,ORDER_DATE,COURT_DCR_APL_FLG,DOC_AFTER_DEATH_FLG," +
    		"POA_FLG,LAST_APPEAL_DATE,CREATED_BY,CREATED_DATE,EXECUTED_OUT_IND_DATE,DELETED_FLAG)  " +
    		"VALUES (?,?,to_date(?,'dd/mm/yyyy'),?,?,to_date(?,'dd/mm/yyyy'),?,?,?,to_date(?,'dd/mm/yyyy'),?,to_date(?,'dd/mm/yyyy'),to_date(?,'dd/mm/yyyy'),'0')";

 //ADDED BY SIMRAN FOR REG COMP CHECKER
    
    //public static final String INSERT_LINKED_AMOUNTS_CHECKER ="INSERT INTO IGRS_REG_COMP_PROP_PYMNT_LNKNG(PROPERTY_ID,REG_TXN_ID,LINKED_REG_TXN_ID," +
	//"LINKED_ESTAMP_CODE,LINKED_PHY_STAMP_CODE,REG_FEE,STAMP_DUTY,BALANCE_DUTY,BALANCE_FEE,SNO) " +
	//"VALUES(?,?,?,?,?,?,?,?,?,IGRS_RCOM_PROP_PMNT_LNK_SEQ.NEXTVAL)";
    
    public static final String INSERT_LINKED_AMOUNTS_CHECKER = "INSERT INTO IGRS_REG_CHK_PROP_PYMNT_LNKNG" +
	"(PROP_LNK_TXN_ID,PROPERTY_ID,REG_TXN_ID,REGISTRATION_NUMBER,LINKED_ESTAMP_CODE," +
	"LINKED_PHY_STAMP_CODE,REG_FEE,STAMP_DUTY,CREATED_BY,CREATED_DATE, DELETE_FLAG,OLD_REGISTRATION_NUMBER,DENOTING_FLAG,LINKING_FLAG,OLD_REG_DATE)" +
	" VALUES(IGRS_REG_CHK_PROP_PMT_LNKG_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,'0',?,?,?,TO_DATE(?,'dd/mm/yyyy'))";
    
  /*  public static final String INSERT_HOLD_TABLE_DATA_CHECKER="INSERT INTO IGRS_REG_CMPLTN_CHECKER_HOLD(REG_TXN_ID,HLD_FLAG,FORWARD_PAGE,CREATED_DATE,CREATED_BY)" +"VALUES (?,?,?,?,?)";*/
    public static final String INSERT_HOLD_TABLE_DATA_CHECKER="INSERT INTO IGRS_REG_CMPLTN_CHECKER_HOLD(REG_TXN_ID,HLD_FLAG,FORWARD_PAGE,CREATED_DATE,CREATED_BY,REASON_FOR_HOLD,REMARKS_FOR_HOLD)" +"VALUES (?,?,?,?,?,?,?)";

    
    //END ADDED BY SIMRAN
											

    public static final String GET_CHECKLIST_TXN_NUM="SELECT IGRS_REG_COMP_CHECKLIST_SEQ.NEXTVAL FROM DUAL";

    public static final String GET_FINAL_PAYMENT_AMOUNT_MAKER="SELECT UNIQUE BALANCE_DUTY,BALANCE_FEE FROM  IGRS_REG_INIT_PROP_PYMNT_LNKNG WHERE  STATUS IS NULL AND REG_TXN_ID = ?";

    public static final String GET_REG_COMP_PAYMENT_FLAG ="SELECT PAYMENT_FLAG from IGRS_REG_COMPLETE_TXN_DETLS where TRANSACTION_ID= ?";

    public static final String INSERT_REG_COMP_PAYMENT_DETLS ="INSERT INTO IGRS_REG_COMPLETE_TXN_DETLS(TRANSACTION_ID,ESTAMP_AMOUNT,PAYMENT_FLAG,CREATED_BY,CREATED_DATE) VALUES(?,?,?,?,?)";

   /* public static final String GET_CAVEAT_DETAILS="SELECT TRANSACTION_ID,CAVEAT_TYPE_ID,STAY_ORDER_NO,STAY_ORDER_DETAILS,CAVEAT_DETAILS,REGISTRATION_ID,CAVEAT_STATUS,STAY_ORDER_START_DATE,STAY_ORDER_UPTO_DATE ,PROPERTY_TXN_LOCK " +
												"FROM IGRS_CAVEAT_TXN WHERE  CAVEAT_STATUS='LOGGED' AND REGISTRATION_ID =";*/
    
    public static final String GET_CAVEAT_DETAILS="SELECT DISTINCT a.TRANSACTION_ID,a.CAVEAT_TYPE_ID,a.STAY_ORDER_NO," +
    		"a.STAY_ORDER_DETAILS,a.CAVEAT_DETAILS,a.REGISTRATION_ID,a.CAVEAT_STATUS," +
    		"a.STAY_ORDER_START_DATE,a.STAY_ORDER_UPTO_DATE ,a.PROPERTY_TXN_LOCK,b.PROPERTY_TXN_ID FROM IGRS_CAVEAT_TXN a," +
    		"IGRS_CAVEAT_PROPERTY_MAP b WHERE  " +
    		"a.CAVEAT_STATUS='LOGGED' AND a.REGISTRATION_ID =? AND b.PROPERTY_TXN_ID = ? AND a.TRANSACTION_ID = b.CAVEAT_TXN_ID";
    
    //public static final String GET_BANK_CAVEAT_DETAILS="SELECT CAVEAT_BANK_TXN_ID,OTT_ID,LOAN_ACCOUNT_NO,BANK_NAME, REGISTRATION_ID FROM  IGRS_CAVEAT_BANK_TXN WHERE CAVEAT_STATUS  ='LOGGED' AND  REGISTRATION_ID =";
    
    public static final String GET_BANK_CAVEAT_DETAILS="SELECT DISTINCT a.CAVEAT_BANK_TXN_ID,a.OTT_ID,a.LOAN_ACCOUNT_NO," +
    		"a.BANK_NAME, a.REGISTRATION_ID,b.PROPERTY_TXN_ID FROM " +
    		"IGRS_CAVEAT_BANK_TXN a,IGRS_OTT_PROP_MAPPING b WHERE " +
    		"a.CAVEAT_STATUS  ='LOGGED' AND  a.REGISTRATION_ID =? AND b.PROPERTY_TXN_ID = ? AND a.OTT_ID = b.OTT_ID";

    public static final String GET_CAVEAT_NAME="SELECT CAVEAT_TYPE_NAME  FROM IGRS_CAVEAT_TYPE_MASTER WHERE CAVEAT_TYPE_ID = ?";

    public static final String GET_PARTY_ROLE_NAME="SELECT PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER WHERE PARTY_TYPE_ID= ?";
    //Commented by Simran
    //public static final String GET_LINKED_REG_NUMBER="SELECT OLD_REG_TXN_ID FROM IGRS_REG_LNKNG_PROP_HISTORY WHERE  INITIATED_REG_TXN_ID =";
    
    public static final String GET_LINKED_REG_NUMBER = "SELECT DISTINCT REGISTRATION_NUMBER, OLD_PROP_ID FROM IGRS_REG_LNKNG_PROP_HISTORY WHERE  REG_TXN_ID = ?";
    
    public static final String GET_LINKED_PROPERTY_ID = "SELECT OLD_PROP_ID FROM IGRS_REG_LNKNG_PROP_HISTORY WHERE  REG_TXN_ID =";
    
    public static final String GET_LOCKED_PROPERTY_ID="SELECT PROPERTY_TXN_ID,CAVEAT_PROPERTY_MAP_ID  FROM IGRS_CAVEAT_PROPERTY_MAP WHERE CAVEAT_TXN_ID= ?";
    
    //Commented by Simran
    //public static final String DEL_FROM_PRESENTATION_TBL="DELETE FROM IGRS_COMP_PARTY_PRESENT_DET WHERE REG_TXN_ID=";

    public static final String UPDATE_PRESENTATION_AT_MAKER = "UPDATE IGRS_REG_TXN_PARTY_DETLS SET PARTY_PRESENT_AT_MAKER  = NULL WHERE REG_TXN_ID =";
    
	public static final String HOLD_DATA = "SELECT HOLD_ID, HOLD_PAGE_NAME FROM IGRS_REG_HOLD_MASTER WHERE STATUS = 'A'";

	public static final String GET_HOLD_NAME= "SELECT HOLD_PAGE_NAME FROM IGRS_REG_HOLD_MASTER WHERE STATUS = 'A' AND HOLD_ID= ? ";

	public static final String INSERT_COMPLIANCE_DATA="INSERT INTO IGRS_REGCOMP_COMPLIANCE_DATA(PARTY_TXN_ID,PHOTO_FILE_NAME,PHOTO_FILE_PATH,PROOF_ID_FILE_NAME,PROOF_ID_FILE_PATH,CREATED_BY,CREATED_DATE)" +
														"VALUES (?,?,?,?,?,?,?)";
	
	//commented by Simran
	//public static final String GET_REG_INIT_NUMBER="SELECT REG_INIT_ID FROM  IGRS_REG_COMPLETION_DETAILS WHERE REG_COMP_NUMBER =";
	
	public static final String GET_REG_INIT_NUMBER="SELECT REG_TXN_ID FROM  IGRS_REG_TXN_DETLS WHERE REGISTRATION_NUMBER = ?";
	
	 //added by simran
    //public static final String UPDATE_LINKED_CHCEKER = "UPDATE IGRS_REG_COMP_PROP_PYMNT_LNKNG set PROPERTY_ID = ?,REG_TXN_ID = ?,LINKED_REG_TXN_ID = ?," +
    		//"LINKED_ESTAMP_CODE = ?,LINKED_PHY_STAMP_CODE = ?,REG_FEE = ?,STAMP_DUTY = ?,BALANCE_DUTY = ?,BALANCE_FEE = ? where REG_TXN_ID=";
    public static final String UPDATE_LINKED_CHCEKER = "UPDATE IGRS_REG_CHK_PROP_PYMNT_LNKNG SET DELETE_FLAG = '1' , UPDATE_BY = ? ,UPDATE_DATE = to_date(?, 'dd/mm/yyyy') WHERE REG_TXN_ID =?";

    // Added by Simran for caveat Details on checklist page
    
    public static final String GET_CAVEAT_COMPLETE_DETAILS = "SELECT TRANSACTION_ID,INSTITUTE_NAME,INSTITUTE_ADDRESS," +
    		"INSTITUTE_REP_NAME,(SELECT CAVEAT_TYPE_NAME FROM IGRS_CAVEAT_TYPE_MASTER WHERE CAVEAT_TYPE_ID=IGRS_CAVEAT_TXN.CAVEAT_TYPE_ID)," +
    		"STAY_ORDER_NO,STAY_ORDER_DETAILS,to_char(STAY_ORDER_START_DATE,'dd/mm/yyyy'),to_char(STAY_ORDER_UPTO_DATE,'dd/mm/yyyy')," +
    		"CAVEAT_DETAILS,REMARKS,REGISTRATION_ID,TO_CHAR(CAVEAT_LOGGED_DATE,'DD/MM/YYYY')," +
    		"TO_CHAR(CAVEAT_RELEASE_DATE,'DD/MM/YYYY'),REASON_FOR_RELEASE,REMARKS_FOR_RELEASE," +
    		"(SELECT PROPERTY_TXN_ID FROM IGRS_CAVEAT_PROPERTY_MAP PM WHERE PM.CAVEAT_TXN_ID=TRANSACTION_ID) " +
    		"FROM IGRS_CAVEAT_TXN  WHERE TRANSACTION_ID= ?";
    
    public static final String GET_BANK_CAVEAT_DETLS = "SELECT CTX.CAVEAT_BANK_TXN_ID, CTX.OTT_ID, CTX.LOAN_ACCOUNT_NO," +
    		"TO_CHAR(CTX.LOAN_END_DATE, 'DD/MM/YYYY') AS LOAN_END_DATE,CTX.LOAN_AMOUNT," +
    		" CTX.LOAN_SECURED_AMOUNT, CTX.NO_OF_INSTALLMENTS, CTX.BANK_NAME, CTX.BANK_ADDRESS, " +
    		"CTX.BANK_REP_NAME,(SELECT CAVEAT_TYPE_NAME FROM IGRS_CAVEAT_TYPE_MASTER WHERE CAVEAT_TYPE_ID= CTX.CAVEAT_TYPE_ID), " +
    		"CTX.REGISTRATION_ID,TO_CHAR(CTX.CAVEAT_LOGGED_DATE, 'DD/MM/YYYY') " +
    		"AS CAVEAT_LOGGED_DATE, TO_CHAR(CTX.CAVEAT_RELEASE_DATE, 'DD/MM/YYYY') AS CAVEAT_RELEASE_DATE," +
    		"(SELECT PROPERTY_TXN_ID FROM IGRS_OTT_PROP_MAPPING PM WHERE PM.OTT_ID=CTX.OTT_ID)," +
    		"CTX.REMARKS_FOR_RELEASE, CTX.REASON_FOR_RELEASE FROM IGRS_CAVEAT_BANK_TXN CTX WHERE 1 = 1  " +
    		"AND CTX.CAVEAT_BANK_TXN_ID = ?";
    
    public static final String INSERT_OTHER_DEED_DETLS = "INSERT INTO IGRS_REG_OTHR_DEED_DTLS" +
    		"(OTH_TXN_ID,REG_TXN_ID,PENDING_TAX_DUTIES,LOAN_INFO,CASE_OR_CHARGE,RIGHT_TO_SALE,CREATED_BY,CREATED_DATE)" +
    		" VALUES(IGRS_OTHER_DEED_DETLS_SEQ.NEXTVAL, ?,?,?,?,?,?,?)";
    
    public static final String CHECK_DATA = "SELECT COUNT(*) FROM IGRS_REG_OTHR_DEED_DTLS WHERE REG_TXN_ID = ?";
    
    public static final String UPDATE_OTHER_DEED_DETLS = "UPDATE IGRS_REG_OTHR_DEED_DTLS SET OTH_TXN_ID = IGRS_OTHER_DEED_DETLS_SEQ.NEXTVAL," +
    		"PENDING_TAX_DUTIES = ?,LOAN_INFO = ?,CASE_OR_CHARGE = ?, RIGHT_TO_SALE = ? ,UPDATE_BY = ?,UPDATE_DATE = ? WHERE REG_TXN_ID = ?";
    
    public static final String CHECK_POA = "SELECT REG_APP_NO FROM IGRS_POA_PARTY_DTLS WHERE POA_TXN_ID = ?";
    
    public static final String GET_PARTY_NAME = "SELECT PARTY_FIRST_NAME,AUTHRZD_PERSN_NAME FROM IGRS_REG_TXN_PARTY_DETLS WHERE REG_TXN_ID = ?";
    
    public static final String GET_PROPIDS = "SELECT PROPERTY_ID FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID = ?";

    public static final String GET_PARTY_TXN_ID = "SELECT PARTY_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE REG_TXN_ID = ? AND PARTY_FIRST_NAME = ? OR REG_TXN_ID = ? AND AUTHRZD_PERSN_NAME = ? ";
    
    public static final String INSERT_DEATH_CERT_DETAILS = "INSERT INTO IGRS_REG_COMP_DEATH_UPLOAD(DOC_AFTER_DEATH,CHECKLIST_TXN_NUM,UPLOAD_DEATH_CERT_FILENAME,DOC_AFTER_DEATH_PATH," +
    		"UPLOAD_RELATION_FILENAME,RELTN_PROOF_PATH,COMMENTS,CREATED_BY,CREATED_DATE,PARTY_ID,DELETED_FLAG) VALUES(IGRS_REG_COMP_DEATH_UPLOAD_SEQ.NEXTVAL,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),?,'0')";

    public static final String INSERT_POA_DETAILS = "INSERT INTO IGRS_REG_COMP_POA(POA_ID,CHECKLIST_TXN_NUM,POA_FROM_MP_FLG,POA_AUTH_NUMBER," +
    		"POA_UPLOAD_DOC_FILENAME,POA_UPLOAD_DOC_PATH,CREATED_BY,CREATED_DATE,DELETED_FLAG) " +
    		"VALUES(IGRS_REG_COMP_POA_SEQ.NEXTVAL,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),'0')";
    
    public static final String DEL_CHECKLIST_MAIN = "UPDATE IGRS_REG_COMP_CHECKLIST SET DELETED_FLAG = 1, UPDATE_BY = ? , UPDATE_DATE = to_date(?,'dd/mm/yyyy') WHERE REG_TXN_ID = ?";
    
    public static final String DEL_CHECKLIST_DTH = "UPDATE IGRS_REG_COMP_DEATH_UPLOAD SET DELETED_FLAG = 1 , UPDATE_BY = ? , UPDATE_DATE = to_date(?,'dd/mm/yyyy') WHERE CHECKLIST_TXN_NUM = ?";
    
    public static final String DEL_CHECKLIST_POA = "UPDATE IGRS_REG_COMP_POA SET DELETED_FLAG = 1, UPDATE_BY = ? , UPDATE_DATE = to_date(?,'dd/mm/yyyy') WHERE CHECKLIST_TXN_NUM = ?";
    
    public static final String CHECK_CHECKLIST = "SELECT CHECKLIST_TXN_NUM FROM IGRS_REG_COMP_CHECKLIST WHERE deleted_flag = '0' and REG_TXN_ID = ?";
    
    public static final String GET_LOCKING_DETLS = "SELECT LOCK_STATUS_ID FROM IGRS_PROP_LOCK_TXN_DETLS WHERE STATUS_FLAG = 'A' AND REGISTRATION_NUMBER = ? AND PROPERTY_TXN_ID = ?";
    
    public static final String GET_PARTY_ROLE_IDS = "SELECT c.PARTY_TYPE_ID FROM IGRS_REG_INIT_PROP_TRANS_MAP a, IGRS_REG_TXN_DETLS b," +
    		" IGRS_REG_TXN_PARTY_DETLS c WHERE " +
    		"a.PROPERTY_ID = ? AND b.REG_TXN_ID = ? AND" +
    		" a.REG_TXN_ID = b.REG_TXN_ID AND a.PARTY_TXN_ID = c.PARTY_TXN_ID";
    
    public static final String GET_REG_INIT_DEED_INST_ID ="SELECT DEED_ID,INSTRUMENTS_ID,ADJUDICATION_FLAG,CANCELLATION_TYPE_FLAG FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID= ?";
    
    public static final String GET_ADJUDICATED_DUTY_DETS="SELECT A.STAMP_DUTY,A.JANPAD_DUTY,A.MUNICIPAL_DUTY,A.UPKAR_DUTY,A.REGISTRATION_FEE,A.TOTAL_DUTY,B.MARKET_VALUE_SHARE,B.DUTY_ALREADY_PAID,B.REG_ALREADY_PAID FROM IGRS_REG_ADJUDCN_FINAL_DTLS A,IGRS_REG_INIT_STAMP_DUTY_DETLS B WHERE A.ADJUDCN_TXN_ID=B.REG_TXN_ID AND A.ADJUDCN_TXN_ID= ?";

    public static final String CHECK_ID="SELECT REG_TXN_ID,REGISTRATION_TXN_STATUS,ADJUDICATION_FLAG FROM IGRS_REG_TXN_DETLS " +
			"WHERE REG_TXN_ID= ?";
    
    public static final String PROPERTY_MAPPED=" select count(0) from IGRS_REG_DEED_PROP_MAP m where m.PROPERTY_TXN_ID =? ";

    public static final String GET_PROPERTY_ID="Select p.PROPERTY_ID from IGRS_REG_PROPRTY_DTLS p where REG_TXN_ID= ? ORDER BY p.PROPERTY_ID ASC";
    
    public final static String SEARCH_BY_REGNUMBER="SELECT count(1) FROM IGRS_REG_MKR_PROP_PYMNT_LNKNG "
										+ "WHERE DELETE_FLAG IS NULL AND REGISTRATION_NUMBER=?" ;
    
    public final static String SEARCH_BY_ESTAMP="SELECT count(1) FROM IGRS_REG_MKR_PROP_PYMNT_LNKNG "
										+ "WHERE LINKED_ESTAMP_CODE=?";
    
    public final static String SEARCH_BY_PHYSTAMP="SELECT count(1) FROM IGRS_REG_INIT_PROP_PYMNT_LNKNG "
										+ "WHERE LINKED_ESTAMP_CODE=?";
    
    public final static String SAVE_HOLD_DATA="SELECT COUNT(*) FROM  IGRS_REG_TXN_HOLD WHERE REG_TXN_ID= ? AND HOLD_ID= ?";


    public final static String UPDATE_HOLD_DATA="UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS = '11', UPDATE_BY =?, UPDATE_DATE = ? WHERE  REG_TXN_ID=?";

    public final static String UPDATE_HOLD_STATUS="UPDATE IGRS_REG_TXN_HOLD SET HOLD_STATUS=?,UPDATE_BY =?,UPDATE_DATE=?,HOLD_REMARKS=?, HOLD_DATE =? WHERE  REG_TXN_ID=? AND HOLD_ID=?";
	
    public final static String GET_REG_STATUS="SELECT REGISTRATION_TXN_STATUS FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID = ?";

    public final static String GET_HOLD_PAGE_NAME="SELECT HOLD_PAGE_NAME FROM IGRS_REG_HOLD_MASTER a , IGRS_REG_TXN_HOLD b WHERE " +
								"a.HOLD_ID = b.HOLD_ID AND b.HOLD_STATUS = 'Y' AND b.REG_TXN_ID = ?"; 

    public final static String UPDATE_HOLD_STATUS1="UPDATE IGRS_REG_TXN_HOLD SET HOLD_STATUS=?,UPDATE_BY =?,UPDATE_DATE= sysdate WHERE REG_TXN_ID=?";
	
    
    
    public final static String UPDATE_REG_STATUS="UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS = 10, UPDATE_BY=?,UPDATE_DATE =sysdate WHERE REG_TXN_ID = ?";  ///12 --hold resume at makers part
	
    public final static String GET_REG_FEE="SELECT REG_FEE,STAMP_DUTY FROM IGRS_REG_MKR_PROP_PYMNT_LNKNG WHERE REG_TXN_ID = ? AND DELETE_FLAG = '0'";
	
    public final static String CHK_ALRDY_LINKED="SELECT  COUNT(*) FROM  IGRS_REG_LNKNG_PROP_HISTORY WHERE   REG_TXN_ID=? AND INITIATED_PROP_ID =? AND LINKING_STATUS='I'";
	
    public final static String UPDATE_LINKNG_HISTORY= " UPDATE IGRS_REG_LNKNG_PROP_HISTORY SET REG_TXN_ID=?,INITIATED_PROP_ID =?, REGISTRATION_NUMBER=?,OLD_PROP_ID=?,TRANSACTION_TYPE = ? ,LINKING_STATUS='I',UPDATE_DATE=?,UPDATE_BY=? WHERE  REG_TXN_ID= ? AND INITIATED_PROP_ID =? AND LINKING_STATUS='I'";
	
    public final static String GET_PROP_PYMENT_LNKING="SELECT COUNT(*) FROM IGRS_REG_MKR_PROP_PYMNT_LNKNG WHERE REG_TXN_ID = ?";
    
    public final static String UPDATE_PROP_PYMENT_LNKING="UPDATE IGRS_REG_MKR_PROP_PYMNT_LNKNG SET DELETE_FLAG='1', UPDATE_BY = ?, UPDATE_DATE = to_date(?,'dd/mm/yyyy') WHERE REG_TXN_ID =?";

    public final static String GET_CONSUMED_BY_REGNUM="SELECT count(1) FROM IGRS_REG_CHK_PROP_PYMNT_LNKNG "
			+ "WHERE DELETE_FLAG is null and REGISTRATION_NUMBER= ?";
    		
    		
    public final static String  GET_CONSUMED_BY_ESTAMP=	"SELECT DISTINCT LINKED_ESTAMP_CODE FROM IGRS_REG_CHK_PROP_PYMNT_LNKNG "
			+ "WHERE LINKED_ESTAMP_CODE= ?";	
 // methode by akansha to check the consumption status of estamp
    public final static String  GET_CONSUMED_ESTAMP= "select ESTAMP_CODE from igrs_estamp_detls where (estamp_status = 'D' or ESTAMP_TYPE_ID = 2)and estamp_code =?";

    public final static String  GET_CONSUMED_BY_PHYSTAMP="SELECT DISTINCT LINKED_ESTAMP_CODE FROM IGRS_REG_COMP_PROP_PYMNT_LNKNG "
			+ "WHERE LINKED_ESTAMP_CODE= ?";

    public final static String  GET_WITNESS_DTLS="SELECT COUNT(*) FROM IGRS_REG_TXN_WITNESS_DTLS WHERE REG_TXN_ID = ?";
    		
    		
    public final static String  UPDATE_WITNESS_DTLS="UPDATE IGRS_REG_TXN_WITNESS_DTLS SET STATUS='D',DELETED_FLAG = '1' WHERE REG_TXN_ID = ?" ;

    public final static String  UPDATE_REG_DTLS="UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS = 13, UPDATE_BY = ?,UPDATE_DATE =? WHERE REG_TXN_ID = ?";
	
    public final static String CHECK_STATUS_M="SELECT REG_TXN_ID,REGISTRATION_TXN_STATUS FROM IGRS_REG_TXN_DETLS " +
			"WHERE   REG_TXN_ID= ?";
    
    public final static String  UPDATE_REG_PARTY_DTLS="UPDATE IGRS_REG_TXN_PARTY_DETLS SET PARTY_PRESENT_AT_MAKER  = NULL, " +
			"UPDATE_BY =?, UPDATE_DATE = to_date(?,'dd/mm/yyyy') WHERE REG_TXN_ID =?";
    
    public final static String  CHECK_ALREADY_INSERTED="SELECT COUNT(*) FROM IGRS_REG_CHK_PROP_PYMNT_LNKNG WHERE DELETE_FLAG = '0' and REG_TXN_ID = ?" ;

    public final static String  INSERT_COMPLIANCE_DATA2="INSERT INTO IGRS_REGCOMP_COMPLIANCE_DATA(PARTY_TXN_ID,PHOTO_FILE_NAME,PHOTO_FILE_PATH," +
			"CREATED_BY,CREATED_DATE)" +"VALUES (?,?,?,?,?)";

    public final  static String GET_DEED_ID="SELECT DEED_ID FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID = ?";

    public final  static String GET_INST_ID="SELECT INSTRUMENTS_ID FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID = ?";
    
    public static final String GET_INST_ID_FROM_PROP = "SELECT INSTRUMENTS_ID FROM IGRS_REG_TXN_DETLS reg,IGRS_REG_PROPRTY_DTLS prop WHERE prop.REG_TXN_ID = reg.REG_TXN_ID and prop.Property_id = ?";
    
    public static final String PARAM_ID_CONSENTER_DTLS = "select IGRS_REG_CONSENTER_SEQ.NEXTVAL from dual";
    
    public static final String INSERT_CONSENTER_DTLS="INSERT INTO IGRS_REG_CONSENTER_DETAILS(CONSENTER_TXN_NUM,CONSENTER_FIRST_NAME,CONSENTER_MIDDLE_NAME,CONSENTER_LAST_NAME,CONSENTER_GENDER," +
	"CONSENTER_AGE,FATHER_NAME,MOTHER_NAME,SPOUSE_NAME,NATIONALITY,CONSENTER_ADDRESS, POSTAL_CODE,PHONE_NUMBER," +
	"CREATED_BY,CREATED_DATE,REG_TXN_ID,DELETED_FLAG,RELATION_TYPE_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'0',?)";
    
    public final static String  GET_CONSENTER_DTLS="SELECT COUNT(*) FROM IGRS_REG_CONSENTER_DETAILS WHERE REG_TXN_ID = ?";
    
    public final static String  UPDATE_CONSENTER_DTLS="UPDATE IGRS_REG_CONSENTER_DETAILS SET STATUS='D',DELETED_FLAG = '1' WHERE REG_TXN_ID = ?" ;
    
    public final static String INSERT_DEED_DOC_DETLS = "UPDATE IGRS_REG_TXN_DETLS SET DEED_DOC_FILENAME = ? ,DEED_DOC_FILEPATH = ? , UPDATE_BY = ?, UPDATE_DATE = sysdate " +
    
    		"WHERE REG_TXN_ID = ?";
    
    public static final String UPDATE_PIN_STATUS = "UPDATE IGRS_REG_PROPRTY_DTLS SET PIN_FLAG = 'I' WHERE PROPERTY_ID = ? ";
    
    public static final String GET_HOLD_REMARKS = "SELECT HOLD_REMARKS FROM IGRS_REG_TXN_HOLD WHERE HOLD_ID = ?" +
    		" AND REG_TXN_ID = ? AND HOLD_STATUS = 'Y'";
    
    public static final String UPDATE_HOLD_RESUME_DETAILS = "UPDATE IGRS_REG_TXN_HOLD SET REMARKS = ?, SUPPORTED_DOC = ?, " +
    		"SUPPORTED_DOC_PATH = ? WHERE HOLD_ID = ? AND REG_TXN_ID = ?";
    
    public static final String GET_CONSENTER_DETAILS = "SELECT CONSENTER_FIRST_NAME,CONSENTER_LAST_NAME,CONSENTER_TXN_NUM FROM " +
    		"IGRS_REG_CONSENTER_DETAILS WHERE STATUS IS NULL AND DELETED_FLAG = '0' AND REG_TXN_ID= ?";
    
    public static final String INSERT_PARTY_OTHER_DETLS_2 = "INSERT INTO IGRS_REG_TXN_PARTY_OTHER_DTLS " +
	"(PARTY_OTHER_DETLS_ID," +
	"CREATED_BY,CREATED_DATE," +
	"PHOTO_FILENAME,PHOTO_FILEPATH)" +
	"VALUES(?,?,sysdate,?,?)";
    
    public static final String UPDATE_PARTY_OTHER_DETLS = "UPDATE IGRS_REG_TXN_PARTY_DETLS SET " +
		"PARTY_OTHER_DETLS_ID = ?,UPDATE_BY = ? , UPDATE_DATE = sysdate WHERE REG_TXN_Id = ? " +
		"AND PARTY_TXN_ID = ?";
    
    public static final String UPDATE_WITNESS_OTHER_DETLS = "UPDATE IGRS_REG_TXN_WITNESS_DTLS SET " +
	"PARTY_OTHER_DETLS_ID = ?,UPDATE_BY = ? , UPDATE_DATE = sysdate WHERE REG_TXN_Id = ? " +
	"AND WITNESS_TXN_NUM = ?";
    
    public static final String UPDATE_CONSENTER_OTHER_DETLS = "UPDATE IGRS_REG_CONSENTER_DETAILS SET " +
	"PARTY_OTHER_DETLS_ID = ?,UPDATE_BY = ? , UPDATE_DATE = sysdate WHERE REG_TXN_Id = ? " +
	"AND CONSENTER_TXN_NUM = ?";
    
    // added by vinay
    public static final String GET_PARTY_ROLE_NAME_HI="SELECT H_PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER WHERE PARTY_TYPE_ID= ?";
    
    
    // Added by SIMRAN for Estamp Linking
    
    public static final String GET_ESTAMP_TXN_ID  = "SELECT ESTAMP_TXN_ID FROM IGRS_ESTAMP_DETLS WHERE ESTAMP_CODE = ?";
    
    public static final String GET_REG_NUMBER_ESTAMP = "SELECT REG_INIT_ID FROM IGRS_ESTAMP_DETLS WHERE ESTAMP_CODE = ?";
    
    //public static final String GET_ROLE_UNIVERSAL_DEED = "SELECT ROLE_NAME FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARTY_TXN_ID = ?";
    public static final String GET_REG_INIT_DUTY_DETS_FOR_CONFIRMATION="SELECT STAMP_DUTY,GRAM_DUTY,NAGAR_DUTY,UPKAR,REG_FEE_AFTER_EXEMP,TOTAL_AFTER_EXEMP,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT,REG_FEE_AFTER_EXEMP,TOTAL_AFTER_EXEMP,EXEMP_DUTY,EXEMP_FEE FROM IGRS_REG_INIT_STAMP_DUTY_DETLS WHERE REG_TXN_ID=?";
    public static final String GET_REG_ADJU_DUTY_DETS_FOR_CONFIRMATION="SELECT STAMP_DUTY,JANPAD_DUTY,MUNICIPAL_DUTY,UPKAR_DUTY,REGISTRATION_FEE,TOTAL_DUTY,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT,REGISTRATION_FEE,TOTAL_DUTY,ADJUDICATION_REMARKS FROM IGRS_REG_ADJUDCN_FINAL_DTLS WHERE ADJUDCN_TXN_ID=?";
    
    public static final String GET_DEED_DOC_DETAILS = "SELECT DEED_DOC_FILENAME,DEED_DOC_FILEPATH FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID = ?";
    
    public static final String VALIDATE_DEED_DOC = "SELECT count(*) FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE DEED_DRAFT_ID = ?";
    
    public static final String VALIDATE_MASTER_DEED = "SELECT count(*) FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE DEED_DRAFT_ID = ? AND CREATED_BY is null";
    
    public static final String PROP_ID="SELECT PROP_TYPE_ID FROM IGRS_REG_PROPRTY_DTLS WHERE PROPERTY_ID=?";
    public static final String CHECK_CONSUMPTION_STATUS = "SELECT count(*) FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE DEED_DRAFT_STATUS = 'A' AND DEED_DRAFT_ID = ?";
    // To check Common Flow Flag for will deed - RAhul
    public static final String  GET_COMMON_FLOW_FLAG = "Select Common_Flow From Igrs_Deed_Instrument_Master Where " +
    													" Deed_Type_Id =(select DEED_ID from igrs_reg_txn_detls where REG_TXN_ID =?)";
    
    public static final String CHECK_ETOKEN_FLAG ="select ETOKEN_FLAG from IGRS_OFFICE_MASTER where OFFICE_ID=?";
    public static final String GET_COUNTER_MAPPING_ID ="SELECT COUNTER_NO FROM IGRS_ETOKEN_MAKER_DETAILS WHERE REG_ID=? AND FLAG='A'";
	public static final String GET_COUNTER_USER_ID="SELECT COUNTER_USER_ID FROM IGRS_COUNTER_SRO_MASTER WHERE COUNTER_MAPPING_ID=?";
    
   public static final String Change_estamp_status = "update igrs_estamp_detls set ESTAMP_STATUS ='D',CONSMPTN_STATUS='Consumed' where ESTAMP_CODE =?";
   
   //added by saurav
   public static final String GET_SLOT_STATUS="SELECT nvl(b.slot_upper_time,0), nvl(b.slot_upper_time_status,'na'), nvl(b.slot_lower_time_status,'na'), nvl(TO_CHAR(b.TIME_FROM,'hh24:mi:ss'),0), nvl(TO_CHAR(b.TIME_FROM+(b.slot_upper_time/1440),'hh24:mi:ss'),0),  to_char(a.slot_date,'yyyy-mm-dd'), a.slot_id FROM IGRS_REG_SLOT_BOOK_TXN_DTLS a, igrs_reg_slot_master b WHERE a.slot_id = b.slot_id(+) AND a.reg_txn_id=? and a.slot_date=to_date(sysdate,'dd-mm-yy') and a.office_id=? and a.office_id=b.office_id";
   public static final String GET_CYBER_TEHSIL_FORM_DETAILS = "SELECT form_vi,form_via,form_vib FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID = ?";
}