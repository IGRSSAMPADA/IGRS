package com.wipro.igrs.newreginit.sql;

public class RegCommonSQL {
	public static final String SELECT_APPL_TYPE = "SELECT A.APPELLATE_TYPE_ID,A.APPELLATE_TYPE_NAME FROM IGRS_APPELLATE_TYPE_MASTER A WHERE A.APPELLATE_TYPE_STATUS='A' ORDER BY A.APPELLATE_TYPE_ID DESC";
	public static final String SELECT_COUNTRY = "SELECT C.COUNTRY_ID,C.COUNTRY_NAME FROM IGRS_COUNTRY_MASTER C WHERE C.COUNTRY_STATUS='A'";
	public static final String SELECT_STATE = "SELECT STATE_ID,STATE_NAME FROM IGRS_STATE_MASTER WHERE STATE_STATUS='A'";
	public static final String SELECT_DISTRICT = "SELECT DISTRICT_ID,DISTRICT_NAME FROM IGRS_DISTRICT_MASTER WHERE DISTRICT_STATUS='A'";
	public static final String SELECT_PHOTO_PROOF = "SELECT P.PHOTO_PROOF_TYPE_ID,P.PHOTO_PROOF_TYPE_NAME FROM IGRS_PHOTOID_PROOF_TYPE_MASTER P WHERE P.PHOTO_PROOF_TYPE_STATUS='A' ORDER BY P.PHOTO_PROOF_TYPE_ID ASC";
	public static final String SELECT_DEED_TYPE = "SELECT DEED_TYPE_ID,DEED_TYPE_NAME FROM IGRS_DEED_TYPE_MASTER WHERE DEED_STATUS='A'";
	// following added by Roopam
	public static final String SELECT_DEED_TYPE_OPTIONAL = "SELECT DEED_TYPE_ID,DEED_TYPE_NAME FROM IGRS_DEED_TYPE_MASTER WHERE DEED_STATUS='A' AND DEED_CATEGORY='O'";
	public static final String SELECT_DEED_INSTRUMENT = "SELECT INSTRUMENT_ID,INSTRUMENT_NAME FROM IGRS_DEED_INSTRUMENT_MASTER WHERE INSTRUMENT_STATUS='A' AND DEED_TYPE_ID=?";
	public static final String SELECT_DEED_EXEMPTION = "SELECT EXEMPTION_ID,EXEMPTION_NAME FROM IGRS_DEED_EXEMPTION_MASTER WHERE EXEMPTION_STATUS='A' AND INSTRUMENT_ID=?";
	public static final String SELECT_DEED_EXEMPTION_ONDEED = "SELECT EXEMPTION_ID,EXEMPTION_NAME FROM IGRS_DEED_EXEMPTION_MASTER WHERE EXEMPTION_STATUS='A' AND DEED_TYPE_ID=?";
	public static final String SELECT_OTHER_FEE = "SELECT MP.PARAM_VALUE,MP.PARAM_TYPE,M.OPERATOR_NAME FROM IGRS_SERVICE_FEE_PARAM_MAPPING MP,IGRS_OPERATOR_MASTER M,IGRS_FUNCTION_MASTER F WHERE F.FUNCTION_ID=MP.FUNCTION_ID AND MP.OPERATOR_ID=M.OPERATOR_ID AND F.FUNCTION_ID=";
	public static final String INSERT_STAMP_DUTY = "INSERT INTO IGRS_ESTAMP_TXN_DETAILS (TRANSACTION_ID,ESTAMP_DUTY,ESTAMP_OTHER_FEES,ESTAMP_TOTAL,ESTAMP_STATUS,ESTAMP_PURPOSE,ESTAMP_DATE,ESTAMP_CODE,PAYMENT_TXN_ID) VALUES(?,?,?,?,'A',?,SYSDATE,?,?)";
	public static final String INSERT_REG_TXN = "INSERT INTO IGRS_REG_INITN_TXN_DETAILS IG (IG.TRANSACTION_ID,IG.ESTAMP_TXN_ID,IG.FUNCTION_ID,IG.APPLICATION_STATUS,IG.CREATED_BY,IG.CREATED_DATE) VALUES (?,?,?,'A','ADMIN',SYSDATE)";
	public static final String INSERT_TEMP_REG_TXN = "INSERT INTO IGRS_REG_INITN_TXN_DETAILS (TRANSACTION_ID,APPLICATION_STATUS) VALUES (?,?)";
	public static final String INSERT_REG_DEED = "INSERT INTO IGRS_REG_INITN_DEED_DETAILS ID (ID.REG_TXN_ID,ID.DEED_TYPE_ID,ID.INSTRUMENT_ID,ID.EXEMPTION_ID) VALUES (?,?,?,?)";
	public static final String INSERT_REG_TXN_PARTY = "INSERT INTO IGRS_REG_INITN_TXN_PARTY_DTLS (REG_TXN_ID, PARTY_TYPE_ID, PARTY_FIRST_NAME, PARTY_MIDDLE_NAME, PARTY_LAST_NAME,PARTY_GENDER, PARTY_AGE, NATIONALITY, COUNTRY_ID, STATE_ID,DISTRICT_ID, PARTY_ADDRESS, POSTAL_CODE, PHONE_NUMBER, MOBILE_NUMBER,EMAIL_ID, PHOTO_PROOF_TYPE_ID, PHOTO_PROOF_ID, BANK_NAME, BANK_ADDRESS,ORGANIZATION_NAME, GUARDIAN_NAME, MOTHER_NAME, CATEGORY_ID, CASTE_ID,RELIGION_ID, PARTY_THUMB_IMPRESSION, PARTY_PHOTO, PARTY_SIGNATURE) Values (?,?,?,?,?,?,?,?,?,?,?,?,?,?, ?,?, ?, ?, ?, ?,?, ?, ?, NULL, NULL,NULL, NULL, NULL, NULL)";
	// IGRS_REG_INITN_TXN_PARTY_DTLS IN reginit
	public static final String INSERT_EXECUTION_DET = "UPDATE IGRS_REG_TXN_PARTY_DETAILS SET DEED_EXECUTION_DATE=?,DEED_EXECUTED_OUT_INDIA=? WHERE REG_TXN_ID=? AND PARTY_TXN_ID=?";
	public static final String INSERT_REG_PROPERTY_DETAILS = "INSERT INTO  IGRS_REG_INIT_PROPERTY_DETAILS (" + "PROPERTY_TYPE_ID,DISTRICT_ID,TEHSIL_ID," + "WARD_PATWARI_ID,MOHALLA_VILLAGE_ID," + "AREA_TYPE_ID,MUNCIPAL_BODY_TYPE_ID," + "VIKAS_KHAND,RI_CIRCLE ,LAYOUT_DETAIL," + "KHASRA_NUMBER,NAZOOL_SHEET_NUMBER," + "RIN_PUSHTIKA_NUMBER,PROPERTY_ADDRESS," + "EAST_BOUNDARY,WEST_BOUNDARY,NORTH_BOUNDARY," + "SOUTH_BOUNDARY,PROPERTY_TXN_ID,UOM_ID," + "PROPERTY_L1_ID,PROPERTY_L2_ID,TOTAL_AREA," + "REG_TXN_ID) VALUES " + "(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?," + "?,?,?,?,?,?)";
	public static final String INSERT_REG_PROPERTY_FLOOR_DTLS = "INSERT INTO  IGRS_REG_INIT_PROP_FLOOR_DTLS (" + "FLOOR_TXN_ID,PROPERTY_TXN_ID,FLOOR_ID," + "TOTAL_AREA,CONSTRUCTED_AREA,PROPERTY_L1_ID," + "PROPERTY_L2_ID) VALUES(?,?,?,?,?,?,?)";
	public static final String INSERT_REG_PROP_SUBCLAUSE_MAP = "INSERT INTO  IGRS_REG_INIT_PROP_SCLAUSE_MAP (PROPERTY_TXN_ID," + "SUBCLAUSE_ID,SUBCLAUSE_VALUE,FLOOR_TXN_ID) VALUES (?,?,?,?)";
	public static final String INSERT_REG_PROPERTY_VALUE_DTLS = "INSERT INTO  IGRS_REG_INIT_PROP_VALUE_DTLS( " + "PROPERTY_TXN_ID,FLOOR_TXN_ID,MARKET_VALUE," + "CONSIDERATION_VALUE) VALUES (?,?,?,?)";
	// following added by roopam
	public static final String PROPERT_VAL_REQ_CHECK = "SELECT PROPERTY_RELATED_DEED FROM IGRS_DEED_TYPE_MASTER WHERE DEED_TYPE_ID=?";
	/*
	 * public static final String SELECT_PARTY_TYPE =
	 * "SELECT iptm.PARTY_TYPE_ID,PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER_TEMP iptm, IGRS_PARTY_TYPE_DEED_MAP_TEMP iptdm WHERE PARTY_TYPE_STATUS='A' AND iptm.PARTY_TYPE_ID=iptdm.PARTY_TYPE_ID AND iptdm.DEED_TYPE_ID="
	 * ;
	 */
	public static final String SELECT_PARTY_TYPE = "SELECT iptm.PARTY_TYPE_ID,PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER iptm, IGRS_PARTY_TYPE_DEED_MAP iptdm WHERE PARTY_TYPE_STATUS='A' AND MAPPING_STATUS='A' AND iptm.PARTY_TYPE_ID=iptdm.PARTY_TYPE_ID AND iptdm.DEED_TYPE_ID=?";
	/*
	 * public static final String INSERT_REG_TXN_PARTY_NEW =
	 * "INSERT INTO IGRS_REG_INIT_TXN_PARTY_TEMP VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
	 * ;
	 */
	// above commented and following added by roopam for removing temp.
	// public static final String INSERT_REG_TXN_PARTY_NEW =
	// "INSERT INTO IGRS_REG_INIT_TXN_PARTY_DTLS(REG_TXN_ID,PARTY_TYPE_ID, PARTY_FIRST_NAME, PARTY_MIDDLE_NAME, PARTY_LAST_NAME, PARTY_GENDER, PARTY_AGE, NATIONALITY, COUNTRY_ID, STATE_ID, DISTRICT_ID, PARTY_ADDRESS, POSTAL_CODE, PHONE_NUMBER, MOBILE_NUMBER, EMAIL_ID, PHOTO_PROOF_TYPE_ID, PHOTO_PROOF_ID, ORGANIZATION_NAME, AUTHRZD_PERSN_NAME, GUARDIAN_NAME, MOTHER_NAME, CASTE, RELIGION, PARTY_TXN_ID, IS_APPLICANT, IS_TXN_COMPLETE, DISABILITY, OWNERSHIP_SHARE, RELATION_WITH_OWNER, SHARE_OF_PROPERTY, PARTY_ROLE_TYPE_ID, CREATED_BY, CREATED_DATE, SPOUSE_NAME, OWNER_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?)";
	public static final String GET_REG_TXN_ID_SEQ = "SELECT IGRS_REG_TXN_ID_SEQ.NEXTVAL FROM DUAL";
	public static final String INSERT_REG_INIT_TXN_DETLS = "INSERT INTO IGRS_REG_INIT_TXN_DETLS VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	// public static final String UPDATE_REG_INIT_TXN_PARTY_DETLS =
	// "UPDATE IGRS_REG_INIT_TXN_PARTY_DTLS SET IS_TXN_COMPLETE='Y' WHERE REG_TXN_ID=";
	public static final String INSERT_POA_OWNER_MAPPING = "INSERT INTO IGRS_REG_INIT_POA_OWNER_MAP VALUES (?,?,?,?,sysdate,?,?)";
	public static final String DROP_REG_TXN_ID_SEQ = "DROP SEQUENCE IGRS_REG_TXN_ID_SEQ";
	public static final String RESTART_REG_TXN_ID_SEQ = "CREATE SEQUENCE IGRS_REG_TXN_ID_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER";
	public static final String PREVIOUS_REG_ID_DD = "SELECT SUBSTR (REG_TXN_ID, 0, 2) FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE CREATED_DATE = (SELECT MAX (CREATED_DATE) FROM IGRS_REG_INIT_TXN_PARTY_DTLS)";
	public static final String PREVIOUS_REG_ID_MM = "SELECT SUBSTR (REG_TXN_ID, 3, 2) FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE CREATED_DATE = (SELECT MAX (CREATED_DATE) FROM IGRS_REG_INIT_TXN_PARTY_DTLS)";
	public static final String PREVIOUS_REG_ID_YY = "SELECT SUBSTR (REG_TXN_ID, 5, 2) FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE CREATED_DATE = (SELECT MAX (CREATED_DATE) FROM IGRS_REG_INIT_TXN_PARTY_DTLS)";
	public static final String CURRENT_DATE_TIME = "select TO_CHAR(sysdate,'MM/dd/yyyy HH:mi:ss') from dual";
	public static final String PREVIOUS_CREATED_DATE = "SELECT CREATED_DATE FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE CREATED_DATE = (SELECT MAX (CREATED_DATE) FROM IGRS_REG_INIT_TXN_PARTY_DTLS)";
	// public static final String
	// GET_APPLICANT_REG_DETLS="select FIRST_NAME,MIDDLE_NAME,LAST_NAME,GENDER,NATIONALITY,COUNTRY_ID,STATE_ID,DISTRICT_ID,ADDRESS,POSTAL_CODE,PHONE_NUMBER,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,GUARDIAN_NAME,MOTHER_NAME,SPOUSE_NAME from IGRS_USER_REG_DETAILS where user_id=";
	// public static final String
	// INSERT_REG_DEED_DETLS="INSERT INTO IGRS_REG_INIT_DEED_DETLS(REG_TXN_ID,DEED_TYPE_ID,INSTRUMENT_ID,EXEMPTION_ID,CREATED_BY,CREATED_DATE) VALUES (?,?,?,?,?,sysdate)";
	// public static final String
	// INSERT_REG_PROPERTY_DETLS="INSERT INTO IGRS_REG_INIT_PROPRTY_DTLS(PROPERTY_ID,REG_TXN_ID,CREATED_BY,CREATED_DATE,PROP_VAL_ID,MARKET_VALUE) VALUES (?,?,?,sysdate,?,?)";
	// public static final String GET_PENDING_APPLICATIONS_DETLS =
	// "SELECT DISTINCT (RD.REG_TXN_ID), RD.CREATED_DATE, DM.DEED_TYPE_NAME, SUBSTR (RD.REG_TXN_ID, length(RD.REG_TXN_ID)-5, length(RD.REG_TXN_ID)) as sequence FROM IGRS_DEED_TYPE_MASTER DM, IGRS_REG_INIT_TXN_PARTY_DTLS RD, IGRS_REG_INIT_DEED_DETLS DD WHERE DM.DEED_TYPE_ID = DD.DEED_TYPE_ID AND RD.REG_TXN_ID = DD.REG_TXN_ID AND RD.IS_TXN_COMPLETE = 'N' AND RD.IS_APPLICANT = 'Y' AND (RD.CREATED_BY = ? OR RD.UPDATE_BY = ?) ORDER BY sequence DESC";
	// public static final String UPDATE_REG_INIT_PROP_DETLS =
	// "UPDATE IGRS_REG_INIT_PROPRTY_DTLS SET VIKAS_KHAND = ?,RI_CIRCLE = ?,LAYOUT_DETAIL = ?,KHASRA_NUMBER = ?,NAZOOL_SHEET_NUMBER = ?,RIN_PUSHTIKA_NUMBER = ?,PLOT_NUMBER = ?,PROPERTY_ADDRESS = ?,EAST_BOUNDARY = ?,WEST_BOUNDARY = ?,NORTH_BOUNDARY = ?,SOUTH_BOUNDARY = ?,UPDATE_BY = ?,UPDATE_DATE = sysdate,KHASRA_AREA=?,LAGAAN=?,PROPERTY_LANDMARK=? WHERE REG_TXN_ID = ? AND PROPERTY_ID = ?";
	public static final String GET_REG_PROPERTY_ID_SEQ = "SELECT IGRS_REG_PROPRTY_ID_SEQ.NEXTVAL FROM DUAL";
	// public static final String
	// INSERT_REG_PROP_TRANS_MAP="INSERT INTO IGRS_REG_INIT_PROP_TRANS_MAP(REG_TXN_ID,PROPERTY_ID,TRANS_PARTY_ID,CREATED_BY,CREATED_DATE,MAPPING_TXN_ID) VALUES (?,?,?,?,sysdate,IGRS_REG_TRANS_PROP_MAP_ID_SEQ.NEXTVAL)";
	public static final String GET_REG_TRANS_PARTY_ID_SEQ = "SELECT IGRS_REG_TRANS_PARTY_ID_SEQ.NEXTVAL FROM DUAL";
	public static final String GET_REG_TRANS_PARTY_PROP_MAP_ID_SEQ = "SELECT IGRS_REG_TRANS_PROP_MAP_ID_SEQ.NEXTVAL FROM DUAL";
	// public static final String
	// INSERT_OWNER_DETAILS="INSERT INTO IGRS_REG_INIT_TXN_PARTY_DTLS(REG_TXN_ID,PARTY_TYPE_ID,PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,PARTY_TXN_ID,IS_APPLICANT,IS_TXN_COMPLETE,SHARE_OF_PROPERTY,PARTY_ROLE_TYPE_ID,CREATED_BY,CREATED_DATE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate)";
	// public static final String
	// INSERT_DUTIES_DETAILS="INSERT INTO IGRS_REG_INIT_STAMP_DUTY_DETLS(DUTY_TXN_ID,REG_TXN_ID,STAMP_DUTY,GRAM_DUTY,NAGAR_DUTY,UPKAR,REG_FEE,TOTAL,CREATED_DATE,CREATED_BY,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID) VALUES(IGRS_REG_INIT_DUTY_ID_SEQ.NEXTVAL,?,?,?,?,?,?,?,sysdate,?,?,?,?)";
	public static final String GET_APPLICANT_DIST_ID = "SELECT DISTRICT_ID FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE UPPER(IS_APPLICANT)='Y' AND REG_TXN_ID=?";
	// FOLLOWING QUERIES FOR GETTING SAVED APPLICATION DETAILS
	// public static final String GET_SAVED_AAPLICANT_DETLS =
	// "SELECT * FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE IS_APPLICANT='Y' and  REG_TXN_ID=";
	/*
	 * public static final String GET_SAVED_TXN_PARTY_DETLS =
	 * "SELECT * FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE IS_APPLICANT='N' and  REG_TXN_ID="
	 * ; public static final String GET_SAVED_POA_OWNER_MAP_DETLS =
	 * "SELECT * FROM IGRS_REG_INIT_POA_OWNER_MAP WHERE REG_INIT_TXN_ID=";
	 * public static final String GET_SAVED_REGINIT_TXN_DETLS =
	 * "SELECT * FROM IGRS_REG_INIT_TXN_DETLS WHERE TRANSACTION_ID=";
	 */
	/*
	 * //FOLLOWING QUERIES FOR DELETING PARTIAL SAVED APPLICATIONS FROM
	 * DASHBOARD public static final String DEL_REG_INIT_TRANS_DETLS
	 * ="delete from IGRS_REG_INIT_TXN_PARTY_DTLS where REG_TXN_ID ="; public
	 * static final String DEL_REG_INIT_PROP_DETLS
	 * ="delete from IGRS_REG_INIT_PROPRTY_DTLS where REG_TXN_ID ="; public
	 * static final String DEL_REG_INIT_MAP_DETLS
	 * ="delete from IGRS_REG_INIT_POA_OWNER_MAP where REG_INIT_TXN_ID =";
	 * public static final String DEL_REG_INIT_DEED_DETLS
	 * ="delete from IGRS_REG_INIT_DEED_DETLS where REG_TXN_ID =";
	 */
	// FOLLOWING QUERIES FOR GETTING PARTIAL SAVED APPLICATION STATUSES
	public static final String GET_REG_INIT_TRANS_STATUS = "SELECT IS_APPLICANT,CREATED_DATE from IGRS_REG_INIT_TXN_PARTY_DTLS where REG_TXN_ID=? and CREATED_DATE=(select max(CREATED_DATE) from IGRS_REG_INIT_TXN_PARTY_DTLS where REG_TXN_ID=?)";
	public static final String GET_REG_INIT_PROP_STATUS = "SELECT EAST_BOUNDARY from IGRS_REG_INIT_PROPRTY_DTLS where REG_TXN_ID=";
	public static final String GET_REG_INIT_PROP_VAL_ID = "SELECT PROP_VAL_ID from IGRS_REG_INIT_PROPRTY_DTLS where REG_TXN_ID=?";
	public static final String GET_REG_INIT_MAP_STATUS = "SELECT REG_INIT_TXN_ID from IGRS_REG_INIT_POA_OWNER_MAP where REG_INIT_TXN_ID=";
	public static final String GET_REG_INIT_TXN_STATUS = "SELECT TRANSACTION_ID from IGRS_REG_INIT_TXN_DETLS where TRANSACTION_ID=";
	public static final String GET_REG_INIT_DEED_STATUS = "SELECT DEED_TYPE_ID from IGRS_REG_INIT_DEED_DETLS where REG_TXN_ID=";
	public static final String GET_REG_INIT_PROPERTY_ID = "SELECT PROPERTY_ID from IGRS_REG_INIT_PROPRTY_DTLS where CREATED_DATE=(SELECT MAX(CREATED_DATE) from IGRS_REG_INIT_PROPRTY_DTLS where REG_TXN_ID=? ) AND REG_TXN_ID=?";
	// FOLLOWING QUERIES FOR GETTING COUNTRY, STATE AND DISTRICT NAME FROM
	// DATABASE CORRESPONDING TO THE IDS PROVIDED
	public static final String GET_COUNTRY_NAME = "SELECT COUNTRY_NAME FROM IGRS_COUNTRY_MASTER WHERE COUNTRY_ID=?";
	public static final String GET_STATE_NAME = "SELECT STATE_NAME FROM IGRS_STATE_MASTER WHERE STATE_ID=?";
	public static final String GET_DISTRICT_NAME = "SELECT DISTRICT_NAME FROM IGRS_DISTRICT_MASTER WHERE DISTRICT_ID=?";
	public static final String GET_PHOTO_PROOF_NAME = "SELECT PHOTO_PROOF_TYPE_NAME FROM IGRS_PHOTOID_PROOF_TYPE_MASTER WHERE PHOTO_PROOF_TYPE_ID=?";
	public static final String GET_PARTY_ROLE_NAME = "SELECT PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER WHERE PARTY_TYPE_ID=?";
	public static final String GET_DEED_NAME = "SELECT DEED_TYPE_NAME FROM IGRS_DEED_TYPE_MASTER WHERE DEED_TYPE_ID=?";
	public static final String GET_INST_NAME = "SELECT INSTRUMENT_NAME FROM IGRS_DEED_INSTRUMENT_MASTER WHERE INSTRUMENT_ID=?";
	public static final String GET_FAMILY_FLAG = "SELECT FAMILY_FLAG FROM IGRS_DUTY_TXN_DETLS WHERE DUTY_TXN_ID=?";
	// public static final String
	// GET_EXMP_NAME="SELECT EXEMPTION_NAME FROM IGRS_DEED_EXEMPTION_MASTER WHERE EXEMPTION_ID=?";
	public static final String GET_SUBCLASE_NAME = "SELECT SUB_CLAUSE_DESC FROM IGRS_SUB_CLAUSE_MASTER WHERE SUB_CLAUSE_ID=?";
	public static final String GET_CATEGORY_NAME = "SELECT CATEGORY_NAME FROM IGRS_PERSON_CATEGORY_MASTER WHERE CATEGORY_ID=?";
	// FOLLOWING QUERY FOR GETTING PROPERTY DETAILS FOR DASHBOARD FROM DATABASE
	/*
	 * public static final String
	 * GET_PROP_DETLS_DASHBOARD="SELECT A.DISTRICT_ID,"+ "DISTRICT_NAME,"+
	 * "A.TEHSIL_ID,"+ "TEHSIL_NAME,"+ "A.AREA_ID,"+ "AREA_TYPE_NAME,"+
	 * "A.WARD_ID,"+ "WARD_PATWARI_NAME,"+ "WARD_OR_PATWARI,"+ "A.MAHALLA_ID,"+
	 * "MOHALLA_VILLAGE_NAME,"+ "A.GOV_BODY_ID,"+ "MUNICIPAL_BODY_NAME,"+
	 * "A.PROP_TYPE_ID,"+ "PROPERTY_TYPE_NAME,"+ "AREA,AREA_UNIT_ID "+
	 * "FROM IGRS_PROP_TXN_DETAILS A, IGRS_DISTRICT_MASTER B, IGRS_TEHSIL_MASTER C,"
	 * +
	 * "IGRS_AREA_TYPE_MASTER D, IGRS_WARD_PATWARI_MASTER E, IGRS_MOHALLA_VILLAGE_MASTER F,"
	 * + "IGRS_MUNICIPAL_BODY_MASTER G, IGRS_PROPERTY_TYPE_MASTER H "+
	 * "WHERE B.DISTRICT_ID = A.DISTRICT_ID "+ "AND C.TEHSIL_ID = A.TEHSIL_ID "+
	 * "AND D.AREA_TYPE_ID=A.AREA_ID "+ "AND E.WARD_PATWARI_ID=A.WARD_ID "+
	 * "AND F.MOHALLA_VILLAGE_ID=A.MAHALLA_ID "+
	 * "AND G.MUNICIPAL_BODY_ID=A.GOV_BODY_ID "+
	 * "AND H.PROPERTY_TYPE_ID=A.PROP_TYPE_ID "+ "AND VAL_TXN_ID =";
	 */
	// FOLLOWING QUERY FOR GETTING PARTY ROLE TYPE IDS FROM DB
	public static final String GET_PARTY_ROLE_ID_DASHBOARD = "select PARTY_ROLE_TYPE_ID from IGRS_REG_INIT_TXN_PARTY_DTLS where REG_TXN_ID=";
	public static final String GET_POA_LIST_DASHBOARD = "select PARTY_FIRST_NAME,PARTY_LAST_NAME,AUTHRZD_PERSN_NAME,PARTY_TXN_ID from IGRS_REG_INIT_TXN_PARTY_DTLS where (PARTY_ROLE_TYPE_ID=50003 or PARTY_ROLE_TYPE_ID=50007 or PARTY_ROLE_TYPE_ID=50011 or PARTY_ROLE_TYPE_ID=50012) and  REG_TXN_ID=";
	public static final String GET_OWNER_LIST_DASHBOARD = "select PARTY_FIRST_NAME,PARTY_LAST_NAME,AUTHRZD_PERSN_NAME,PARTY_TXN_ID from IGRS_REG_INIT_TXN_PARTY_DTLS where (PARTY_ROLE_TYPE_ID=50004 or PARTY_ROLE_TYPE_ID=50009 or PARTY_ROLE_TYPE_ID=50010) and  REG_TXN_ID=";
	// FOLLOWING QUERIES FOR MULTIPLE PROPERTIES AND NEW CONFIRMATION SCREEN
	// public static final String
	// GET_PROPERTY_ID_MARKET_VALUE="select PROPERTY_ID,MARKET_VALUE from IGRS_REG_INIT_PROPRTY_DTLS where REG_TXN_ID=";
	/*
	 * public static final StringGET_TRANSACTING_PARTY_DETS=
	 * "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_ROLE_TYPE_ID "
	 * + "FROM IGRS_REG_INIT_TXN_PARTY_DTLS A,"+ "IGRS_PARTY_TYPE_MASTER B,"+
	 * "IGRS_REG_INIT_PROP_TRANS_MAP C "+
	 * "WHERE B.PARTY_TYPE_ID=A.PARTY_ROLE_TYPE_ID "+
	 * "AND C.TRANS_PARTY_ID=A.PARTY_TXN_ID "+ "AND C.REG_TXN_ID=A.REG_TXN_ID "+
	 * "AND C.REG_TXN_ID=? "+ "AND C.PROPERTY_ID=? ORDER BY A.PARTY_TXN_ID";
	 */
	public static final String GET_APPLICANT_PARTY_DETS = "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_ROLE_TYPE_ID " + "FROM IGRS_REG_INIT_TXN_PARTY_DTLS A," + "IGRS_PARTY_TYPE_MASTER B " + "WHERE B.PARTY_TYPE_ID=A.PARTY_ROLE_TYPE_ID " + "AND A.IS_APPLICANT='Y' " + "AND A.REG_TXN_ID=?";
	/*
	 * public static final StringGET_PARTY_DETS=
	 * "SELECT A.PARTY_TYPE_ID, B.APPELLATE_TYPE_NAME, A.PARTY_FIRST_NAME, "+
	 * "A.PARTY_MIDDLE_NAME, A.PARTY_LAST_NAME, "+
	 * "A.PARTY_GENDER, A.PARTY_AGE, "+ "A.NATIONALITY,C.COUNTRY_NAME, "+
	 * "D.STATE_NAME,E.DISTRICT_NAME, "+ "A.PARTY_ADDRESS, A.POSTAL_CODE, "+
	 * "A.PHONE_NUMBER, A.MOBILE_NUMBER, "+
	 * "A.EMAIL_ID, A.PHOTO_PROOF_TYPE_ID, "+
	 * "A.PHOTO_PROOF_ID, A.ORGANIZATION_NAME, "+
	 * "A.AUTHRZD_PERSN_NAME, A.GUARDIAN_NAME, "+ "A.MOTHER_NAME, A.CASTE, "+
	 * "A.RELIGION, A.PARTY_TXN_ID, "+ "A.DISABILITY, A.OWNERSHIP_SHARE, "+
	 * "A.RELATION_WITH_OWNER, A.SHARE_OF_PROPERTY, "+
	 * "A.PARTY_ROLE_TYPE_ID, F.PARTY_TYPE_NAME,A.SPOUSE_NAME,A.OWNER_ID "+
	 * "FROM IGRS_REG_INIT_TXN_PARTY_DTLS A, "+
	 * "IGRS_APPELLATE_TYPE_MASTER B, "+ "IGRS_COUNTRY_MASTER C, "+
	 * "IGRS_STATE_MASTER D, "+ "IGRS_DISTRICT_MASTER E, "+
	 * "IGRS_PARTY_TYPE_MASTER F "+
	 * "WHERE A.PARTY_TYPE_ID=B.APPELLATE_TYPE_ID "+
	 * "AND A.COUNTRY_ID=C.COUNTRY_ID "+ "AND A.STATE_ID=D.STATE_ID "+
	 * "AND A.DISTRICT_ID=E.DISTRICT_ID "+
	 * "AND A.PARTY_ROLE_TYPE_ID=F.PARTY_TYPE_ID "+ "AND REG_TXN_ID=? "+
	 * "AND PARTY_TXN_ID=? ";
	 */
	// public static final String GET_REG_INIT_PROP_VALUATION_ID
	// ="SELECT PROP_VAL_ID from IGRS_REG_INIT_PROPRTY_DTLS where REG_TXN_ID=? AND PROPERTY_ID=?";
	public static final String GET_REG_INIT_OTHER_PROP_DETS = "SELECT VIKAS_KHAND, RI_CIRCLE, LAYOUT_DETAIL, KHASRA_NUMBER," + "RIN_PUSHTIKA_NUMBER, NAZOOL_SHEET_NUMBER," + "PLOT_NUMBER, PROPERTY_ADDRESS, NORTH_BOUNDARY," + "SOUTH_BOUNDARY, EAST_BOUNDARY, WEST_BOUNDARY, KHASRA_AREA, LAGAAN, PROPERTY_LANDMARK " + "FROM IGRS_REG_INIT_PROPRTY_DTLS " + "WHERE REG_TXN_ID=? " + "AND PROPERTY_ID=?";
	/*
	 * public static final StringGET_REG_INIT_DUTY_DETS=
	 * "SELECT STAMP_DUTY,GRAM_DUTY,NAGAR_DUTY,UPKAR,REG_FEE,TOTAL,A.SHARE_VALUE,A.DUTY_ALREADY_PAID,A.REG_ALREADY_PAID "
	 * + "FROM IGRS_PROP_STAMP_DUTY_DETAILS A,IGRS_REG_INIT_PROPRTY_DTLS B "+
	 * "WHERE B.PROP_VAL_ID=A.VAL_TXN_ID "+ "AND B.REG_TXN_ID=";
	 */
	public static final String GET_REG_INIT_DUTY_DETS_FOR_CONFIRMATION = "SELECT STAMP_DUTY,NAGAR_DUTY,GRAM_DUTY,UPKAR,REG_FEE,TOTAL,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT,REG_FEE_AFTER_EXEMP,TOTAL_AFTER_EXEMP,EXEMP_DUTY,EXEMP_FEE FROM IGRS_REG_INIT_STAMP_DUTY_DETLS WHERE REG_TXN_ID=?";
	// public static final String
	// GET_APPLICANT_ROLE_ID="SELECT PARTY_ROLE_TYPE_ID FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE UPPER(IS_APPLICANT)='Y' AND REG_TXN_ID=";
	public static final String GET_PROPERTY_DETAILS_FOR_DUTY_CALC = "SELECT PROP_L1_TYPE__ID,AREA_ID,GOV_BODY_ID FROM IGRS_PROP_TXN_DETAILS WHERE VAL_TXN_ID=?";
	// public static final String GET_REG_INIT_DEED_INST_ID
	// ="SELECT DEED_TYPE_ID,INSTRUMENT_ID, EXEMPTION_ID,ADJUDICATION_ID FROM IGRS_REG_INIT_DEED_DETLS WHERE REG_TXN_ID=";
	public static final String GET_BUILDING_FLOOR_DETAILS = "SELECT FLOOR_TXN_ID,PROP_L1_TYPE__ID,PROP_L2_TYPE__ID,FLOOR_TYPE_ID,CONSIDER_AMOUNT,AREA,CONSTRUCTED_AREA," + "B.PROP_TYPE_L1_NAME,C.PROPERTY_TYPE_L2_NAME,D.FLOOR_NAME " + "FROM IGRS_PROP_FLOOR_DETAILS A," + "IGRS_PROP_TYPE_L1_MASTER_DUMMY B," + "IGRS_PROP_TYPE_L2_MASTER_DUMMY C," + "IGRS_FLOOR_MASTER D " + "WHERE B.PROP_TYPE_L1_ID=A.PROP_L1_TYPE__ID " + "AND C.PROPERTY_TYPE_L2_ID=A.PROP_L2_TYPE__ID " + "AND D.FLOOR_ID=A.FLOOR_TYPE_ID " + "AND VAL_TXN_ID=?";
	public static final String GET_ESTAMP_PURPOSE = "SELECT PURPOSE_OF_DOC FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	public static final String UPDATE_ESTAMP_PURPOSE = "UPDATE IGRS_REG_TXN_DETLS SET PURPOSE_OF_DOC=? WHERE REG_TXN_ID=?";
	public static final String GET_REG_INIT_DUTY_DETS_EXCHANGE_DEED = "SELECT A.STAMP_DUTY,A.GRAM_DUTY,A.NAGAR_DUTY,A.UPKAR,A.REG_FEE,A.TOTAL,A.SHARE_VALUE,A.DUTY_ALREADY_PAID,A.REG_ALREADY_PAID " + "FROM IGRS_PROP_STAMP_DUTY_DETAILS A " + "WHERE A.VAL_TXN_ID=?";
	// public static final String
	// GET_REF_VAL_ID_EXCHNG_DEED="SELECT A.REF_VAL_TXN_ID FROM IGRS_PROP_TXN_DETAILS A WHERE A.VAL_TXN_ID=(SELECT MAX(B.PROP_VAL_ID) FROM IGRS_REG_INIT_PROPRTY_DTLS B WHERE B.REG_TXN_ID=?)";
	// public static final String
	// GET_EXCHNG_DEED_FINAL_MV="SELECT A.MARKET_VALUE FROM IGRS_PROP_TXN_DETAILS A WHERE A.VAL_TXN_ID=";
	// public static final String
	// GET_SHARE_OF_PROPERTY_LIST="SELECT SHARE_OF_PROPERTY FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE PARTY_ROLE_TYPE_ID=(SELECT PARTY_ROLE_TYPE_ID FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE UPPER(IS_APPLICANT)='Y' AND REG_TXN_ID=? ) AND REG_TXN_ID=?";
	// public static final String
	// GET_SHARE_OF_PROPERTY_LIST="SELECT SHARE_OF_PROPERTY FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE (UPPER(IS_APPLICANT)='Y' OR UPPER(IS_APPLICANT)='C' ) AND REG_TXN_ID=";
	// public static final String
	// GET_APPLICANT_SHARE_HOLDERS="SELECT * FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE PARTY_ROLE_TYPE_ID=(SELECT PARTY_ROLE_TYPE_ID FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE UPPER(IS_APPLICANT)='Y' AND REG_TXN_ID=? ) AND UPPER(IS_APPLICANT)!='Y' AND REG_TXN_ID=?";
	// public static final String
	// GET_APPLICANT_SHARE_HOLDERS="SELECT * FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE UPPER(IS_APPLICANT)='C' AND REG_TXN_ID=";
	// public static final String
	// GET_OWNER_DETAILS="SELECT PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME FROM IGRS_REG_INIT_TXN_PARTY_DTLS WHERE PARTY_TXN_ID=";
	// FOLLOWING QUERIES FOR NEW PAYMENT MODALITY
	// public static final String GET_REG_INIT_PAYMENT_FLAG
	// ="SELECT PAYMENT_FLAG from IGRS_REG_INIT_TXN_DETLS where TRANSACTION_ID=";
	// public static final String INSERT_REG_INIT_PAYMENT_DETLS
	// ="INSERT INTO IGRS_REG_INIT_TXN_DETLS(TRANSACTION_ID,ESTAMP_AMOUNT,PAYMENT_FLAG,CREATED_BY,CREATED_DATE,ESTAMP_PURPOSE) VALUES(?,?,?,?,sysdate,?)";
	// public static final String GET_REG_INIT_PAYMENT_TXN_ID
	// ="SELECT PAYMENT_TXN_ID,PAID_AMOUNT FROM IGRS_REG_INIT_TXN_DETLS WHERE TRANSACTION_ID=";
	public static final String UPDATE_REG_INIT_ESTAMP_CODE = "UPDATE IGRS_REG_INIT_TXN_DETLS SET ESTAMP_TXN_ID=? WHERE TRANSACTION_ID=? AND PAYMENT_TXN_ID=?";
	// public static final String
	// UPDATE_PAYMENT_FLAG_PURPOSE="UPDATE IGRS_REG_INIT_TXN_DETLS SET PAYMENT_FLAG=?, UPDATE_BY=?, UPDATE_DATE=sysdate WHERE TRANSACTION_ID=? AND PAYMENT_TXN_ID=?";
	// FOLLOWING QUERY FOR GETTING eSTAMP dETAILS
	// COmmented by SIMRAN--10 july
	// public static final String
	// GET_ESTAMP_DETAILS="SELECT ESTAMP_TXN_ID,ESTAMP_AMOUNT,CREATED_DATE,PAYMENT_TXN_ID,ESTAMP_DATE,ESTAMP_TYPE_ID,ESTAMP_VALIDITY_DATE,ESTAMP_STATUS "
	// +
	// "FROM IGRS_REG_INIT_TXN_DETLS WHERE TRANSACTION_ID =";
	public static final String GET_ESTAMP_DETAILS = "SELECT a.ESTAMP_TXN_ID,a.ESTAMP_AMOUNT,a.CREATED_DATE,a.PAYMENT_TXN_ID,a.ESTAMP_DATE," + "a.ESTAMP_TYPE_ID,a.ESTAMP_VALIDITY_DATE,a.ESTAMP_STATUS,a.ESTAMP_CODE FROM " + "IGRS_ESTAMP_DETLS a, IGRS_REG_ESTAMP_MAP b WHERE " + "a.ESTAMP_TXN_ID = b.ESTAMP_TXN_ID AND b.REG_TXN_ID =?";
	// FOLLOWING QUERIES ARE FOR ADJUDICATION
	// public static final String
	// GET_REG_INIT_ADJUDICATION_STATUS="SELECT ADJUDCN_TXN_ID,IS_ADJU_COMPLETE FROM IGRS_REG_ADJUDCN_FINAL_DTLS WHERE ADJUDCN_TXN_ID=";
	public static final String UPDATE_TRANS_PARTY_TABLE = "UPDATE IGRS_REG_INIT_TXN_PARTY_DTLS SET REG_TXN_ID=?,IS_TXN_COMPLETE='N',UPDATE_BY=?,UPDATE_DATE=sysdate WHERE ADJUDICATION_ID=?";
	public static final String UPDATE_STAMP_DUTY_TABLE = "UPDATE IGRS_REG_INIT_STAMP_DUTY_DETLS SET REG_TXN_ID=?,MODIFIED_BY=?,MODIFIED_DATE=sysdate WHERE ADJUDICATION_ID=?";
	public static final String UPDATE_PROP_DETLS_TABLE = "UPDATE IGRS_REG_INIT_PROPRTY_DTLS SET REG_TXN_ID=?,UPDATE_BY=?,UPDATE_DATE=sysdate WHERE ADJUDICATION_ID=?";
	public static final String UPDATE_DEED_DETLS_TABLE = "UPDATE IGRS_REG_INIT_DEED_DETLS SET REG_TXN_ID=?,UPDATE_BY=?,UPDATE_DATE=sysdate WHERE ADJUDICATION_ID=?";
	public static final String UPDATE_PROP_TRANS_MAP_TABLE = "UPDATE IGRS_REG_INIT_PROP_TRANS_MAP SET REG_TXN_ID=?,UPDATE_BY=?,UPDATE_DATE=sysdate WHERE ADJUDICATION_ID=?";
	public static final String GET_PROPERTY_ID_MARKET_VALUE_ADJU = "select PROPERTY_TXN_ID,MARKET_VALUE from IGRS_REG_ADJUDCN_PROP_DTLS where ADJUDCN_TXN_ID=?";
	public static final String GET_ADJUDICATED_DUTY_DETS = "SELECT A.STAMP_DUTY,A.JANPAD_DUTY,A.MUNICIPAL_DUTY,A.UPKAR_DUTY,A.REGISTRATION_FEE,A.TOTAL_DUTY,B.MARKET_VALUE_SHARE,B.DUTY_ALREADY_PAID,B.REG_ALREADY_PAID FROM IGRS_REG_ADJUDCN_FINAL_DTLS A,IGRS_REG_INIT_STAMP_DUTY_DETLS B WHERE A.ADJUDCN_TXN_ID=B.ADJUDICATION_ID AND A.ADJUDCN_TXN_ID=?";
	// QUERIES FOR EXCHANGE DEED
	// public static final String
	// GET_ALL_VALUATION_IDS_EXCHANGE="SELECT VAL_TXN_ID FROM IGRS_PROP_TXN_DETAILS WHERE REF_VAL_TXN_ID=";
	// public static final String
	// GET_ALL_PROPERTY_DETLS_EXCHANGE="SELECT VAL_TXN_ID,DISTRICT_ID,TEHSIL_ID,MARKET_VALUE,PARTY_TYPE FROM IGRS_PROP_TXN_DETAILS WHERE VAL_TXN_ID=";
	// FOLLOWING QUERIES FOR GETTING SUB-CLAUSE LIST
	// public static final String
	// GET_SUB_CLAUSE_LIST_NON_BUILDING="SELECT SUB_CLAUSE_ID FROM IGRS_PROP_SUBCLAUSE_DETAILS WHERE VAL_TXN_ID=";
	// public static final String
	// GET_SUB_CLAUSE_LIST_BUILDING="SELECT SUB_CLAUSE_ID FROM IGRS_PROP_SUBCLAUSE_DETAILS WHERE VAL_TXN_ID=";
	// public static final String
	// GET_SUB_CLAUSE_LIST_BUILDING="SELECT SUB_CLAUSE_ID FROM IGRS_PROP_SUBCLAUSE_DETAILS WHERE VAL_TXN_ID=? AND FLOOR_TXN_ID=?";
	// added by shruti for DEPOSIT OF TITLE DEED
	// public static final String
	// SELECT_DEED_ID="select  DEED_ID FROM IGRS_STAMP_DUTY_DETAILS WHERE DUTY_TXN_ID=?";
	public static final String SELECT_EXEMPTION_ID = "select EXEMPTION_ID FROM IGRS_DUTY_EXEMPTION_DETLS WHERE DUTY_TXN_ID=?";
	// public static final String
	// SELECT_INSTRUMENT_ID="select  INSTRUMENT_ID FROM IGRS_STAMP_DUTY_DETAILS WHERE DUTY_TXN_ID=?";
	// modified by rahul add new deed extra field
	public static final String INSERT_REG_DEED_EXTRA_DTLS = "INSERT INTO IGRS_REG_DEEDS_EXTRA_DTLS( REG_TXN_ID,BANK_NAME_DEPOSIT_DEED," + "BRANCH_NAME_DEPOSIT_DEED,BANK_ADDRESS_DEPOSIT_DEED,BANK_AUTH_PERSON_DEPOSIT_DEED,LOAN_AMOUNT,SANCTIONED_AMOUNT," + "CREATED_BY,CREATED_DATE,TRUST_NAME,TRUST_DATE,RENT,ADVANCE,DEVELOPMENT_CHARGE,OTHER_REC_CHARGE_PAID,PREMIUM,TERM_OF_LEASE,WITH_POSSESSION,SEC_LOAN_AMT," + "PARTY_FIRST_NAME,PARTY_MIDDLE_NAME,PARTY_LAST_NAME,PARTY_GENDER,PARTY_AGE,GUARDIAN_NAME,MOTHER_NAME,SPOUSE_NAME,NATIONALITY,PARTY_ADDRESS,COUNTRY_ID,STATE_ID," + "DISTRICT_ID,PHONE_NUMBER,MOBILE_NUMBER,EMAIL_ID,CATEGORY_ID,DISABILITY,DISABILITY_DESC,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ADVANCE_PAYMNT_DATE,POSSESION_GIVEN," + "POA_WITH_CONSIDRTN,POA_PERIOD,PAID_LOAN_AMT,CONTRIBUTORY_PROP,DISSOLUTION_DATE,RETIRMENT_DATE,EXECUTION_DATE,REGISTRATION_DATE,REGISTRATION_NO,AMOUNT,PROPERTY_DETLS,DEED_NAME,DEED_TYPE,MAP_ORDER_NO,MAP_ORDER_DATE,TCP_ORDER_NO,TCP_ORDER_DATE,ADVANCE_PAYMENT_DETLS,SHARE_DEBENTURE,AGREEMENT_DETAILS,WORKCONTRACT_DETAILS)" + "VALUES(?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String SELECTPROPERTYTYPEL1DETAILS = "SELECT PROPERTY_TYPE_L1_ID,PROPERTY_TYPE_L1_NAME FROM IGRS_PROP_TYPE_L1_MASTER WHERE PROPERTY_TYPE_ID=?";
	public static final String GET_REG_INIT_NON_PROP_DUTY_DETS = "SELECT STAMP_DUTY,GRAM_DUTY,NAGAR_DUTY,UPKAR,REG_FEE,TOTAL,A.SHARE_VALUE,A.DUTY_ALREADY_PAID,A.REG_ALREADY_PAID " + "FROM IGRS_STAMP_DUTY_DETAILS A,IGRS_REG_INIT_NON_PROP_DTLS B " + "WHERE B.DUTY_TXN_ID=A.DUTY_TXN_ID " + "AND B.REG_TXN_ID=";
	// end of code by shruti
	// FOLLOWING ADDED BY ROOPAM ON OR AFTER 25TH APRIL 2013
	public static final String SELECT_CATEGORY = "SELECT A.CATEGORY_ID,A.CATEGORY_NAME FROM IGRS_PERSON_CATEGORY_MASTER A WHERE A.CATEGORY_STATUS='A' ORDER BY A.CATEGORY_ID DESC";
	// post database restructuring 16 May 2013
	// public static final String INSERT_REG_TXN_PARTY_NEW =
	// "INSERT INTO IGRS_REG_TXN_PARTY_DETLS(REG_TXN_ID,APPELLATE_TYPE_ID, PARTY_FIRST_NAME, PARTY_MIDDLE_NAME, PARTY_LAST_NAME, PARTY_GENDER, PARTY_AGE, NATIONALITY, COUNTRY_ID, STATE_ID, DISTRICT_ID, PARTY_ADDRESS, POSTAL_CODE, PHONE_NUMBER, MOBILE_NUMBER, EMAIL_ID, PHOTO_PROOF_TYPE_ID, PHOTO_PROOF_ID, ORGANIZATION_NAME, AUTHRZD_PERSN_NAME, GUARDIAN_NAME, MOTHER_NAME, CATEGORY_ID, PARTY_TXN_ID, IS_APPLICANT, OCCUPATION_ID, DISABILITY, RELATION_WITH_OWNER, SHARE_OF_PROPERTY, PARTY_TYPE_ID, CREATED_BY, CREATED_DATE, SPOUSE_NAME, OWNER_ID, DISABILITY_DESC, MEMBER_MINORITY, BELOW_POVERTY_LINE,CATEGORY_ST_SCHEDULE_AREA,COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH,ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE,ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String INSERT_REG_TXN_PARTY_minor = "INSERT INTO IGRS_REG_TXN_PARTY_DETLS(REG_TXN_ID,APPELLATE_TYPE_ID, PARTY_FIRST_NAME, PARTY_MIDDLE_NAME, PARTY_LAST_NAME, PARTY_GENDER, PARTY_AGE, NATIONALITY, COUNTRY_ID, STATE_ID, DISTRICT_ID, PARTY_ADDRESS, POSTAL_CODE, PHONE_NUMBER, MOBILE_NUMBER, EMAIL_ID, PHOTO_PROOF_TYPE_ID, PHOTO_PROOF_ID, ORGANIZATION_NAME, AUTHRZD_PERSN_NAME, GUARDIAN_NAME, MOTHER_NAME, CATEGORY_ID, PARTY_TXN_ID, IS_APPLICANT, OCCUPATION_ID, DISABILITY, RELATION_WITH_OWNER, SHARE_OF_PROPERTY, PARTY_TYPE_ID, CREATED_BY, CREATED_DATE, SPOUSE_NAME, OWNER_ID, DISABILITY_DESC, MEMBER_MINORITY, BELOW_POVERTY_LINE,CATEGORY_ST_SCHEDULE_AREA,COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH,ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE,ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS, OFFICIAL_CHECK, NAME_OF_OFFICIAL, DESG_OF_OFFICIAL, ADRS_OF_OFFICIAL,ADDRESS_OUT_MP,ADDRESS_OUT_MP_AUTHPER,MINOR_GUARDIAN) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String INSERT_REG_TXN_PARTY_minor_Aadhar = "INSERT INTO IGRS_REG_TXN_PARTY_DETLS(REG_TXN_ID,APPELLATE_TYPE_ID, PARTY_FIRST_NAME, PARTY_MIDDLE_NAME, PARTY_LAST_NAME, PARTY_GENDER, PARTY_AGE, NATIONALITY, COUNTRY_ID, STATE_ID, DISTRICT_ID, PARTY_ADDRESS, POSTAL_CODE, PHONE_NUMBER, MOBILE_NUMBER, EMAIL_ID, PHOTO_PROOF_TYPE_ID, PHOTO_PROOF_ID, ORGANIZATION_NAME, AUTHRZD_PERSN_NAME, GUARDIAN_NAME, MOTHER_NAME, CATEGORY_ID, PARTY_TXN_ID, IS_APPLICANT, OCCUPATION_ID, DISABILITY, RELATION_WITH_OWNER, SHARE_OF_PROPERTY, PARTY_TYPE_ID, CREATED_BY, CREATED_DATE, SPOUSE_NAME, OWNER_ID, DISABILITY_DESC, MEMBER_MINORITY, BELOW_POVERTY_LINE,CATEGORY_ST_SCHEDULE_AREA,COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH,ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE,ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS, OFFICIAL_CHECK, NAME_OF_OFFICIAL, DESG_OF_OFFICIAL, ADRS_OF_OFFICIAL,ADDRESS_OUT_MP,ADDRESS_OUT_MP_AUTHPER,MINOR_GUARDIAN,ADHAR_NAME) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String INSERT_REG_TXN_PARTY_NEW = "INSERT INTO IGRS_REG_TXN_PARTY_DETLS(REG_TXN_ID,APPELLATE_TYPE_ID, PARTY_FIRST_NAME, PARTY_MIDDLE_NAME, PARTY_LAST_NAME, PARTY_GENDER, PARTY_AGE, NATIONALITY, COUNTRY_ID, STATE_ID, DISTRICT_ID, PARTY_ADDRESS, POSTAL_CODE, PHONE_NUMBER, MOBILE_NUMBER, EMAIL_ID, PHOTO_PROOF_TYPE_ID, PHOTO_PROOF_ID, ORGANIZATION_NAME, AUTHRZD_PERSN_NAME, GUARDIAN_NAME, MOTHER_NAME, CATEGORY_ID, PARTY_TXN_ID, IS_APPLICANT, OCCUPATION_ID, DISABILITY, RELATION_WITH_OWNER, SHARE_OF_PROPERTY, PARTY_TYPE_ID, CREATED_BY, CREATED_DATE, SPOUSE_NAME, OWNER_ID, DISABILITY_DESC, MEMBER_MINORITY, BELOW_POVERTY_LINE,CATEGORY_ST_SCHEDULE_AREA,COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH,ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE,ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS, OFFICIAL_CHECK, NAME_OF_OFFICIAL, DESG_OF_OFFICIAL, ADRS_OF_OFFICIAL,ADDRESS_OUT_MP,ADDRESS_OUT_MP_AUTHPER) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String INSERT_REG_TXN_PARTY_NEW_AADHAR = "INSERT INTO IGRS_REG_TXN_PARTY_DETLS(REG_TXN_ID,APPELLATE_TYPE_ID, PARTY_FIRST_NAME, PARTY_MIDDLE_NAME, PARTY_LAST_NAME, PARTY_GENDER, PARTY_AGE, NATIONALITY, COUNTRY_ID, STATE_ID, DISTRICT_ID, PARTY_ADDRESS, POSTAL_CODE, PHONE_NUMBER, MOBILE_NUMBER, EMAIL_ID, PHOTO_PROOF_TYPE_ID, PHOTO_PROOF_ID, ORGANIZATION_NAME, AUTHRZD_PERSN_NAME, GUARDIAN_NAME, MOTHER_NAME, CATEGORY_ID, PARTY_TXN_ID, IS_APPLICANT, OCCUPATION_ID, DISABILITY, RELATION_WITH_OWNER, SHARE_OF_PROPERTY, PARTY_TYPE_ID, CREATED_BY, CREATED_DATE, SPOUSE_NAME, OWNER_ID, DISABILITY_DESC, MEMBER_MINORITY, BELOW_POVERTY_LINE,CATEGORY_ST_SCHEDULE_AREA,COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH,ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE,ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS, OFFICIAL_CHECK, NAME_OF_OFFICIAL, DESG_OF_OFFICIAL, ADRS_OF_OFFICIAL,ADDRESS_OUT_MP,ADDRESS_OUT_MP_AUTHPER,ADHAR_NAME) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	// public static final String
	// INSERT_OWNER_DETAILS="INSERT INTO IGRS_REG_TXN_PARTY_DETLS(REG_TXN_ID,APPELLATE_TYPE_ID,PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,PARTY_TXN_ID,IS_APPLICANT,SHARE_OF_PROPERTY,PARTY_TYPE_ID,CREATED_BY,CREATED_DATE,ADDRESS_OUT_MP,PARENT_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?)";
	public static final String INSERT_OWNER_DETAILS = "INSERT " + "INTO IGRS_REG_TXN_PARTY_DETLS " + "  ( " + "    REG_TXN_ID, " + "    APPELLATE_TYPE_ID, " + "    PARTY_FIRST_NAME, " + "    PARTY_GENDER, " + "    PARTY_AGE, " + "    NATIONALITY, " + "    PARTY_ADDRESS, " + "    MOBILE_NUMBER, " + "    EMAIL_ID, " + "    PHOTO_PROOF_TYPE_ID, " + "    PHOTO_PROOF_ID, " + "    ORGANIZATION_NAME, " + "    AUTHRZD_PERSN_NAME, " + "    PARTY_TXN_ID, " + "    IS_APPLICANT, " + "    SHARE_OF_PROPERTY, " + "    PARTY_TYPE_ID, " + "    CREATED_BY, " + "    CREATED_DATE, " + "    ADDRESS_OUT_MP, " + "    PARENT_ID, " + "    COUNTRY_ID, " + "    STATE_ID, " + "    DISTRICT_ID, " + "    PHONE_NUMBER, " + "    POSTAL_CODE, " + "    CATEGORY_ID, " + "    DISABILITY_DESC, " + "    DISABILITY, " + "    MEMBER_MINORITY, " + "    BELOW_POVERTY_LINE, " + "    OCCUPATION_ID, " + "    RELATION_TYPE_ID, " + "    GUARDIAN_NAME, " + "    MOTHER_NAME, " + "    SPOUSE_NAME, " + "    OWNER_PAN_NO, " + "    COLLECTOR_PERMISSION_NUMBER, " + "    CATEGORY_ST_SCHEDULE_AREA " + "  ) " + "  VALUES " + "  ( " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    sysdate, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?," + "    ?, " + "    ? " + "  )";
	public static final String INSERT_OWNER_DETAILS_minor = "INSERT INTO IGRS_REG_TXN_PARTY_DETLS(REG_TXN_ID,APPELLATE_TYPE_ID,PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,PARTY_TXN_ID,IS_APPLICANT,SHARE_OF_PROPERTY,PARTY_TYPE_ID,CREATED_BY,CREATED_DATE,ADDRESS_OUT_MP,PARENT_ID,MINOR_GUARDIAN) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?)";
	public static final String INSERT_REG_DEED_DETLS = "INSERT INTO IGRS_REG_TXN_DETLS(REG_TXN_ID,REGISTRATION_TXN_STATUS,DEED_ID,INSTRUMENTS_ID,CREATED_BY,CREATED_DATE,REF_VAL_TXN_ID,DUTY_TXN_ID,ADJUDICATION_FLAG,CANCELLATION_FLAG, TRANS_CHECK) VALUES (?,?,?,?,?,sysdate,?,?,?,?,?)";// changes
	// by
	// Shreeraj
	// public static final String
	// GET_PROP_DETLS_FROM_VAL="SELECT MARKET_VALUE,AREA_ID,GOV_BODY_ID,PROP_TYPE_ID,PROP_L1_TYPE__ID,PROP_L2_TYPE__ID,AREA_UNIT_ID,AREA,DISTRICT_ID,TEHSIL_ID,WARD_PATWARI_ID,MOHALLA_ID,SYSTEM_MV FROM IGRS_PROP_VAL_DETAILS WHERE VAL_TXN_ID=?";
	public static final String INSERT_REG_PROPERTY_DETLS = "INSERT INTO IGRS_REG_PROPRTY_DTLS(PROPERTY_ID,REG_TXN_ID,MARKET_VALUE,AREA_TYPE_ID,GOV_BODY_ID,PROP_TYPE_ID,L1_TYPE_ID,L2_TYPE_ID,AREA_UNIT_ID,AREA,DISTRICT_ID,TEHSIL_ID,WARD_ID,MOHALLA_ID,CREATED_BY,CREATED_DATE,VAL_TXN_ID,PROP_TXN_COMPL_FLAG,INITIAL_MARKET_VALUE,SYSTEM_MV) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?)";
	public static final String INSERT_REG_PROPERTY_DETLS_CLR = "INSERT INTO IGRS_REG_PROPRTY_DTLS(PROPERTY_ID,REG_TXN_ID,MARKET_VALUE,AREA_TYPE_ID,GOV_BODY_ID,PROP_TYPE_ID,L1_TYPE_ID,L2_TYPE_ID,AREA_UNIT_ID,AREA,DISTRICT_ID,TEHSIL_ID,WARD_ID,MOHALLA_ID,CREATED_BY,CREATED_DATE,VAL_TXN_ID,PROP_TXN_COMPL_FLAG,INITIAL_MARKET_VALUE,SYSTEM_MV,CLR_FLAG) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?)";
	public static final String GET_APPLICANT_ROLE_ID = "SELECT PARTY_TYPE_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE UPPER(IS_APPLICANT)='Y' AND REG_TXN_ID=?";
	public static final String INSERT_REG_PROP_TRANS_MAP = "INSERT INTO IGRS_REG_INIT_PROP_TRANS_MAP(REG_TXN_ID,PROPERTY_ID,PARTY_TXN_ID,CREATED_BY,CREATED_DATE,MAPPING_TXN_ID) VALUES (?,?,?,?,sysdate,IGRS_REG_TRANS_PROP_MAP_ID_SEQ.NEXTVAL)";
	public static final String GET_SHARE_OF_PROPERTY_LIST = "SELECT SHARE_OF_PROPERTY FROM IGRS_REG_TXN_PARTY_DETLS WHERE (UPPER(IS_APPLICANT)='Y' OR UPPER(IS_APPLICANT)='C' ) AND REG_TXN_ID=?";
	public static final String GET_PROP_DETLS_DASHBOARD = "SELECT A.PROP_TYPE_ID,PROPERTY_TYPE_NAME,H_PROPERTY_TYPE_NAME,A.GOV_BODY_ID,A.AREA_TYPE_ID,A.MPCST_FILE1_PATH,A.MPCST_FILE2_PATH,A.MPCST_AVAIL_FLAG FROM IGRS_REG_PROPRTY_DTLS A,IGRS_PROPERTY_TYPE_MASTER H WHERE H.PROPERTY_TYPE_ID=A.PROP_TYPE_ID AND A.VAL_TXN_ID=? and PROPERTY_ID=?";
	public static final String GET_SUB_CLAUSE_LIST_NON_BUILDING = "SELECT SUB_CLAUSE_ID FROM IGRS_PROP_SUBCLAUSE_VAL_DTLS WHERE VAL_TXN_ID=?";
	public static final String GET_SUB_CLAUSE_LIST_BUILDING = "SELECT SUB_CLAUSE_ID FROM IGRS_PROP_SUBCLAUSE_VAL_DTLS WHERE VAL_TXN_ID=? AND FLOOR_TXN_ID=?";
	// Commented by ankit and added new param AUDIT_REPORT_PATH for plant and
	// machinery
	// public static final String UPDATE_REG_INIT_PROP_DETLS =
	// "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND = ?,RI_CIRCLE = ?,LAYOUT_DETAIL = ?,NAZOOL_SHEET_NUMBER = ?,PLOT_NUMBER = ?,PROPERTY_ADDRESS = ?,EAST_BOUNDARY = ?,WEST_BOUNDARY = ?,NORTH_BOUNDARY = ?,SOUTH_BOUNDARY = ?,UPDATE_BY = ?,UPDATE_DATE = sysdate,PROPERTY_LANDMARK=?,ANGLE_1_PATH=?,ANGLE_2_PATH=?,ANGLE_3_PATH=?,MAP_PATH=?,RIN_PATH=?,KHASRA_PATH=? WHERE REG_TXN_ID = ? AND PROPERTY_ID = ?";
	// -----------commented and modified by ankit for GIS work
	// public static final String UPDATE_REG_INIT_PROP_DETLS =
	// "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND = ?,RI_CIRCLE = ?,LAYOUT_DETAIL = ?,NAZOOL_SHEET_NUMBER = ?,PLOT_NUMBER = ?,PROPERTY_ADDRESS = ?,EAST_BOUNDARY = ?,WEST_BOUNDARY = ?,NORTH_BOUNDARY = ?,SOUTH_BOUNDARY = ?,UPDATE_BY = ?,UPDATE_DATE = sysdate,PROPERTY_LANDMARK=?,ANGLE_1_PATH=?,ANGLE_2_PATH=?,ANGLE_3_PATH=?,MAP_PATH=?,RIN_PATH=?,KHASRA_PATH=?,AUDIT_REPORT_PATH=? WHERE  PROPERTY_ID = ? AND  REG_TXN_ID = ?";
	public static final String UPDATE_REG_INIT_PROP_DETLS = "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND = ?,RI_CIRCLE = ?,LAYOUT_DETAIL = ?,NAZOOL_SHEET_NUMBER = ?,PLOT_NUMBER = ?,PROPERTY_ADDRESS = ?,EAST_BOUNDARY = ?,WEST_BOUNDARY = ?,NORTH_BOUNDARY = ?,SOUTH_BOUNDARY = ?,UPDATE_BY = ?,UPDATE_DATE = sysdate,PROPERTY_LANDMARK=?,ANGLE_1_PATH=?,ANGLE_2_PATH=?,ANGLE_3_PATH=?,MAP_PATH=?,RIN_PATH=?,KHASRA_PATH=?,AUDIT_REPORT_PATH=?,GIS_REFERENCE_KEY=? WHERE  PROPERTY_ID = ? AND  REG_TXN_ID = ?";
	// public static final String UPDATE_REG_INIT_PROP_DETLS_CLR =
	// "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND = ?,RI_CIRCLE = ?,LAYOUT_DETAIL = ?,NAZOOL_SHEET_NUMBER = ?,PLOT_NUMBER = ?,PROPERTY_ADDRESS = ?,EAST_BOUNDARY = ?,WEST_BOUNDARY = ?,NORTH_BOUNDARY = ?,SOUTH_BOUNDARY = ?,UPDATE_BY = ?,UPDATE_DATE = sysdate,PROPERTY_LANDMARK=?,ANGLE_1_PATH=?,ANGLE_2_PATH=?,ANGLE_3_PATH=?,MAP_PATH=?,RIN_PATH=?,KHASRA_PATH=?,CLR_FLAG = ? WHERE REG_TXN_ID = ? AND PROPERTY_ID = ?";
	// public static final String UPDATE_REG_INIT_PROP_DETLS_CLR =
	// "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND = ?,RI_CIRCLE = ?,LAYOUT_DETAIL = ?,NAZOOL_SHEET_NUMBER = ?,PLOT_NUMBER = ?,PROPERTY_ADDRESS = ?,EAST_BOUNDARY = ?,WEST_BOUNDARY = ?,NORTH_BOUNDARY = ?,SOUTH_BOUNDARY = ?,UPDATE_BY = ?,UPDATE_DATE = sysdate,PROPERTY_LANDMARK=?,ANGLE_1_PATH=?,ANGLE_2_PATH=?,ANGLE_3_PATH=?,MAP_PATH=?,RIN_PATH=?,KHASRA_PATH=?,CLR_FLAG = ?,AUDIT_REPORT_PATH=? WHERE REG_TXN_ID = ? AND PROPERTY_ID = ?";

	public static final String UPDATE_REG_INIT_PROP_DETLS_CLR = "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND = ?,RI_CIRCLE = ?,LAYOUT_DETAIL = ?,NAZOOL_SHEET_NUMBER = ?,PLOT_NUMBER = ?,PROPERTY_ADDRESS = ?,EAST_BOUNDARY = ?,WEST_BOUNDARY = ?,NORTH_BOUNDARY = ?,SOUTH_BOUNDARY = ?,UPDATE_BY = ?,UPDATE_DATE = sysdate,PROPERTY_LANDMARK=?,ANGLE_1_PATH=?,ANGLE_2_PATH=?,ANGLE_3_PATH=?,MAP_PATH=?,RIN_PATH=?,KHASRA_PATH=?,CLR_FLAG = ?,AUDIT_REPORT_PATH=?, GIS_REFERENCE_KEY=? WHERE REG_TXN_ID = ? AND PROPERTY_ID = ?";
	public static final String INSERT_REG_INIT_PROP_KHASRA_DETLS = "INSERT INTO IGRS_REG_PROP_KHASARA_DTLS(KHASRA_TXN_ID,PROPERTY_ID,KHASRA_NUMBER,RIN_PUSHTIKA_NUMBER,KHASRA_AREA,LAGAAN,NORTH_BOUNDARY,SOUTH_BOUNDARY,EAST_BOUNDARY,WEST_BOUNDARY,CREATED_BY,CREATED_DATE) VALUES (IGRS_REG_KHASRA_TXN_ID_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,?,sysdate)";
	public static final String INSERT_REG_EXEMPTION_DETLS = "INSERT INTO IGRS_REG_EXEMPTION_DETLS(TRANSACTION_ID,REG_TXN_ID,EXEMPTION_ID,CREATED_BY,CREATED_DATE) VALUES (IGRS_REG_EXEMP_ID_SEQ.NEXTVAL,?,?,?,sysdate)";
	public static final String GET_REG_INIT_DEED_INST_ID = "SELECT DEED_ID,INSTRUMENTS_ID,ADJUDICATION_FLAG,CANCELLATION_TYPE_FLAG FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	public static final String GET_REG_EXEMPTION_DETLS = "SELECT EXEMPTION_ID FROM IGRS_REG_EXEMPTION_DETLS WHERE REG_TXN_ID=?";
	public static final String GET_PROPERTY_ID_MARKET_VALUE = "select PROPERTY_ID,MARKET_VALUE from IGRS_REG_PROPRTY_DTLS where REG_TXN_ID=?";
	public static final String GET_TRANSACTING_PARTY_DETS = "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID,C.SHARES,A.DESG_OF_OFFICIAL,A.APPELLATE_TYPE_ID " + ", a.party_age, a.guardian_name,a.minor_guardian, a.relation_type_id,a.UNIVERSAL_DEED_CLAIMANT_FLAG, a.party_middle_name " + " FROM IGRS_REG_TXN_PARTY_DETLS A," + "IGRS_PARTY_TYPE_MASTER B," + "IGRS_REG_INIT_PROP_TRANS_MAP C " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID " + "AND C.PARTY_TXN_ID=A.PARTY_TXN_ID " + "AND C.REG_TXN_ID=A.REG_TXN_ID " + "AND C.REG_TXN_ID=? " + "AND C.PROPERTY_ID=? ORDER BY A.PARTY_TXN_ID";
	public static final String GET_TRANSACTING_PARTY_DETS_CLR = "SELECT B.PARTY_TYPE_NAME, " + "  A.PARTY_FIRST_NAME, " + "  A.PARTY_LAST_NAME, " + "  A.AUTHRZD_PERSN_NAME, " + "  A.PARTY_TXN_ID, " + "  A.PARTY_TYPE_ID, " + "  C.SHARES, " + "  A.DESG_OF_OFFICIAL, " + "  A.APPELLATE_TYPE_ID , " + "  a.party_age, " + "  a.guardian_name, " + "  a.minor_guardian, " + "  a.relation_type_id, " + "  a.UNIVERSAL_DEED_CLAIMANT_FLAG, " + "  a.party_middle_name, " + " c.khasra_no, " + " a.parent_id, " + " A.IS_APPLICANT " + "FROM IGRS_REG_TXN_PARTY_DETLS A, " + "  IGRS_PARTY_TYPE_MASTER B, " + "  igrs_reg_prop_share_map_clr C " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID " + "AND C.PARTY_TXN_ID   =A.PARTY_TXN_ID " + "AND C.REG_TXN_ID     =A.REG_TXN_ID " + "AND C.REG_TXN_ID     =? " + "AND C.PROPERTY_ID    =? " + "ORDER BY c.khasra_no";
	public static final String GET_TRANSACTING_PARTY_DETS_EXCHANGE_DEED = "SELECT B.PARTY_TYPE_NAME, " + "  A.PARTY_FIRST_NAME, " + "  A.PARTY_LAST_NAME, " + "  A.AUTHRZD_PERSN_NAME, " + "  A.PARTY_TXN_ID, " + "  A.PARTY_TYPE_ID, " + "  A.IS_APPLICANT, " + "  A.ROLE_NAME, " + "  A.DESG_OF_OFFICIAL, " + "  A.APPELLATE_TYPE_ID, " + "  A.party_age, " + "  a.PARTY_MIDDLE_NAME, " + "  a.MINOR_GUARDIAN, " + "  a.RELATION_TYPE_ID, " + "  a.UNIVERSAL_DEED_CLAIMANT_FLAG, " + "  a.GUARDIAN_NAME " + "FROM IGRS_REG_TXN_PARTY_DETLS A, " + "  IGRS_PARTY_TYPE_MASTER B, " + "  IGRS_REG_INIT_PROP_TRANS_MAP C " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID " + "AND C.PARTY_TXN_ID   =A.PARTY_TXN_ID " + "AND IS_APPLICANT    IN ('Y','C','N') " + "AND C.PROPERTY_ID    =? " + "AND a.REG_TXN_ID     =? " + "ORDER BY PARTY_TXN_ID";
	public static final String GET_TRANSACTING_PARTY_DETS_EXCHANGE_DEED_CLR = "SELECT B.PARTY_TYPE_NAME, " + "  A.PARTY_FIRST_NAME, " + "  A.PARTY_LAST_NAME, " + "  A.AUTHRZD_PERSN_NAME, " + "  A.PARTY_TXN_ID, " + "  A.PARTY_TYPE_ID, " + "  A.IS_APPLICANT, " + "  A.ROLE_NAME, " + "  A.DESG_OF_OFFICIAL, " + "  A.APPELLATE_TYPE_ID, " + "  A.party_age, " + "  a.PARTY_MIDDLE_NAME, " + "  a.MINOR_GUARDIAN, " + "  a.RELATION_TYPE_ID, " + "  a.UNIVERSAL_DEED_CLAIMANT_FLAG, " + "  a.GUARDIAN_NAME, " + "   a.parent_id, " + "  b.poa_holder_flag " + "FROM IGRS_REG_TXN_PARTY_DETLS A, " + "  IGRS_PARTY_TYPE_MASTER B, " + "  IGRS_REG_INIT_PROP_TRANS_MAP C " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID " + "AND C.PARTY_TXN_ID   =A.PARTY_TXN_ID " + "AND IS_APPLICANT    IN ('Y','C','N','O') " + "AND C.PROPERTY_ID    =? " + "AND a.REG_TXN_ID     =? " + "ORDER BY PARTY_TXN_ID";
	public static final String GET_TRANSACTING_PARTY_DETS_EXCHANGE_DEED_CLR_OWNER = "SELECT B.PARTY_TYPE_NAME, " + "  A.PARTY_FIRST_NAME, " + "  A.PARTY_LAST_NAME, " + "  A.AUTHRZD_PERSN_NAME, " + "  A.PARTY_TXN_ID, " + "  A.PARTY_TYPE_ID, " + "  A.IS_APPLICANT, " + "  A.ROLE_NAME, " + "  A.DESG_OF_OFFICIAL, " + "  A.APPELLATE_TYPE_ID, " + "  A.party_age, " + "  a.PARTY_MIDDLE_NAME, " + "  a.MINOR_GUARDIAN, " + "  a.RELATION_TYPE_ID, " + "  a.UNIVERSAL_DEED_CLAIMANT_FLAG, " + "  a.GUARDIAN_NAME " + "FROM IGRS_REG_TXN_PARTY_DETLS A, " + "  IGRS_PARTY_TYPE_MASTER B " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID " + "AND a.parent_id    =? ";
	public static final String GET_transacting_owner_details = "select party_name from (SELECT reg_txn_id  " + " , LISTAGG(nvl(party_first_name||' '||party_last_name,'') || NVL(AUTHRZD_PERSN_NAME,''), ',')  " + "       WITHIN GROUP (ORDER BY party_first_name) as party_name  " + "   FROM   igrs_reg_txn_party_detls WHERE reg_txn_id = ?   and parent_id= ? " + "   GROUP BY reg_txn_id) ";
	public static final String GET_transacting_owner_details_eng = "select decode(instr(party_name,',',1,1) , 0, party_name , substr(party_name,1,instr(party_name,',',1,1)-1)||' and others') party_name_1 from( " + "SELECT reg_txn_id " + " , LISTAGG(nvl(party_first_name||' '||party_last_name,'') || NVL(AUTHRZD_PERSN_NAME,''), ',') " + "    WITHIN GROUP (ORDER BY party_first_name) as party_name " + "   FROM   igrs_reg_txn_party_detls WHERE reg_txn_id = ? and parent_id = ?  " + "   GROUP BY reg_txn_id)";
	public static final String GET_transacting_owner_details_hindi = "select decode(instr(party_name,',',1,1) , 0, party_name , substr(party_name,1,instr(party_name,',',1,1)-1)||' एवं अन्‍य सभी ') party_name_1 from( " + "SELECT reg_txn_id " + " , LISTAGG(nvl(party_first_name||' '||party_last_name,'') || NVL(AUTHRZD_PERSN_NAME,''), ',') " + "    WITHIN GROUP (ORDER BY party_first_name) as party_name " + "   FROM   igrs_reg_txn_party_detls WHERE reg_txn_id = ? and parent_id = ?  " + "   GROUP BY reg_txn_id)";
	public static final String GET_transacting_owner_poa_details = "select nvl(party_first_name,'')||' '||nvl(party_middle_name,'')||' '|| nvl(party_last_name,'') ||nvl(authrzd_persn_name,'') from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?";
	public static final String GET_REG_INIT_DUTY_DETS = "SELECT A.STAMP_DUTY,A.GRAM_DUTY,A.NAGAR_DUTY,A.UPKAR,A.REG_FEE,A.TOTAL,A.SHARE_VALUE,A.DUTY_ALREADY_PAID,A.REG_ALREADY_PAID " + "FROM IGRS_PROP_STAMP_DUTY_DETAILS A,IGRS_REG_PROPRTY_DTLS B " + "WHERE B.VAL_TXN_ID=A.VAL_TXN_ID " + "AND B.REG_TXN_ID=?";
	public static final String GET_REF_VAL_ID_EXCHNG_DEED = "SELECT REF_VAL_TXN_ID FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	public static final String GET_EXCHNG_DEED_FINAL_MV = "SELECT A.MARKET_VALUE FROM IGRS_PROP_VAL_DETAILS A WHERE A.VAL_TXN_ID=?";
	public static final String INSERT_DUTIES_DETAILS = "INSERT INTO IGRS_REG_INIT_STAMP_DUTY_DETLS(REG_INIT_DUTY_TXN_ID,REG_TXN_ID,STAMP_DUTY,GRAM_DUTY,NAGAR_DUTY,UPKAR,REG_FEE,TOTAL,CREATED_DATE,CREATED_BY,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT) VALUES(IGRS_REG_INIT_DUTY_ID_SEQ.NEXTVAL,?,?,?,?,?,?,?,sysdate,?,?,?,?,?)";
	public static final String GET_REG_INIT_PROP_VALUATION_ID = "SELECT VAL_TXN_ID from IGRS_REG_PROPRTY_DTLS where REG_TXN_ID=? AND PROPERTY_ID=?";
	public static final String GET_REG_INIT_INITIATION = "SELECT REG_TXN_ID from IGRS_REG_TXN_DETLS where REGISTRATION_NUMBER=?";
	/*
	 * public static final String
	 * GET_PROP_DETLS_DISPLAY="SELECT A.DISTRICT_ID,"+ "DISTRICT_NAME,"+
	 * "A.TEHSIL_ID,"+ "TEHSIL_NAME,"+ "A.AREA_TYPE_ID,"+ "AREA_TYPE_NAME,"+
	 * "A.WARD_ID,"+ "WARD_PATWARI_NAME,"+ "WARD_OR_PATWARI,"+ "A.MOHALLA_ID,"+
	 * "MOHALLA_VILLAGE_NAME,"+ "A.GOV_BODY_ID,"+ "MUNICIPAL_BODY_NAME,"+
	 * "A.PROP_TYPE_ID,"+ "PROPERTY_TYPE_NAME,"+
	 * "AREA,AREA_UNIT_ID,A.VIKAS_KHAND,"+
	 * "A.RI_CIRCLE,A.LAYOUT_DETAIL,A.NAZOOL_SHEET_NUMBER,"+
	 * "A.PLOT_NUMBER,A.PROPERTY_ADDRESS,A.NORTH_BOUNDARY,"+
	 * "A.SOUTH_BOUNDARY,A.EAST_BOUNDARY,A.WEST_BOUNDARY,A.PROPERTY_LANDMARK, "+
	 * "A.ANGLE_1_PATH,A.ANGLE_2_PATH,A.ANGLE_3_PATH,A.MAP_PATH,A.RIN_PATH,A.KHASRA_PATH, "
	 * + "A.MARKET_VALUE,A.L1_TYPE_ID,A.L2_TYPE_ID, "+ "H_DISTRICT_NAME,"+
	 * "H_TEHSIL_NAME,"+ "H_AREA_TYPE_NAME,"+ "H_WARD_PATWARI_NAME,"+
	 * "H_MOHALLA_VILLAGE_NAME,"+ "H_MUNICIPAL_BODY_NAME,"+
	 * "H_PROPERTY_TYPE_NAME "+
	 * "FROM IGRS_REG_PROPRTY_DTLS A, IGRS_DISTRICT_MASTER B, IGRS_TEHSIL_MASTER C,"
	 * +
	 * "IGRS_AREA_TYPE_MASTER D, IGRS_WARD_PATWARI_MASTER E, IGRS_MOHALLA_VILLAGE_MASTER F,"
	 * + "IGRS_MUNICIPAL_BODY_MASTER G, IGRS_PROPERTY_TYPE_MASTER H "+
	 * "WHERE B.DISTRICT_ID = A.DISTRICT_ID "+ "AND C.TEHSIL_ID = A.TEHSIL_ID "+
	 * "AND D.AREA_TYPE_ID=A.AREA_TYPE_ID "+ "AND E.WARD_PATWARI_ID=A.WARD_ID "+
	 * "AND F.MOHALLA_VILLAGE_ID=A.MOHALLA_ID "+
	 * "AND G.MUNICIPAL_BODY_ID=A.GOV_BODY_ID "+
	 * "AND H.PROPERTY_TYPE_ID=A.PROP_TYPE_ID "+ "AND A.PROPERTY_ID =?";
	 */
	public static final String GET_PROP_KHASRA_DETLS_DISPLAY = "SELECT KHASRA_NUMBER,KHASRA_AREA,LAGAAN,RIN_PUSHTIKA_NUMBER,NORTH_BOUNDARY,SOUTH_BOUNDARY,EAST_BOUNDARY,WEST_BOUNDARY " + "FROM IGRS_REG_PROP_KHASARA_DTLS " + "WHERE PROPERTY_ID=?";
	public static final String GET_CLR_FLAG = "SELECT distinct CLR_FLAG FROM IGRS_REG_PROPRTY_DTLS WHERE PROPERTY_ID=?";
	// public static final String GET_PROP_KHASRA_DETLS_DISPLAY_CLR =
	// "SELECT distinct a.KHASRA_NUMBER, " + "  a.KHASRA_AREA, " +
	// "  a.LAGAAN, " + "  a.RIN_PUSHTIKA_NUMBER, " + "  a.NORTH_BOUNDARY, " +
	// "  a.SOUTH_BOUNDARY, " + "  a.EAST_BOUNDARY, " + "  a.WEST_BOUNDARY, " +
	// "  b.CLR_FLAG, " + "  b.RI_CIRCLE, " + "  b.KHASRA_NO, " +
	// "  b.KHASRA_AREA, " + "  b.NORTH_KHASRA_NO, " + "  b.SOUTH_KHASRA_NO, " +
	// "  b.EAST_KHASRA_NO, " + "  b.WEST_KHASRA_NO, " + "  b.MAP_PATH_CLR, " +
	// "  b.KHASRA_PATH_CLR " + "FROM IGRS_REG_PROP_KHASARA_DTLS a , " +
	// "  IGRS_REG_PROP_KHASRA_CLR_DETLS b " +
	// "WHERE a.KHASRA_NUMBER=b.KHASRA_NO " +
	// "AND a.PROPERTY_ID    =b.PROPERTY_ID " + "AND a.PROPERTY_ID    =?";
	// changed by akansha 9th june 2020
	// public static final String GET_PROP_KHASRA_DETLS_DISPLAY_CLR =
	// "SELECT distinct a.KHASRA_NUMBER, " + "  a.KHASRA_AREA, " +
	// "  a.LAGAAN, " + "  a.RIN_PUSHTIKA_NUMBER, " + "  a.NORTH_BOUNDARY, " +
	// "  a.SOUTH_BOUNDARY, " + "  a.EAST_BOUNDARY, " + "  a.WEST_BOUNDARY, " +
	// "  b.CLR_FLAG, " + "  b.RI_CIRCLE, " + "  b.KHASRA_NO, " +
	// "  b.KHASRA_AREA, " + "  b.NORTH_KHASRA_NO, " + "  b.SOUTH_KHASRA_NO, " +
	// "  b.EAST_KHASRA_NO, " + "  b.WEST_KHASRA_NO, " + "  b.MAP_PATH_CLR, " +
	// "  b.KHASRA_PATH_CLR," + "  to_char(b.CREATED_DATE , 'dd-mm-yyyy') "+
	// "FROM IGRS_REG_PROP_KHASARA_DTLS a , " +
	// "  IGRS_REG_PROP_KHASRA_CLR_DETLS b " +
	// "WHERE a.KHASRA_NUMBER=b.KHASRA_NO " +
	// "AND a.PROPERTY_ID    =b.PROPERTY_ID " + "AND a.PROPERTY_ID    =?";

	public static final String GET_PROP_KHASRA_DETLS_DISPLAY_CLR = "SELECT DISTINCT a.KHASRA_NUMBER,  " + " B.TOTAL_SALEBLE_AREA,  " + " a.LAGAAN,  " + " a.RIN_PUSHTIKA_NUMBER,  " + " a.NORTH_BOUNDARY,  " + " a.SOUTH_BOUNDARY,  " + " a.EAST_BOUNDARY,  " + " a.WEST_BOUNDARY,  " + " b.CLR_FLAG,  " + " b.RI_CIRCLE,  " + " b.KHASRA_NO,  " + " b.KHASRA_AREA,  " + " b.NOHIYAT,  " + " b.HALKANUMBER,  " + " b.BASRANUMBER,  " + " b.KHASRAID_DEPT_CLR,  " + " b.LAND_USETYPE,  " + " b.LAND_USETYPE_DETL,  " + " b.KHASRA_UNQ_NO,  " + " b.ALPIN_NO, " + " b.CROP_TYPE, " + " b.CROP_DESCRIIPTION," + " b.PLOT_TYPE, " + " b.PLOT_DESCRIPTION,   " + " b.LAND_TYPE,   " + " TO_CHAR(b.CREATED_DATE , 'dd-mm-yyyy') " + " FROM IGRS_REG_PROP_KHASARA_DTLS a ,  " + " IGRS_REG_KHASRA_PROP_CLR b " + "WHERE a.KHASRA_NUMBER=b.KHASRA_NO " + "AND a.PROPERTY_ID    =b.PROPERTY_ID " + "AND a.PROPERTY_ID    =?";

	// changes below for adhar
	public static final String GET_PARTY_DETS = "SELECT A.APPELLATE_TYPE_ID, B.APPELLATE_TYPE_NAME, A.PARTY_FIRST_NAME, " + "A.PARTY_MIDDLE_NAME, A.PARTY_LAST_NAME, " + "A.PARTY_GENDER, A.PARTY_AGE, " + "A.NATIONALITY,C.COUNTRY_NAME, " + "D.STATE_NAME,E.DISTRICT_NAME, " + "A.PARTY_ADDRESS, A.POSTAL_CODE, " + "A.PHONE_NUMBER, A.MOBILE_NUMBER, " + "A.EMAIL_ID, A.PHOTO_PROOF_TYPE_ID, " + "A.PHOTO_PROOF_ID, A.ORGANIZATION_NAME, " + "A.AUTHRZD_PERSN_NAME, A.GUARDIAN_NAME, " + "A.MOTHER_NAME, A.CATEGORY_ID, " + "A.CATEGORY_ID, A.PARTY_TXN_ID, " + "A.DISABILITY, A.DISABILITY_DESC, " + "A.RELATION_WITH_OWNER, A.SHARE_OF_PROPERTY, " + "A.PARTY_TYPE_ID, F.PARTY_TYPE_NAME,A.SPOUSE_NAME,A.OWNER_ID, " + "A.OCCUPATION_ID, A.OCCUPATION_ID, A.COLLECTOR_PERMISSION_NUMBER, A.COLLECTOR_CERTIFICATE, A.MEMBER_MINORITY, A.BELOW_POVERTY_LINE, A.CATEGORY_ST_SCHEDULE_AREA, " + "A.COLLECTOR_CERTIFICATE_PATH,A.PHOTO_PROOF_PATH,A.NOT_AFFD_EXEC_PATH,A.EXEC_PHOTO_PATH,A.NOT_AFFD_ATTR_PATH,A.ATTR_PHOTO_PATH,A.CLAIMNT_PHOTO_PATH,A.PAN_FORM_60_PATH, " + "A.POA_SR_OFFICE_NAME,A.POA_REG_NO,A.POA_REG_DATE,A.DISTRICT_ID,A.ROLE_NAME,A.RELATION_TYPE_ID,A.UNIVERSAL_DEED_CLAIMANT_FLAG, " + "A.AUTH_PER_COUNTRY_ID,A.AUTH_PER_STATE_ID,A.AUTH_PER_DISTRICT_ID,A.AUTH_PER_PARTY_ADDRESS, A.OFFICIAL_CHECK, A.NAME_OF_OFFICIAL, A.DESG_OF_OFFICIAL, A.ADRS_OF_OFFICIAL,A.ADDRESS_OUT_MP,A.ADDRESS_OUT_MP_AUTHPER,A.minor_guardian,A.Adhar_name,A.GOV_OFFICE_ID " + "FROM IGRS_REG_TXN_PARTY_DETLS A, " + "IGRS_APPELLATE_TYPE_MASTER B, " + "IGRS_COUNTRY_MASTER C, " + "IGRS_STATE_MASTER D, " + "IGRS_DISTRICT_MASTER E, " + "IGRS_PARTY_TYPE_MASTER F " + "WHERE A.APPELLATE_TYPE_ID=B.APPELLATE_TYPE_ID " + "AND A.COUNTRY_ID=C.COUNTRY_ID " + "AND A.STATE_ID=D.STATE_ID " + "AND A.DISTRICT_ID=E.DISTRICT_ID " + "AND A.PARTY_TYPE_ID=F.PARTY_TYPE_ID " + "AND REG_TXN_ID=? " + "AND PARTY_TXN_ID=? ";
	// changed for aadhar
	// public static final String
	// GET_OWNER_DETAILS="SELECT PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,ADDRESS_OUT_MP,ADHAR_NAME FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARTY_TXN_ID=?";
	public static final String GET_OWNER_DETAILS = "SELECT PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,ADDRESS_OUT_MP,ADHAR_NAME,COUNTRY_ID,STATE_ID,DISTRICT_ID,POSTAL_CODE,PHONE_NUMBER,GUARDIAN_NAME,MOTHER_NAME,SPOUSE_NAME,CATEGORY_ID,DISABILITY_DESC,OCCUPATION_ID,COLLECTOR_PERMISSION_NUMBER,DISABILITY,MEMBER_MINORITY,BELOW_POVERTY_LINE,CATEGORY_ST_SCHEDULE_AREA,RELATION_TYPE_ID,OWNER_PAN_NO FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARTY_TXN_ID=?";
	// changed for aadhar
	// public static final String
	// GET_ALL_OWNERS_DETAILS="SELECT PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,ADDRESS_OUT_MP,PARTY_TXN_ID,ADHAR_NAME FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARENT_ID=?";
	// changed by akansha for owner
	public static final String GET_ALL_OWNERS_DETAILS = "SELECT PARTY_FIRST_NAME,PARTY_GENDER,PARTY_AGE,NATIONALITY,PARTY_ADDRESS,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME,ADDRESS_OUT_MP,PARTY_TXN_ID,ADHAR_NAME,COUNTRY_ID,STATE_ID,DISTRICT_ID,POSTAL_CODE,PHONE_NUMBER,GUARDIAN_NAME,MOTHER_NAME,SPOUSE_NAME,CATEGORY_ID,DISABILITY_DESC,OCCUPATION_ID,COLLECTOR_PERMISSION_NUMBER,DISABILITY,MEMBER_MINORITY,BELOW_POVERTY_LINE,CATEGORY_ST_SCHEDULE_AREA,RELATION_TYPE_ID,OWNER_PAN_NO FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARENT_ID=?";
	// changed for adhar
	public static final String GET_SAVED_AAPLICANT_DETLS = "SELECT REG_TXN_ID,APPELLATE_TYPE_ID,PARTY_FIRST_NAME," + "PARTY_MIDDLE_NAME,PARTY_LAST_NAME,PARTY_GENDER," + "PARTY_AGE,NATIONALITY,COUNTRY_ID," + "STATE_ID,DISTRICT_ID,PARTY_ADDRESS," + "POSTAL_CODE,PHONE_NUMBER,MOBILE_NUMBER," + "EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID," + "ORGANIZATION_NAME,AUTHRZD_PERSN_NAME," + "GUARDIAN_NAME,MOTHER_NAME,CATEGORY_ID," + "PARTY_TXN_ID,DISABILITY,RELATION_WITH_OWNER," + "SHARE_OF_PROPERTY,PARTY_TYPE_ID,SPOUSE_NAME," + "OWNER_ID,DISABILITY_DESC,OCCUPATION_ID," + "COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH," + "MEMBER_MINORITY,BELOW_POVERTY_LINE," + "CATEGORY_ST_SCHEDULE_AREA,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH, " + "ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE, " + "ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS " + ", OFFICIAL_CHECK, NAME_OF_OFFICIAL, DESG_OF_OFFICIAL, ADRS_OF_OFFICIAL,ADDRESS_OUT_MP,ADDRESS_OUT_MP_AUTHPER,Adhar_name,GOV_OFFICE_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE UPPER(IS_APPLICANT)='Y' and  REG_TXN_ID=?";
	public static final String GET_APPLICANT_SHARE_HOLDERS = "SELECT REG_TXN_ID,APPELLATE_TYPE_ID,PARTY_FIRST_NAME," + "PARTY_MIDDLE_NAME,PARTY_LAST_NAME,PARTY_GENDER," + "PARTY_AGE,NATIONALITY,COUNTRY_ID," + "STATE_ID,DISTRICT_ID,PARTY_ADDRESS," + "POSTAL_CODE,PHONE_NUMBER,MOBILE_NUMBER," + "EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID," + "ORGANIZATION_NAME,AUTHRZD_PERSN_NAME," + "GUARDIAN_NAME,MOTHER_NAME,CATEGORY_ID," + "PARTY_TXN_ID,DISABILITY,RELATION_WITH_OWNER," + "SHARE_OF_PROPERTY,PARTY_TYPE_ID,SPOUSE_NAME," + "OWNER_ID,DISABILITY_DESC,OCCUPATION_ID," + "COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH," + "MEMBER_MINORITY,BELOW_POVERTY_LINE," + "CATEGORY_ST_SCHEDULE_AREA,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH, " + "ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE, " + "ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS " + "FROM IGRS_REG_TXN_PARTY_DETLS WHERE UPPER(IS_APPLICANT)='C' and  REG_TXN_ID=?";
	public static final String GET_ALL_VALUATION_IDS_EXCHANGE = "SELECT VAL_TXN_ID FROM IGRS_PROP_VAL_DETAILS WHERE REF_VAL_TXN_ID=? ORDER BY VAL_TXN_ID ASC";
	public static final String GET_ALL_PROPERTY_DETLS_EXCHANGE = "SELECT VAL_TXN_ID,DISTRICT_ID,TEHSIL_ID,MARKET_VALUE,PARTY_TYPE FROM IGRS_PROP_VAL_DETAILS WHERE VAL_TXN_ID=?";
	// FOLLOWING QUERIES FOR DELETING PARTIAL SAVED APPLICATIONS FROM DASHBOARD
	public static final String DEL_REG_INIT_TRANS_DETLS = "delete from IGRS_REG_TXN_PARTY_DETLS where REG_TXN_ID =";
	public static final String DEL_REG_INIT_PROP_DETLS = "delete from IGRS_REG_PROPRTY_DTLS where REG_TXN_ID =";
	public static final String DEL_REG_INIT_MAP_DETLS = "delete from IGRS_REG_INIT_PROP_TRANS_MAP where REG_INIT_TXN_ID =";
	public static final String DEL_REG_INIT_DEED_DETLS = "delete from IGRS_REG_TXN_DETLS where REG_TXN_ID =";
	public static final String DEL_REG_INIT_EXEMP_DETLS = "delete from IGRS_REG_EXEMPTION_DETLS where REG_TXN_ID =";
	public static final String DEL_REG_INIT_PROP_KHASRA_DETLS = "delete from IGRS_REG_PROP_KHASARA_DTLS where PROPERTY_ID IN (SELECT PROPERTY_ID FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=?)";
	public static final String DEL_REG_INIT_TXN_DETLS = "UPDATE IGRS_REG_TXN_DETLS SET  DELETE_FLAG='D' WHERE REG_TXN_ID=?";
	public static final String DEL_REG_INIT_TXN_DETLS_ADJU = "UPDATE IGRS_REG_TXN_DETLS SET  DELETE_FLAG_ADJU='D' WHERE REG_TXN_ID=?";
	//
	public static final String GET_APPLICANT_REG_DETLS = "select FIRST_NAME,MIDDLE_NAME,LAST_NAME,GENDER,NATIONALITY,COUNTRY_ID,STATE_ID,DISTRICT_ID,ADDRESS,POSTAL_CODE,PHONE_NUMBER,MOBILE_NUMBER,EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,GUARDIAN_NAME,MOTHER_NAME,SPOUSE_NAME,AGE,CATEGORY_ID,OCCUPATION from IGRS_USER_REG_DETAILS where user_id=?";
	public static final String GET_OCCUPATION_LIST = "SELECT O.OCCUPATION_ID,O.OCCUPATION_NAME FROM IGRS_OCCUPATION_MASTER O ORDER BY O.OCCUPATION_ID ASC";
	public static final String GET_OCCUPATION_NAME = "SELECT OCCUPATION_NAME FROM IGRS_OCCUPATION_MASTER WHERE OCCUPATION_ID=?";
	public static final String GET_APPLICANT_SHARE = "SELECT SHARE_OF_PROPERTY FROM IGRS_REG_TXN_PARTY_DETLS WHERE IS_APPLICANT='Y' AND REG_TXN_ID=?";
	public static final String GET_PARTY_TXN_ID_LIST = "select PARTY_TXN_ID from IGRS_REG_INIT_PROP_TRANS_MAP where PROPERTY_ID=?";
	public static final String GET_PARTY_DETAILS_PDF = "SELECT REG_TXN_ID,APPELLATE_TYPE_ID,PARTY_FIRST_NAME," + "PARTY_MIDDLE_NAME,PARTY_LAST_NAME,PARTY_GENDER," + "PARTY_AGE,NATIONALITY,COUNTRY_ID," + "STATE_ID,DISTRICT_ID,PARTY_ADDRESS," + "POSTAL_CODE,PHONE_NUMBER,MOBILE_NUMBER," + "EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID," + "ORGANIZATION_NAME,AUTHRZD_PERSN_NAME," + "GUARDIAN_NAME,MOTHER_NAME,CATEGORY_ID," + "PARTY_TXN_ID,DISABILITY,RELATION_WITH_OWNER," + "SHARE_OF_PROPERTY,PARTY_TYPE_ID,SPOUSE_NAME," + "OWNER_ID,DISABILITY_DESC,OCCUPATION_ID," + "COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH," + "MEMBER_MINORITY,BELOW_POVERTY_LINE," + "CATEGORY_ST_SCHEDULE_AREA,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH, " + "ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE,RELATION_TYPE_ID,AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS " + "FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARTY_TXN_ID=?";
	public static final String GET_GUIDELINE_RATE_WITH_L2 = "SELECT A.GUIDELINE_VALUE FROM IGRS_GUIDELINE_MASTER_CHILD2 A, IGRS_GUIDELINE_MASTER_CHILD1 B, IGRS_GUIDELINE_MASTER_PARENT C " + "WHERE C.DISTRICT_ID=? AND C.GUIDELINE_ID=B.GUIDELINE_ID AND B.TEHSIL_ID=? AND B.WARD_PATWARI_ID=? AND B.MOHALLA_VILLAGE_ID=? " + "AND B.GUIDELINE_CHILD1_ID=A.GUIDELINE_CHILD1_ID AND A.PROPERTY_TYPE_ID=? AND A.PROPERTY_TYPE_L1_ID=? AND A.PROPERTY_TYPE_L2_ID=?";
	public static final String GET_GUIDELINE_RATE_WITHOUT_L2 = "SELECT A.GUIDELINE_VALUE FROM IGRS_GUIDELINE_MASTER_CHILD2 A, IGRS_GUIDELINE_MASTER_CHILD1 B, IGRS_GUIDELINE_MASTER_PARENT C " + "WHERE C.DISTRICT_ID=? AND C.GUIDELINE_ID=B.GUIDELINE_ID AND B.TEHSIL_ID=? AND B.WARD_PATWARI_ID=? AND B.MOHALLA_VILLAGE_ID=? " + "AND B.GUIDELINE_CHILD1_ID=A.GUIDELINE_CHILD1_ID AND A.PROPERTY_TYPE_ID=? AND A.PROPERTY_TYPE_L1_ID=?";
	// BELOW ADDED BY ROOPAM FOR TITLE DEED
	public static final String SELECT_DEED_ID = "select DEED_ID FROM IGRS_PROP_STAMP_DUTY_DETAILS WHERE DUTY_TXN_ID=?";
	public static final String SELECT_INSTRUMENT_ID = "select INSTRUMENT_ID FROM IGRS_PROP_STAMP_DUTY_DETAILS WHERE DUTY_TXN_ID=?";
	public static final String SELECT_PROPERTY_TYPE_L2_DETAILS = "SELECT PROPERTY_TYPE_L2_ID,PROPERTY_TYPE_L2_DESC FROM IGRS_PROP_TYPE_L2_MASTER WHERE PROPERTY_TYPE_L1_ID=? AND PROPERTY_TYPE_L2_STATUS='A'";
	public static final String SELECT_UNIT_LIST_DETAILS = "SELECT A.UOM_ID,A.UOM_NAME FROM IGRS_UOM_MASTER A, IGRS_PROP_TYPE_L1_MASTER B WHERE A.UOM_ID=B.UOM_ID AND B.PROPERTY_TYPE_L1_ID=?";
	public static final String GET_PROPERTY_TYPE_NAME = "SELECT PROPERTY_TYPE_NAME FROM IGRS_PROPERTY_TYPE_MASTER WHERE PROPERTY_TYPE_ID=?";
	// public static final String INSERT_REG_PROP_DETLS_NON_PROP_DEEDS =
	// "INSERT INTO IGRS_REG_PROPRTY_DTLS(PROPERTY_ID,REG_TXN_ID,VIKAS_KHAND,RI_CIRCLE,LAYOUT_DETAIL,NAZOOL_SHEET_NUMBER,PLOT_NUMBER,PROPERTY_ADDRESS,EAST_BOUNDARY,WEST_BOUNDARY,NORTH_BOUNDARY,SOUTH_BOUNDARY,PROPERTY_LANDMARK,  AREA_TYPE_ID ,  GOV_BODY_ID ,  PROP_TYPE_ID ,  L1_TYPE_ID ,  L2_TYPE_ID ,  AREA_UNIT_ID ,  AREA ,  PROP_TXN_COMPL_FLAG ,  DISTRICT_ID ,  TEHSIL_ID,  WARD_ID ,  MOHALLA_ID ,  CREATED_BY ,  CREATED_DATE,ANGLE_1_PATH,ANGLE_2_PATH,ANGLE_3_PATH,MAP_PATH,RIN_PATH,KHASRA_PATH) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?,?)";
	// added AUDIT_REPORT_PATH
	// public static final String UPDATE_REG_PROP_DETLS_NON_PROP_DEEDS =
	// "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND=?,RI_CIRCLE=?,LAYOUT_DETAIL=?,NAZOOL_SHEET_NUMBER=?,PLOT_NUMBER=?,PROPERTY_ADDRESS=?,EAST_BOUNDARY=?,WEST_BOUNDARY=?,NORTH_BOUNDARY=?,SOUTH_BOUNDARY=?,PROPERTY_LANDMARK=?, PROP_TXN_COMPL_FLAG=? ,UPDATE_BY=? ,  UPDATE_DATE=sysdate ,ANGLE_1_PATH=? ,ANGLE_2_PATH=? ,ANGLE_3_PATH=? ,MAP_PATH=? ,RIN_PATH=? ,KHASRA_PATH=? WHERE PROPERTY_ID=? AND REG_TXN_ID=?";
	public static final String UPDATE_REG_PROP_DETLS_NON_PROP_DEEDS = "UPDATE IGRS_REG_PROPRTY_DTLS SET VIKAS_KHAND=?,RI_CIRCLE=?,LAYOUT_DETAIL=?,NAZOOL_SHEET_NUMBER=?,PLOT_NUMBER=?,PROPERTY_ADDRESS=?,EAST_BOUNDARY=?,WEST_BOUNDARY=?,NORTH_BOUNDARY=?,SOUTH_BOUNDARY=?,PROPERTY_LANDMARK=?, PROP_TXN_COMPL_FLAG=? ,UPDATE_BY=? ,  UPDATE_DATE=sysdate ,ANGLE_1_PATH=? ,ANGLE_2_PATH=? ,ANGLE_3_PATH=? ,MAP_PATH=? ,RIN_PATH=? ,KHASRA_PATH=?,AUDIT_REPORT_PATH=? WHERE PROPERTY_ID=? AND REG_TXN_ID=?";
	public static final String INSERT_REG_PROP_FLOOR_DETLS = "INSERT INTO IGRS_REG_FLOOR_DETAILS(FLOOR_TXN_ID,PROPERTY_ID,L1_TYPE_ID,L2_TYPE_ID,FLOOR_TYPE_ID,CONSTRUCTED_AREA,AREA,AREA_UNIT_ID,CREATED_BY,CREATED_DATE) VALUES(IGRS_REG_FLOOR_DETLS_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,sysdate)";
	public static final String GET_PROPERTY_ID_LIST_NON_PROP_DEED = "select PROPERTY_ID from IGRS_REG_PROPRTY_DTLS where REG_TXN_ID=?";
	public static final String GET_TRANS_PARTY_DETS_NON_PROP_DEED = "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID,A.DESG_OF_OFFICIAL,A.APPELLATE_TYPE_ID,A.party_age,A.GUARDIAN_NAME,A.minor_guardian, a.relation_type_id,a.universal_deed_claimant_flag    " + "FROM IGRS_REG_TXN_PARTY_DETLS A," + "IGRS_PARTY_TYPE_MASTER B " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID AND IS_APPLICANT IN ('Y','N','C') " + "AND A.REG_TXN_ID=? " + "ORDER BY A.PARTY_TXN_ID";
	public static final String GET_REG_NON_PROP_DUTY_DETS = "SELECT A.STAMP_DUTY,A.GRAM_DUTY,A.NAGAR_DUTY,A.UPKAR,A.REG_FEE,A.TOTAL " + "FROM IGRS_PROP_STAMP_DUTY_DETAILS A " + "WHERE A.DUTY_TXN_ID=?";
	public static final String GET_BUILDING_FLOOR_DETAILS_NON_PROP = "SELECT FLOOR_TXN_ID,L1_TYPE_ID,L2_TYPE_ID,A.FLOOR_TYPE_ID,A.AREA_UNIT_ID,AREA,CONSTRUCTED_AREA," + "B.PROP_TYPE_L1_NAME,C.PROPERTY_TYPE_L2_NAME,D.FLOOR_NAME,E.UOM_NAME " + "FROM IGRS_REG_FLOOR_DETAILS A," + "IGRS_PROP_TYPE_L1_MASTER_DUMMY B," + "IGRS_PROP_TYPE_L2_MASTER_DUMMY C," + "IGRS_FLOOR_MASTER D, " + "IGRS_UOM_MASTER E " + "WHERE B.PROP_TYPE_L1_ID=A.L1_TYPE_ID " + "AND C.PROPERTY_TYPE_L2_ID=A.L2_TYPE_ID " + "AND D.FLOOR_ID=A.FLOOR_TYPE_ID " + "AND E.UOM_ID=A.AREA_UNIT_ID AND A.PROPERTY_ID=?";
	public static final String GET_REG_PAYMENT_TXN_ID_SEQ = "SELECT IGRS_REG_PAYMNT_TXN_ID_SEQ.NEXTVAL FROM DUAL";
	public static final String GET_REG_INIT_PAYMENT_FLAG = "SELECT PAYMENT_FLAG,TXN_ID from IGRS_REG_PAYMENT_DETLS where CREATED_DATE=(SELECT MAX(CREATED_DATE) FROM IGRS_REG_PAYMENT_DETLS WHERE REG_TXN_ID=?) AND REG_TXN_ID=? AND PAYMENT_TYPE_ID=? AND SOURCE_MOD_FLAG=?";
	public static final String INSERT_REG_INIT_PAYMENT_DETLS = "INSERT INTO IGRS_REG_PAYMENT_DETLS(TXN_ID,REG_TXN_ID,CREATED_BY,CREATED_DATE,PAYMENT_FLAG,PAYABLE_AMOUNT,SOURCE_MOD_FLAG,PAYMENT_TYPE_ID) VALUES(?,?,?,sysdate,?,?,?,?)";
	public static final String GET_ALL_PAID_AMOUNTS = "select PAID_AMOUNT,PAYMENT_TYPE_ID from IGRS_REG_PAYMENT_DETLS where PAYMENT_FLAG IN ('P','C') AND REG_TXN_ID=? and PAYMENT_TXN_ID IS NOT NULL";
	public static final String GET_REG_INIT_PAYMENT_TXN_ID = "SELECT PAYMENT_TXN_ID,PAID_AMOUNT,PAYABLE_AMOUNT FROM IGRS_REG_PAYMENT_DETLS WHERE CREATED_DATE=(SELECT MAX(CREATED_DATE) FROM IGRS_REG_PAYMENT_DETLS WHERE REG_TXN_ID=?) AND REG_TXN_ID=? AND PAYMENT_TYPE_ID=? and SOURCE_MOD_FLAG=?";
	// public static final String GET_REG_DIST_ID
	// ="SELECT DISTRICT_ID FROM IGRS_REG_PROPRTY_DTLS WHERE CREATED_DATE=(SELECT MIN(CREATED_DATE) FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=?) AND REG_TXN_ID=?";
	public static final String GET_REG_DIST_ID = "SELECT DISTRICT_ID FROM IGRS_REG_PROPRTY_DTLS WHERE PROPERTY_ID= ((SELECT PROPERTY_ID  FROM IGRS_REG_PROPRTY_DTLS WHERE to_number(SUBSTR(PROPERTY_ID,-8))=(SELECT MIN(to_number(SUBSTR(PROPERTY_ID,-8))) FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=? ))) AND REG_TXN_ID=?";
	public static final String INSERT_REG_ESTAMP_MAP_DETLS = "INSERT INTO IGRS_REG_ESTAMP_MAP(TRANSACTION_ID,ESTAMP_TXN_ID,REG_TXN_ID,CREATED_BY,CREATED_DATE,ESTAMP_PDF_PATH) VALUES(IGRS_REG_ESTAMP_MAP_ID_SEQ.NEXTVAL,?,?,?,sysdate,?)";
	public static final String UPDATE_PAYMENT_FLAG = "UPDATE IGRS_REG_PAYMENT_DETLS SET PAYMENT_FLAG=? WHERE REG_TXN_ID=? AND PAYMENT_TYPE_ID=1 AND SOURCE_MOD_FLAG='I' and PAYMENT_TXN_ID IS NOT NULL";
	public static final String GET_BANK_DETLS = "SELECT BANK_NAME_DEPOSIT_DEED,BRANCH_NAME_DEPOSIT_DEED,BANK_ADDRESS_DEPOSIT_DEED,BANK_AUTH_PERSON_DEPOSIT_DEED,LOAN_AMOUNT,SANCTIONED_AMOUNT," + "TRUST_NAME,TRUST_DATE,RENT,ADVANCE,DEVELOPMENT_CHARGE,OTHER_REC_CHARGE_PAID,PREMIUM,TERM_OF_LEASE,WITH_POSSESSION,SEC_LOAN_AMT,PARTY_FIRST_NAME," + "PARTY_MIDDLE_NAME,PARTY_LAST_NAME,PARTY_GENDER,PARTY_AGE,GUARDIAN_NAME,MOTHER_NAME,SPOUSE_NAME,NATIONALITY,PARTY_ADDRESS,COUNTRY_ID,STATE_ID," + "DISTRICT_ID,PHONE_NUMBER,MOBILE_NUMBER,EMAIL_ID,CATEGORY_ID,DISABILITY,DISABILITY_DESC,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID,ADVANCE_PAYMNT_DATE," + "POSSESION_GIVEN,POA_WITH_CONSIDRTN,POA_PERIOD,PAID_LOAN_AMT,CONTRIBUTORY_PROP,DISSOLUTION_DATE,RETIRMENT_DATE,EXECUTION_DATE,REGISTRATION_DATE," + "REGISTRATION_NO,AMOUNT,PROPERTY_DETLS,DEED_NAME,DEED_TYPE,MAP_ORDER_NO,MAP_ORDER_DATE,TCP_ORDER_NO,TCP_ORDER_DATE,ADVANCE_PAYMENT_DETLS,SHARE_DEBENTURE,AGREEMENT_DETAILS,WORKCONTRACT_DETAILS  FROM IGRS_REG_DEEDS_EXTRA_DTLS WHERE REG_TXN_ID=?";
	public static final String UPDATE_REG_INIT_TXN_STATUS = "UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS=? WHERE REG_TXN_ID=?";
	public static final String GET_PARTY_IDS_EXCHNG_PDF = "SELECT PARTY_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE IS_APPLICANT IN ('Y','N','C') AND PARTY_TYPE_ID IN (?,?) AND REG_TXN_ID=?";
	public static final String GET_PROP_IDS_EXCHNG_PDF = "SELECT DISTINCT(PROPERTY_ID) FROM IGRS_REG_INIT_PROP_TRANS_MAP WHERE PARTY_TXN_ID IN(SELECT PARTY_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARTY_TYPE_ID IN (?,?) AND REG_TXN_ID=?) AND REG_TXN_ID=?";
	public static final String GET_PARTY_TXN_ID_LIST_TITLE_DEED = "select PARTY_TXN_ID from IGRS_REG_TXN_PARTY_DETLS where IS_APPLICANT IN ('Y','C','N') AND REG_TXN_ID=?";
	public static final String GET_CONSID_AMNT_SYS_MV = "SELECT CONSIDER_AMOUNT,SYSTEM_MV from IGRS_PROP_VAL_DETAILS where VAL_TXN_ID=?";
	public static final String GET_CONSID_AMNT_TITLE_DEED = "SELECT USER_ENTERED_VAL FROM IGRS_STAMP_DUTY_DETAILS A, IGRS_REG_TXN_DETLS B WHERE A.DUTY_TXN_ID=B.DUTY_TXN_ID AND B.REG_TXN_ID=?";
	public static final String GET_BUILDING_FLOOR_DETAILS_TITLE_DEED = "SELECT FLOOR_TXN_ID,L1_TYPE_ID,L2_TYPE_ID,FLOOR_TYPE_ID,AREA_UNIT_ID,AREA,CONSTRUCTED_AREA," + "B.PROPERTY_TYPE_L1_NAME,C.PROPERTY_TYPE_L2_NAME,D.FLOOR_NAME,E.UOM_NAME " + "FROM IGRS_REG_FLOOR_DETAILS A," + "IGRS_PROP_TYPE_L1_MASTER B," + "IGRS_PROP_TYPE_L2_MASTER C," + "IGRS_FLOOR_MASTER D, IGRS_UOM_MASTER E " + "WHERE B.PROPERTY_TYPE_L1_ID=A.L1_TYPE_ID " + "AND C.PROPERTY_TYPE_L2_ID=A.L2_TYPE_ID " + "AND D.FLOOR_ID=A.FLOOR_TYPE_ID AND E.UOM_ID=A.AREA_UNIT_ID " + "AND PROPERTY_ID=?";
	public static final String GET_PAYMENT_DETLS_DISPLAY = "SELECT B.PAYMENT_MODE_ID,A.PAYMENT_MODE,B.PAYMENT_TXN_ID,B.PAID_AMOUNT,B.CREATED_DATE FROM IGRS_PAYMENT_MODE_MASTER A,IGRS_REG_PAYMENT_DETLS B WHERE B.PAYMENT_MODE_ID=A.PAYMENT_MODE_ID AND B.PAYMENT_FLAG='C' AND B.REG_TXN_ID=?";
	public static final String UPDATE_REG_TXN_PARTY_NEW = "UPDATE IGRS_REG_TXN_PARTY_DETLS SET PARTY_FIRST_NAME=?," + "PARTY_MIDDLE_NAME=?, PARTY_LAST_NAME=?,  PARTY_GENDER=?," + "PARTY_AGE=?, NATIONALITY=?, DISTRICT_ID=?," + "PARTY_ADDRESS=?, POSTAL_CODE=?, PHONE_NUMBER=?," + "MOBILE_NUMBER=?, EMAIL_ID=?, PHOTO_PROOF_TYPE_ID=?," + "PHOTO_PROOF_ID=?, ORGANIZATION_NAME=?, AUTHRZD_PERSN_NAME=?," + "GUARDIAN_NAME=?, MOTHER_NAME=?, CATEGORY_ID=?," + "OCCUPATION_ID=?, DISABILITY=?, RELATION_WITH_OWNER=?," + "UPDATE_BY=?, UPDATE_DATE=sysdate, SPOUSE_NAME=?," + "DISABILITY_DESC=?, MEMBER_MINORITY=?, BELOW_POVERTY_LINE=?," + "CATEGORY_ST_SCHEDULE_AREA=?,COLLECTOR_PERMISSION_NUMBER=?,COLLECTOR_CERTIFICATE_PATH=?," + "PHOTO_PROOF_PATH=?,NOT_AFFD_EXEC_PATH=?,EXEC_PHOTO_PATH=?," + "NOT_AFFD_ATTR_PATH=?,ATTR_PHOTO_PATH=?,CLAIMNT_PHOTO_PATH=?," + "PAN_FORM_60_PATH=?,POA_SR_OFFICE_NAME=?,POA_REG_NO=?,POA_REG_DATE =?,RELATION_TYPE_ID=?,AUTH_PER_COUNTRY_ID=?,AUTH_PER_STATE_ID=?,AUTH_PER_DISTRICT_ID=?,AUTH_PER_PARTY_ADDRESS=?, " + "OFFICIAL_CHECK=?, NAME_OF_OFFICIAL=?, DESG_OF_OFFICIAL=?, ADRS_OF_OFFICIAL=?, ADDRESS_OUT_MP=?, ADDRESS_OUT_MP_AUTHPER=?,MINOR_GUARDIAN =? WHERE REG_TXN_ID=? AND PARTY_TXN_ID=? ";
	public static final String UPDATE_REG_TXN_PARTY_NEW1 = "UPDATE IGRS_REG_TXN_PARTY_DETLS SET PARTY_FIRST_NAME=?," + "PARTY_MIDDLE_NAME=?, PARTY_LAST_NAME=?,  PARTY_GENDER=?," + "PARTY_AGE=?, NATIONALITY=?, DISTRICT_ID=?," + "PARTY_ADDRESS=?, POSTAL_CODE=?, PHONE_NUMBER=?," + "MOBILE_NUMBER=?, EMAIL_ID=?, PHOTO_PROOF_TYPE_ID=?," + "PHOTO_PROOF_ID=?, ORGANIZATION_NAME=?, AUTHRZD_PERSN_NAME=?," + "GUARDIAN_NAME=?, MOTHER_NAME=?, CATEGORY_ID=?," + "OCCUPATION_ID=?, DISABILITY=?, RELATION_WITH_OWNER=?," + "UPDATE_BY=?, UPDATE_DATE=sysdate, SPOUSE_NAME=?," + "DISABILITY_DESC=?, MEMBER_MINORITY=?, BELOW_POVERTY_LINE=?," + "CATEGORY_ST_SCHEDULE_AREA=?,COLLECTOR_PERMISSION_NUMBER=?,COLLECTOR_CERTIFICATE_PATH=?," + "PHOTO_PROOF_PATH=?,NOT_AFFD_EXEC_PATH=?,EXEC_PHOTO_PATH=?," + "NOT_AFFD_ATTR_PATH=?,ATTR_PHOTO_PATH=?,CLAIMNT_PHOTO_PATH=?," + "PAN_FORM_60_PATH=?,POA_SR_OFFICE_NAME=?,POA_REG_NO=?,POA_REG_DATE =?,RELATION_TYPE_ID=?,AUTH_PER_COUNTRY_ID=?,AUTH_PER_STATE_ID=?,AUTH_PER_DISTRICT_ID=?,AUTH_PER_PARTY_ADDRESS=?, " + "OFFICIAL_CHECK=?, NAME_OF_OFFICIAL=?, DESG_OF_OFFICIAL=?, ADRS_OF_OFFICIAL=?, ADDRESS_OUT_MP=?, ADDRESS_OUT_MP_AUTHPER=? WHERE REG_TXN_ID=? AND PARTY_TXN_ID=? ";
	/*
	 * public static final StringUPDATE_OWNER_DETAILS=
	 * "UPDATE IGRS_REG_TXN_PARTY_DETLS SET APPELLATE_TYPE_ID=?,"+
	 * "PARTY_FIRST_NAME=?,PARTY_GENDER=?,PARTY_AGE=?,NATIONALITY=?,"+
	 * "PARTY_ADDRESS=?,MOBILE_NUMBER=?,EMAIL_ID=?,PHOTO_PROOF_TYPE_ID=?,"+
	 * "PHOTO_PROOF_ID=?,ORGANIZATION_NAME=?,AUTHRZD_PERSN_NAME=?,"+
	 * "UPDATE_BY=?,UPDATE_DATE=sysdate,ADDRESS_OUT_MP=? "+
	 * "where REG_TXN_ID=? and PARTY_TXN_ID=?";
	 */
	// changed bu akansha for owner
	public static final String UPDATE_OWNER_DETAILS = "UPDATE IGRS_REG_TXN_PARTY_DETLS " + "SET APPELLATE_TYPE_ID         =?, " + "  PARTY_FIRST_NAME            =?, " + "  PARTY_GENDER                =?, " + "  PARTY_AGE                   =?, " + "  NATIONALITY                 =?, " + "  PARTY_ADDRESS               =?, " + "  MOBILE_NUMBER               =?, " + "  EMAIL_ID                    =?, " + "  PHOTO_PROOF_TYPE_ID         =?, " + "  PHOTO_PROOF_ID              =?, " + "  ORGANIZATION_NAME           =?, " + "  AUTHRZD_PERSN_NAME          =?, " + "  UPDATE_BY                   =?, " + "  UPDATE_DATE                 =sysdate, " + "  ADDRESS_OUT_MP              =?, " + "  COUNTRY_ID                   = ?, " + "  STATE_ID                    =?, " + "  DISTRICT_ID                 = ?, " + "  POSTAL_CODE                 = ?, " + "  PHONE_NUMBER                = ?, " + "  GUARDIAN_NAME               = ?, " + "  MOTHER_NAME                 = ?, " + "  SPOUSE_NAME                 = ?, " + "  CATEGORY_ID                 = ?, " + "  DISABILITY_DESC             = ?, " + "  OCCUPATION_ID               = ?, " + "  COLLECTOR_PERMISSION_NUMBER = ?, " + "  DISABILITY                  = ?, " + "  MEMBER_MINORITY             = ?, " + "  BELOW_POVERTY_LINE          = ?, " + "  CATEGORY_ST_SCHEDULE_AREA   = ?, " + "  RELATION_TYPE_ID            = ?, " + "  OWNER_PAN_NO                = ? " + "WHERE REG_TXN_ID              =? " + "AND PARTY_TXN_ID              =?";
	public static final String DELETE_REG_INIT_PROP_KHASRA_DETLS = "DELETE FROM IGRS_REG_PROP_KHASARA_DTLS WHERE PROPERTY_ID=?";
	public static final String GET_ESTAMP_TXN_DETLS = "SELECT ESTAMP_CODE,ESTAMP_TXN_ID FROM IGRS_ESTAMP_DETLS WHERE REG_INIT_ID=?";
	public static final String GET_ESTAMP_CODE = "SELECT A.ESTAMP_CODE FROM IGRS_ESTAMP_DETLS A, IGRS_REG_ESTAMP_MAP B WHERE A.ESTAMP_TXN_ID=B.ESTAMP_TXN_ID AND B.REG_TXN_ID=?";
	public static final String GET_PENDING_APP_STATUS = "SELECT REGISTRATION_TXN_STATUS,ADJUDICATION_FLAG from IGRS_REG_TXN_DETLS where REG_TXN_ID=?";
	public static final String GET_PROPERTY_ID_OF_APPLICANT = "SELECT B.PROPERTY_ID, C.VAL_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS A, IGRS_REG_INIT_PROP_TRANS_MAP B, IGRS_REG_PROPRTY_DTLS C WHERE C.PROPERTY_ID=B.PROPERTY_ID AND B.PARTY_TXN_ID=A.PARTY_TXN_ID AND A.IS_APPLICANT='Y' AND A.REG_TXN_ID=?";
	public static final String GET_LATEST_PROPERTY_ID = "SELECT A.PROPERTY_ID, A.VAL_TXN_ID FROM IGRS_REG_PROPRTY_DTLS A WHERE A.CREATED_DATE=(SELECT MAX(B.CREATED_DATE) FROM IGRS_REG_PROPRTY_DTLS B WHERE  B.REG_TXN_ID=? ) AND A.REG_TXN_ID=? AND (PROPERTY_ADDRESS IS NULL OR PROPERTY_ADDRESS='') ";
	public static final String GET_ALL_PROPERTY_ID = "SELECT A.PROPERTY_ID, A.VAL_TXN_ID FROM IGRS_REG_PROPRTY_DTLS A WHERE A.REG_TXN_ID=?";
	// public static final String
	// GET_ALL_PROPERTY_DETLS_EXCHANGE_DASH="SELECT B.PROPERTY_ID,B.VAL_TXN_ID,B.MARKET_VALUE,A.PARTY_TYPE FROM IGRS_PROP_VAL_DETAILS A,IGRS_REG_PROPRTY_DTLS B  WHERE B.VAL_TXN_ID=A.VAL_TXN_ID AND A.VAL_TXN_ID=?";
	// public static final String
	// GET_REMAINING_VALUATION_IDS_EXCHANGE_DASH="SELECT A.VAL_TXN_ID FROM IGRS_PROP_VAL_DETAILS A,IGRS_REG_PROPRTY_DTLS B WHERE B.VAL_TXN_ID=A.VAL_TXN_ID AND B.NORTH_BOUNDARY IS NULL AND REF_VAL_TXN_ID=? ORDER BY VAL_TXN_ID ASC";
	public static final String GET_DUTY_TXN_ID = "SELECT DUTY_TXN_ID FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	public static final String GET_APPLICANT_ADDRESS = "SELECT DISTRICT_ID,PARTY_ADDRESS,COUNTRY_ID,STATE_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE IS_APPLICANT='Y' AND REG_TXN_ID=?";
	public static final String UPDATE_REG_INIT_TXN_STATUS_WITH_ADDRESS = "UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS=?,POSTAL_COUNTRY_ID=?,POSTAL_STATE_ID=?,POSTAL_DISTRICT_ID=?,POSTAL_ADDRESS=?,TOT_UPLD_NO=?,TOT_UPLD_SIZE=? WHERE REG_TXN_ID=?";
	public static final String UPDATE_BANK_DTLS = "UPDATE IGRS_REG_DEEDS_EXTRA_DTLS SET BANK_NAME_DEPOSIT_DEED=?,BRANCH_NAME_DEPOSIT_DEED=?,BANK_ADDRESS_DEPOSIT_DEED=?,BANK_AUTH_PERSON_DEPOSIT_DEED=?,LOAN_AMOUNT=?,SANCTIONED_AMOUNT=?,UPDATE_BY=?,UPDATE_DATE=SYSDATE,TRUST_NAME=?,TRUST_DATE=?,RENT=?,ADVANCE=?,DEVELOPMENT_CHARGE=?,OTHER_REC_CHARGE_PAID=?,PREMIUM=?,TERM_OF_LEASE=?,WITH_POSSESSION=?,SEC_LOAN_AMT=?," + "PARTY_FIRST_NAME=?,PARTY_MIDDLE_NAME=?,PARTY_LAST_NAME=?,PARTY_GENDER=?,PARTY_AGE=?,GUARDIAN_NAME=?,MOTHER_NAME=?,SPOUSE_NAME=?,NATIONALITY=?,PARTY_ADDRESS=?,COUNTRY_ID=?,STATE_ID=?,DISTRICT_ID=?,PHONE_NUMBER=?,MOBILE_NUMBER=?,EMAIL_ID=?,CATEGORY_ID=?,DISABILITY=?,DISABILITY_DESC=?,PHOTO_PROOF_TYPE_ID=?,PHOTO_PROOF_ID=?,ADVANCE_PAYMNT_DATE=?,POSSESION_GIVEN=?,POA_WITH_CONSIDRTN=?," + "POA_PERIOD=?,PAID_LOAN_AMT=?,CONTRIBUTORY_PROP=?,DISSOLUTION_DATE=?,RETIRMENT_DATE=?,EXECUTION_DATE=?,REGISTRATION_DATE=?,REGISTRATION_NO=?,AMOUNT=?,PROPERTY_DETLS=?,DEED_NAME=?,DEED_TYPE=?,MAP_ORDER_NO=?,MAP_ORDER_DATE=?,TCP_ORDER_NO=?,TCP_ORDER_DATE=?,ADVANCE_PAYMENT_DETLS=?,SHARE_DEBENTURE=? ,AGREEMENT_DETAILS=?,WORKCONTRACT_DETAILS=?  WHERE REG_TXN_ID=?";
	public static final String INSERT_REG_TXN_DETLS = "INSERT INTO IGRS_REG_TXN_DETLS(REG_TXN_ID,REGISTRATION_TXN_STATUS,DEED_ID,INSTRUMENTS_ID,CREATED_BY,CREATED_DATE,REF_VAL_TXN_ID,DUTY_TXN_ID,CANCELLATION_TYPE_FLAG,ADJUDICATION_FLAG,CANCELLATION_FLAG,TRANS_CHECK) VALUES (?,?,?,?,?,sysdate,?,?,?,?,?,?)";
	public static final String GET_PARTY_TXN_IDS_FOR_PROP_MAP = "SELECT PARTY_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE ((PARTY_TXN_ID NOT IN (SELECT UNIQUE PARTY_TXN_ID FROM IGRS_REG_INIT_PROP_TRANS_MAP WHERE REG_TXN_ID=?) AND IS_APPLICANT NOT IN ('O')) OR IS_APPLICANT IN ('Y','C')) AND REG_TXN_ID=?";
	public static final String GET_PARTY_TXN_IDS_FOR_PROP_MAP_TRUST_NPV_NP = "SELECT PARTY_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE ((PARTY_TXN_ID NOT IN (SELECT UNIQUE PARTY_TXN_ID FROM IGRS_REG_INIT_PROP_TRANS_MAP WHERE REG_TXN_ID=?) AND IS_APPLICANT NOT IN ('O'))) AND REG_TXN_ID=?";
	public static final String GET_EXTRA_FIELD_LABEL = "SELECT LABEL_AMOUNT FROM IGRS_DEED_INSTRUMENT_MASTER WHERE LABEL_VALUE_REQUIRED='Y' AND INSTRUMENT_ID=?";
	public static final String GET_CLAIMANT_FLAG = "SELECT CLAIMANT_FLAG,POA_HOLDER_FLAG FROM IGRS_PARTY_TYPE_MASTER WHERE PARTY_TYPE_ID=?";
	public static final String GET_USER_TYPE_ID = "SELECT USER_TYPE_ID FROM IGRS_USERS_LIST WHERE USER_ID=?";
	public static final String GET_DIST_ID_NAME_RU = "SELECT A.DISTRICT_ID, B.DISTRICT_NAME FROM IGRS_USER_REG_DETAILS A, IGRS_DISTRICT_MASTER B WHERE A.DISTRICT_ID=B.DISTRICT_ID AND A.USER_ID=?";
	public static final String GET_DIST_ID_NAME_OFFC_NAME_DRS = "SELECT A.DISTRICT_ID, B.DISTRICT_NAME, A.OFFICE_NAME FROM IGRS_OFFICE_MASTER A, IGRS_DISTRICT_MASTER B WHERE A.DISTRICT_ID=B.DISTRICT_ID AND A.OFFICE_ID=?";
	public static final String GET_DIST_ID_NAME_SP = "SELECT DISTINCT(A.DISTRICT_ID), B.DISTRICT_NAME  FROM IGRS_SP_DETLS A, IGRS_DISTRICT_MASTER B WHERE A.DISTRICT_ID=B.DISTRICT_ID AND A.APPLCTN_STATUS=8 AND A.CREATED_BY=?";
	public static final String COUNT_PROP_ID = "SELECT COUNT(PROPERTY_ID) FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=?";
	public static final String GET_REG_APPLICANT_DIST_ID = "SELECT DISTRICT_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE IS_APPLICANT='Y' AND REG_TXN_ID=?";
	public static final String GET_PENDING_APPLICATIONS_DETLS_ADJU = "SELECT RD.REG_TXN_ID,  RD.CREATED_DATE,  DM.DEED_TYPE_NAME,  SUBSTR (RD.REG_TXN_ID, LENGTH(RD.REG_TXN_ID)-5, LENGTH(RD.REG_TXN_ID)) AS sequence,  RD.REGISTRATION_TXN_STATUS, DM.H_DEED_TYPE_NAME,  RD.CANCELLATION_FLAG,  RD.ADJUDICATION_FLAG,  (pay.PAYABLE_AMOUNT-pay.PAID_AMOUNT) DUE_AMOUNT FROM IGRS_DEED_TYPE_MASTER DM,  IGRS_REG_TXN_DETLS RD,  (SELECT IGRS_REG_PAYMENT_DETLS.REG_TXN_ID REG_ID_P,SUM(IGRS_REG_PAYMENT_DETLS.PAID_AMOUNT) PAID_AMOUNT,MAX(IGRS_REG_PAYMENT_DETLS.PAYABLE_AMOUNT) PAYABLE_AMOUNT,TO_CHAR(MAX(IGRS_REG_PAYMENT_DETLS.UPDATE_DATE), 'dd/mm/yyyy') UPDATE_DATE FROM IGRS_REG_PAYMENT_DETLS where IGRS_REG_PAYMENT_DETLS.SOURCE_MOD_FLAG = 'A' AND IGRS_REG_PAYMENT_DETLS.PAYMENT_TYPE_ID=3 GROUP BY IGRS_REG_PAYMENT_DETLS.REG_TXN_ID) pay WHERE (RD.ADJUDICATION_FLAG IN ('A') )                                AND DM.DEED_TYPE_ID = RD.DEED_ID AND REGISTRATION_TXN_STATUS IN (1,2,3,4,5,6,9,10,7,20)AND (RD.CREATED_BY  = ? OR RD.UPDATE_BY  = ?)AND DELETE_FLAG_ADJU  IN('A')AND pay.REG_ID_P(+) =RD.REG_TXN_ID ORDER BY RD.CREATED_DATE DESC";
	public static final String GET_PENDING_APPLICATIONS_DETLS = "SELECT RD.REG_TXN_ID,  RD.CREATED_DATE,  DM.DEED_TYPE_NAME,  SUBSTR (RD.REG_TXN_ID, LENGTH(RD.REG_TXN_ID)-5, LENGTH(RD.REG_TXN_ID)) AS sequence,  RD.REGISTRATION_TXN_STATUS, DM.H_DEED_TYPE_NAME,  RD.CANCELLATION_FLAG,  RD.ADJUDICATION_FLAG,  (pay.PAYABLE_AMOUNT-pay.PAID_AMOUNT) DUE_AMOUNT FROM IGRS_DEED_TYPE_MASTER DM,  IGRS_REG_TXN_DETLS RD,  (SELECT IGRS_REG_PAYMENT_DETLS.REG_TXN_ID REG_ID_P,SUM(IGRS_REG_PAYMENT_DETLS.PAID_AMOUNT) PAID_AMOUNT,MAX(IGRS_REG_PAYMENT_DETLS.PAYABLE_AMOUNT) PAYABLE_AMOUNT,TO_CHAR(MAX(IGRS_REG_PAYMENT_DETLS.UPDATE_DATE), 'dd/mm/yyyy') UPDATE_DATE FROM IGRS_REG_PAYMENT_DETLS where IGRS_REG_PAYMENT_DETLS.SOURCE_MOD_FLAG = 'I' AND IGRS_REG_PAYMENT_DETLS.PAYMENT_TYPE_ID=1 GROUP BY IGRS_REG_PAYMENT_DETLS.REG_TXN_ID) pay WHERE (RD.ADJUDICATION_FLAG IS NULL OR RD.ADJUDICATION_FLAG IN ('R') )AND DM.DEED_TYPE_ID = RD.DEED_ID AND REGISTRATION_TXN_STATUS IN (1,2,3,4,5,6,9,10,7,20)AND (RD.CREATED_BY  = ? OR RD.UPDATE_BY  = ?)AND DELETE_FLAG       IN('A')AND pay.REG_ID_P(+) =RD.REG_TXN_ID ORDER BY RD.CREATED_DATE DESC";
	public static final String GET_COMMON_DEED_FLAG = "SELECT COMMON_DEED_FLAG FROM IGRS_DEED_TYPE_MASTER WHERE DEED_TYPE_ID=?";
	public static final String GET_TRANS_PARTY_DETS_COMMON_DEED = "SELECT A.ROLE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID,A.DESG_OF_OFFICIAL,A.APPELLATE_TYPE_ID ,A.party_age,A.GUARDIAN_NAME,A.minor_guardian, a.relation_type_id,a.universal_deed_claimant_flag  " + "FROM IGRS_REG_TXN_PARTY_DETLS A " + "WHERE IS_APPLICANT IN ('Y','N','C') " + "AND A.REG_TXN_ID=? " + "ORDER BY A.ROLE_NAME";
	public static final String INSERT_PARTICULAR_DETAILS = "INSERT INTO IGRS_REG_TXN_PARTICULAR_DETLS(PARTICULAR_TXN_ID,REG_TXN_ID,PARTICULAR_NAME,PARTICULAR_DESC,CREATED_BY,CREATED_DATE) VALUES(IGRS_REG_TXN_PARTICULAR_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE)";
	public static final String GET_PARTICULAR_LIST = "select PARTICULAR_TXN_ID,PARTICULAR_NAME,PARTICULAR_DESC from IGRS_REG_TXN_PARTICULAR_DETLS where REG_TXN_ID=?";
	public static final String GET_PARTICULAR_DETAILS = "SELECT PARTICULAR_NAME,PARTICULAR_DESC FROM IGRS_REG_TXN_PARTICULAR_DETLS WHERE PARTICULAR_TXN_ID=?";
	public static final String UPADTE_PARTICULAR_DETAILS = "UPDATE IGRS_REG_TXN_PARTICULAR_DETLS SET PARTICULAR_NAME=?,PARTICULAR_DESC=? WHERE PARTICULAR_TXN_ID=?";
	public static final String GET_PARTY_DETAILS_PDF_COMMON_DEED = "SELECT REG_TXN_ID,APPELLATE_TYPE_ID,PARTY_FIRST_NAME," + "PARTY_MIDDLE_NAME,PARTY_LAST_NAME,PARTY_GENDER," + "PARTY_AGE,NATIONALITY,COUNTRY_ID," + "STATE_ID,DISTRICT_ID,PARTY_ADDRESS," + "POSTAL_CODE,PHONE_NUMBER,MOBILE_NUMBER," + "EMAIL_ID,PHOTO_PROOF_TYPE_ID,PHOTO_PROOF_ID," + "ORGANIZATION_NAME,AUTHRZD_PERSN_NAME," + "GUARDIAN_NAME,MOTHER_NAME,CATEGORY_ID," + "PARTY_TXN_ID,DISABILITY,RELATION_WITH_OWNER," + "SHARE_OF_PROPERTY,PARTY_TYPE_ID,SPOUSE_NAME," + "OWNER_ID,DISABILITY_DESC,OCCUPATION_ID," + "COLLECTOR_PERMISSION_NUMBER,COLLECTOR_CERTIFICATE_PATH," + "MEMBER_MINORITY,BELOW_POVERTY_LINE," + "CATEGORY_ST_SCHEDULE_AREA,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH, " + "ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH,POA_SR_OFFICE_NAME,POA_REG_NO,POA_REG_DATE,ROLE_NAME,RELATION_TYPE_ID,UNIVERSAL_DEED_CLAIMANT_FLAG, " + "AUTH_PER_COUNTRY_ID,AUTH_PER_STATE_ID,AUTH_PER_DISTRICT_ID,AUTH_PER_PARTY_ADDRESS  " + "FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARTY_TXN_ID=? ORDER BY ROLE_NAME ";
	public static final String GET_TODAY_APP_COUNT = "SELECT COUNT(REG_TXN_ID) FROM IGRS_REG_TXN_DETLS WHERE TRUNC(CREATED_DATE)= TRUNC(SYSDATE)";
	public static final String DROP_REG_TXN_ID_SEQ_1 = "DROP SEQUENCE IGRS_REG_TXN_ID_SEQ";
	public static final String CREATE_REG_TXN_ID_SEQ_1 = "CREATE SEQUENCE IGRS_REG_TXN_ID_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 999999 MINVALUE 1 NOCYCLE  NOCACHE ORDER";
	public static final String GET_RELATIONSHIP_LIST = "SELECT O.RELATION_TYPE_ID,O.RELATION_TYPE_NAME FROM IGRS_RELATION_TYPE_MASTER O WHERE O.GENDER=?";
	public static final String GET_RELATIONSHIP_NAME = "SELECT RELATION_TYPE_NAME FROM IGRS_RELATION_TYPE_MASTER WHERE RELATION_TYPE_ID=?";
	public static final String SELECT_PARTY_TYPE_INST_WISE = "SELECT A.PARTY_TYPE_ID,A.PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER A, IGRS_PARTY_TYPE_INST_MAP B WHERE PARTY_TYPE_STATUS='A' AND MAPPING_STATUS='A' AND A.PARTY_TYPE_ID=B.PARTY_TYPE_ID AND B.INSTRUMENT_ID=?";
	// public static final String GET_EXECUTANT_CLAIMANT_LIST =
	// "SELECT  A.CLAIMANT_FLAG_ID,A.CLAIMANT_FLAG_DESC    FROM IGRS_CLAIMANT_FLAG_MASTER A WHERE A.CLAIMANT_FLAG_ID IN (1,2,3,4) ORDER BY A.CLAIMANT_FLAG_ID ASC";
	public static final String GET_EXECUTANT_CLAIMANT_LIST = "SELECT  A.CLAIMANT_FLAG_ID,A.CLAIMANT_FLAG_DESC    FROM IGRS_CLAIMANT_FLAG_MASTER A WHERE A.CLAIMANT_FLAG_ID IN (1,2,3,4,5,6) ORDER BY A.CLAIMANT_FLAG_ID ASC";
	public static final String GET_EXECUTANT_CLAIMANT_NAME = "SELECT CLAIMANT_FLAG_DESC FROM IGRS_CLAIMANT_FLAG_MASTER WHERE CLAIMANT_FLAG_ID=?";
	// added by SHREERAJ
	public static final String GET_ADJU_FLAG = "SELECT ADJUDICATION_FLAG FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=? and created_by=?";
	public static final String INSERT_ADJU_DUTY = "INSERT INTO IGRS_REG_ADJUDCN_FINAL_DTLS(ADJUDCN_TXN_ID,CREATED_BY,CREATED_DATE,STAMP_DUTY,MUNICIPAL_DUTY,JANPAD_DUTY,UPKAR_DUTY,TOTAL_DUTY,REGISTRATION_FEE,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT,ADJUDICATION_REMARKS,TOTAL_CONSENTER_CONSID,EXEMP_DUTY,EXEMP_FEE) VALUES (?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String UPDATE_REG_ADJU_STATUS = "UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS = 10 WHERE ADJUDICATION_FLAG='A' AND REG_TXN_ID=?";
	public static final String GET_REG_ADJU_DUTY_DETS_FOR_CONFIRMATION = "SELECT STAMP_DUTY,MUNICIPAL_DUTY,JANPAD_DUTY,UPKAR_DUTY,REGISTRATION_FEE,TOTAL_DUTY,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT,REGISTRATION_FEE,TOTAL_DUTY,EXEMP_DUTY,EXEMP_FEE,ADJUDICATION_REMARKS FROM IGRS_REG_ADJUDCN_FINAL_DTLS WHERE ADJUDCN_TXN_ID=?";
	public static final String GET_ADJU_REMARKS = "SELECT ADJUDICATION_REMARKS FROM IGRS_REG_ADJUDCN_FINAL_DTLS WHERE ADJUDCN_TXN_ID=?";
	public static final String UPDATE_ADJU_REG_STATUS = "UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS = 5 , ADJUDICATION_FLAG='R', UPDATE_BY=?, UPDATE_DATE=sysdate WHERE REG_TXN_ID=?";
	public static final String GET_REG_INIT_ADJUDICATION_STATUS = "SELECT ADJUDICATION_FLAG,REGISTRATION_TXN_STATUS FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	// added by VINAY SHARMA
	public static final String GET_RELATIONSHIP_LIST_HI = "SELECT O.RELATION_TYPE_ID,O.H_RELATION_TYPE_NAME FROM IGRS_RELATION_TYPE_MASTER O WHERE O.GENDER=?";
	// HINDI QUERIES BY ROOPAM
	public static final String SELECT_PHOTO_PROOF_HINDI = "SELECT P.PHOTO_PROOF_TYPE_ID,P.PHOTO_PROOF_TYPE_NAME,P.H_PHOTO_PROOF_TYPE_NAME FROM IGRS_PHOTOID_PROOF_TYPE_MASTER P WHERE P.PHOTO_PROOF_TYPE_STATUS='A' ORDER BY P.PHOTO_PROOF_TYPE_ID ASC";
	public static final String SELECT_CATEGORY_HINDI = "SELECT A.CATEGORY_ID,A.CATEGORY_NAME,A.H_CATEGORY_NAME FROM IGRS_PERSON_CATEGORY_MASTER A WHERE A.CATEGORY_STATUS='A' ORDER BY A.CATEGORY_ID DESC";
	public static final String GET_OCCUPATION_LIST_HINDI = "SELECT O.OCCUPATION_ID,O.OCCUPATION_NAME,O.H_OCCUPATION_NAME FROM IGRS_OCCUPATION_MASTER O ORDER BY O.OCCUPATION_ID ASC";
	public static final String GET_PARTY_ROLE_NAME_HINDI = "SELECT H_PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER WHERE PARTY_TYPE_ID=?";
	public static final String GET_DISTRICT_NAME_HINDI = "SELECT H_DISTRICT_NAME FROM IGRS_DISTRICT_MASTER WHERE DISTRICT_ID=?";
	public static final String GET_COUNTRY_NAME_HINDI = "SELECT H_COUNTRY_NAME FROM IGRS_COUNTRY_MASTER WHERE COUNTRY_ID=?";
	public static final String GET_STATE_NAME_HINDI = "SELECT H_STATE_NAME FROM IGRS_STATE_MASTER WHERE STATE_ID=?";
	public static final String GET_OCCUPATION_NAME_HINDI = "SELECT H_OCCUPATION_NAME FROM IGRS_OCCUPATION_MASTER WHERE OCCUPATION_ID=?";
	public static final String GET_CATEGORY_NAME_HINDI = "SELECT H_CATEGORY_NAME FROM IGRS_PERSON_CATEGORY_MASTER WHERE CATEGORY_ID=?";
	public static final String GET_PHOTO_PROOF_NAME_HINDI = "SELECT H_PHOTO_PROOF_TYPE_NAME FROM IGRS_PHOTOID_PROOF_TYPE_MASTER WHERE PHOTO_PROOF_TYPE_ID=?";
	public static final String GET_UNIT_NAME = "SELECT UOM_NAME FROM IGRS_UOM_MASTER WHERE UOM_ID=?";
	public static final String GET_UNIT_NAME_HINDI = "SELECT H_UOM_NAME FROM IGRS_UOM_MASTER WHERE UOM_ID=?";
	public static final String GET_TEHSIL_NAME = "SELECT TEHSIL_NAME FROM IGRS_TEHSIL_MASTER WHERE TEHSIL_ID=?";
	public static final String GET_TEHSIL_NAME_HINDI = "SELECT H_TEHSIL_NAME FROM IGRS_TEHSIL_MASTER WHERE TEHSIL_ID=?";
	public static final String GET_AREA_TYPE_NAME = "SELECT AREA_TYPE_NAME FROM IGRS_AREA_TYPE_MASTER WHERE AREA_TYPE_ID=?";
	public static final String GET_AREA_TYPE_NAME_HINDI = "SELECT H_AREA_TYPE_NAME FROM IGRS_AREA_TYPE_MASTER WHERE AREA_TYPE_ID=?";
	public static final String GET_WARD_NAME = "SELECT WARD_PATWARI_NAME FROM IGRS_WARD_PATWARI_MASTER WHERE WARD_PATWARI_ID=?";
	public static final String GET_WARD_NAME_HINDI = "SELECT H_WARD_PATWARI_NAME FROM IGRS_WARD_PATWARI_MASTER WHERE WARD_PATWARI_ID=?";
	// public static final String
	// SELECTPROPERTYTYPEL1DETAILS_HINDI="SELECT PROPERTY_TYPE_L1_ID,PROPERTY_TYPE_L1_NAME,H_PROPERTY_TYPE_L1_NAME FROM IGRS_PROP_TYPE_L1_MASTER WHERE PROPERTY_TYPE_ID=?";
	// public static final String
	// SELECT_PROPERTY_TYPE_L2_DETAILS_HINDI="SELECT PROPERTY_TYPE_L2_ID,PROPERTY_TYPE_L2_DESC,H_PROPERTY_TYPE_L2_NAME FROM IGRS_PROP_TYPE_L2_MASTER WHERE PROPERTY_TYPE_L1_ID=? AND PROPERTY_TYPE_L2_STATUS='A'";
	public static final String SELECT_UNIT_LIST_DETAILS_HINDI = "SELECT A.UOM_ID,A.UOM_NAME,A.H_UOM_NAME FROM IGRS_UOM_MASTER A, IGRS_PROP_TYPE_L1_MASTER_DUMMY B WHERE A.UOM_ID=B.UOM_ID AND B.PROP_TYPE_L1_ID=?";
	public static final String GET_PROPERTY_TYPE_NAME_HINDI = "SELECT H_PROPERTY_TYPE_NAME FROM IGRS_PROPERTY_TYPE_MASTER WHERE PROPERTY_TYPE_ID=?";
	public static final String GET_L1_NAME = "SELECT PROP_TYPE_L1_NAME FROM IGRS_PROP_TYPE_L1_MASTER_DUMMY WHERE PROP_TYPE_L1_ID=?";
	public static final String GET_L1_NAME_HINDI = "SELECT H_PROP_TYPE_L1_NAME FROM IGRS_PROP_TYPE_L1_MASTER_DUMMY WHERE PROP_TYPE_L1_ID=?";
	public static final String GET_L2_NAME = "SELECT PROPERTY_TYPE_L2_DESC FROM IGRS_PROP_TYPE_L2_MASTER_DUMMY WHERE PROPERTY_TYPE_L2_ID=?";
	public static final String GET_L2_NAME_HINDI = "SELECT H_PROPERTY_TYPE_L2_NAME FROM IGRS_PROP_TYPE_L2_MASTER_DUMMY WHERE PROPERTY_TYPE_L2_ID=?";
	public static final String GET_FLOOR_NAME = "SELECT FLOOR_NAME FROM IGRS_FLOOR_MASTER WHERE FLOOR_ID=?";
	public static final String GET_FLOOR_NAME_HINDI = "SELECT H_FLOOR_NAME FROM IGRS_FLOOR_MASTER WHERE FLOOR_ID=?";
	public static final String GET_EXTRA_FIELD_LABEL_HINDI = "SELECT H_LABEL_AMOUNT FROM IGRS_DEED_INSTRUMENT_MASTER WHERE LABEL_VALUE_REQUIRED='Y' AND INSTRUMENT_ID=?";
	public static final String GET_RELATIONSHIP_LIST_HINDI = "SELECT O.RELATION_TYPE_ID,O.RELATION_TYPE_NAME,O.H_RELATION_TYPE_NAME FROM IGRS_RELATION_TYPE_MASTER O WHERE O.GENDER=?";
	public static final String GET_RELATIONSHIP_LIST_HINDI_ALL = "SELECT O.RELATION_TYPE_ID,O.RELATION_TYPE_NAME,O.H_RELATION_TYPE_NAME FROM IGRS_RELATION_TYPE_MASTER O WHERE O.RELATION_TYPE_ID IN (1,2,3,4)";
	public static final String SELECT_APPL_TYPE_HINDI = "SELECT A.APPELLATE_TYPE_ID,A.APPELLATE_TYPE_NAME,A.H_APPELLATE_TYPE_NAME FROM IGRS_APPELLATE_TYPE_MASTER A WHERE A.APPELLATE_TYPE_STATUS='A' ORDER BY A.APPELLATE_TYPE_ID DESC";
	public static final String SELECT_APPL_TYPE_GOVT_OFFCL_HINDI = "SELECT A.APPELLATE_TYPE_ID,A.APPELLATE_TYPE_NAME,A.H_APPELLATE_TYPE_NAME FROM IGRS_APPELLATE_TYPE_MASTER A WHERE A.APPELLATE_TYPE_STATUS='A' AND A.APPELLATE_TYPE_ID IN (1,2) ORDER BY A.APPELLATE_TYPE_ID DESC";
	public static final String SELECT_APPL_TYPE_CHILD_HINDI = "SELECT A.APPELLATE_TYPE_ID,A.APPELLATE_TYPE_NAME,A.H_APPELLATE_TYPE_NAME FROM IGRS_APPELLATE_TYPE_MASTER A WHERE A.APPELLATE_TYPE_STATUS='A' AND A.APPELLATE_TYPE_ID =2 ORDER BY A.APPELLATE_TYPE_ID DESC";
	public static final String GET_RELATIONSHIP_NAME_HINDI = "SELECT H_RELATION_TYPE_NAME FROM IGRS_RELATION_TYPE_MASTER WHERE RELATION_TYPE_ID=?";
	public static final String GET_APPLETE_NAME = "SELECT APPELLATE_TYPE_NAME FROM IGRS_APPELLATE_TYPE_MASTER WHERE APPELLATE_TYPE_ID=?";
	public static final String GET_APPLETE_NAME_HINDI = "SELECT H_APPELLATE_TYPE_NAME FROM IGRS_APPELLATE_TYPE_MASTER WHERE APPELLATE_TYPE_ID=?";
	// public static final String GET_EXECUTANT_CLAIMANT_LIST_HINDI =
	// "SELECT  A.CLAIMANT_FLAG_ID,A.CLAIMANT_FLAG_DESC,A.H_CLAIMANT_FLAG_DESC    FROM IGRS_CLAIMANT_FLAG_MASTER A WHERE A.CLAIMANT_FLAG_ID IN (1,2,3,4) ORDER BY A.CLAIMANT_FLAG_ID ASC";
	public static final String GET_EXECUTANT_CLAIMANT_LIST_HINDI = "SELECT  A.CLAIMANT_FLAG_ID,A.CLAIMANT_FLAG_DESC,A.H_CLAIMANT_FLAG_DESC    FROM IGRS_CLAIMANT_FLAG_MASTER A WHERE A.CLAIMANT_FLAG_ID IN (1,2,3,4,5,6) ORDER BY A.CLAIMANT_FLAG_ID ASC";
	public static final String GET_EXECUTANT_CLAIMANT_LIST_GOVT_OFFCL_HINDI = "SELECT  A.CLAIMANT_FLAG_ID,A.CLAIMANT_FLAG_DESC,A.H_CLAIMANT_FLAG_DESC    FROM IGRS_CLAIMANT_FLAG_MASTER A WHERE A.CLAIMANT_FLAG_ID IN (1,3) ORDER BY A.CLAIMANT_FLAG_ID ASC";
	public static final String SELECT_PARTY_TYPE_HINDI = "SELECT iptm.PARTY_TYPE_ID,PARTY_TYPE_NAME,H_PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER iptm, IGRS_PARTY_TYPE_DEED_MAP iptdm WHERE PARTY_TYPE_STATUS='A' AND MAPPING_STATUS='A' AND iptm.PARTY_TYPE_ID=iptdm.PARTY_TYPE_ID AND iptdm.DEED_TYPE_ID=?";
	public static final String SELECT_PARTY_TYPE_INST_WISE_HINDI = "SELECT A.PARTY_TYPE_ID,A.PARTY_TYPE_NAME,A.H_PARTY_TYPE_NAME FROM IGRS_PARTY_TYPE_MASTER A, IGRS_PARTY_TYPE_INST_MAP B WHERE PARTY_TYPE_STATUS='A' AND MAPPING_STATUS='A' AND A.PARTY_TYPE_ID=B.PARTY_TYPE_ID AND B.INSTRUMENT_ID=?";
	public static final String OFFICE_NAME = "SELECT OFFICE_NAME FROM IGRS_OFFICE_MASTER WHERE OFFICE_ID=?";
	public static final String OFFICE_NAME_HINDI = "SELECT H_OFFICE_NAME FROM IGRS_OFFICE_MASTER WHERE OFFICE_ID=?";
	// BELOW QUERIES FOR NEW DUTY CALCULATION
	// added AUDIT_REPORT_PATH for plant and machinery, GIS_REFERENCE_KEY for
	// GIS work
	public static final String GET_PROP_DETLS_DISPLAY = "SELECT a.district_id, district_name, a.tehsil_id, tehsil_name, a.area_type_id," + "area_type_name, a.ward_id, ward_patwari_name, ward_or_patwari," + "a.mohalla_id, COLONY_NAME, a.gov_body_id, SUB_AREA_TYPE_NAME," + "a.prop_type_id, property_type_name, area, area_unit_id, a.vikas_khand," + "a.ri_circle, a.layout_detail, a.nazool_sheet_number, a.plot_number," + "a.property_address, a.north_boundary, a.south_boundary," + "a.east_boundary, a.west_boundary, a.property_landmark, a.angle_1_path," + "a.angle_2_path, a.angle_3_path, a.map_path, a.rin_path, a.khasra_path," + "a.market_value, a.l1_type_id, a.l2_type_id, h_district_name," + "h_tehsil_name, h_area_type_name, h_ward_patwari_name," + "H_COLONY_NAME, H_SUB_AREA_TYPE_NAME, h_property_type_name,a.AUDIT_REPORT_PATH,a.GIS_REFERENCE_KEY " + "FROM igrs_reg_proprty_dtls a," + "igrs_district_master b," + "igrs_tehsil_master c," + "igrs_area_type_master d," + "igrs_ward_patwari_master e," + "IGRS_COLONY_MASTER f," + "IGRS_SUB_AREA_TYPE_MASTER g," + "igrs_property_type_master h " + "WHERE b.district_id = a.district_id " + "AND c.tehsil_id = a.tehsil_id " + "AND d.area_type_id = a.area_type_id " + "AND e.ward_patwari_id = a.ward_id " + "AND f.COLONY_ID = a.mohalla_id " + "AND g.SUB_AREA_TYPE_ID = a.gov_body_id " + "AND h.property_type_id = a.prop_type_id " + "AND a.property_id =?";
	// BELOW QUERIES FOR NEW PROPERTY VALUATION
	public static final String GET_PROP_DETLS_FROM_VAL = "SELECT FINAL_MV, AREA_TYPE_ID, SUB_AREA_TYPE_ID, PROP_TYPE_ID, PROPERTY_TYPE_L1_ID, PROPERTY_TYPE_L2_ID, REF_VAL_TXN_ID, VAL_TXN_ID, DIST_ID, TEHSIL_ID, WARD_PATWARI_ID, COLONY_ID, GUIDELINE_MV FROM IGRS_PROP_VAL_TXN_DETLS WHERE VAL_TXN_ID =?";
	public static final String GET_ALL_VALUATION_IDS = "SELECT VAL_TXN_ID FROM IGRS_PROP_VAL_TXN_DETLS WHERE REF_VAL_TXN_ID=? ORDER BY VAL_TXN_ID ASC";
	public static final String GET_ALL_PROPERTY_DETLS = "SELECT VAL_TXN_ID,DIST_ID,TEHSIL_ID,FINAL_MV,REF_VAL_TXN_ID FROM IGRS_PROP_VAL_TXN_DETLS WHERE VAL_TXN_ID=?"; // REF_VAL_TXN_ID
	// will
	// be
	// replaced
	// by
	// party
	// type
	// for
	// exchange
	// deed
	public static final String GET_LATEST_PROPERTY_TYPE = "SELECT A.PROP_TYPE_ID FROM IGRS_REG_PROPRTY_DTLS A WHERE A.REG_TXN_ID=? AND A.CREATED_DATE=(SELECT MAX(B.CREATED_DATE) FROM IGRS_REG_PROPRTY_DTLS B WHERE B.REG_TXN_ID=?)";
	public static final String GET_ALL_PROPERTY_DETLS_DASH = "SELECT B.PROPERTY_ID,B.VAL_TXN_ID,B.MARKET_VALUE,A.REF_VAL_TXN_ID FROM IGRS_PROP_VAL_TXN_DETLS A,IGRS_REG_PROPRTY_DTLS B  WHERE B.VAL_TXN_ID=A.VAL_TXN_ID AND A.VAL_TXN_ID=?"; // REF_VAL_TXN_ID
	// will
	// be
	// replaced
	// by
	// party
	// type
	// for
	// exchange
	// deed
	public static final String GET_PROPERTY_IDS_EXCHANGE_AGRI_DISP = "SELECT B.PROPERTY_ID  FROM IGRS_REG_PROPRTY_DTLS B WHERE b.reg_txn_id=? AND B.PROPERTY_ADDRESS IS NOT NULL";
	public static final String GET_REMAINING_VALUATION_IDS_EXCHANGE_DASH = "SELECT A.VAL_TXN_ID FROM IGRS_PROP_VAL_TXN_DETLS A,IGRS_REG_PROPRTY_DTLS B WHERE B.VAL_TXN_ID=A.VAL_TXN_ID AND B.NORTH_BOUNDARY IS NULL AND REF_VAL_TXN_ID=? ORDER BY VAL_TXN_ID ASC";
	public static final String GET_REF_VAL_ID_AGRI = "SELECT DISTINCT C.REF_VAL_TXN_ID FROM IGRS_PROP_VAL_TXN_DETLS C WHERE C.VAL_TXN_ID IN  (SELECT A.VAL_TXN_ID  FROM IGRS_REG_PROPRTY_DTLS A  WHERE A.REG_TXN_ID=?  AND A.CREATED_DATE=(SELECT MAX(B.CREATED_DATE) FROM IGRS_REG_PROPRTY_DTLS B WHERE B.REG_TXN_ID=?))";
	// BELOW QUERIES BY ROOPAM ON OR AFTER
	public static final String GET_ALL_VALUATION_IDS_NEW = "SELECT VAL_TXN_ID FROM IGRS_PROP_DUTY_DETLS WHERE DUTY_TXN_ID=? ORDER BY VAL_TXN_ID ASC";
	public static final String GET_ALL_PROPERTY_DETLS_NEW = "SELECT A.VAL_TXN_ID,A.DIST_ID,A.TEHSIL_ID,A.FINAL_MV,C.PARTY_TYPE FROM IGRS_PROP_VAL_TXN_DETLS A,IGRS_PROP_DUTY_DETLS C WHERE A.VAL_TXN_ID=C.VAL_TXN_ID AND C.VAL_TXN_ID=? AND C.DUTY_TXN_ID=?";
	public static final String GET_ALL_PROPERTY_DETLS_NEW_NPV_DEED = "SELECT A.VAL_TXN_ID,A.DIST_ID,A.TEHSIL_ID,PROP_TYPE_ID FROM IGRS_PROP_VAL_TXN_DETLS A WHERE A.VAL_TXN_ID=?";
	public static final String GET_VALUATION_ID_AGRI = "SELECT VAL_TXN_ID FROM IGRS_PROP_VAL_TXN_DETLS WHERE REF_VAL_TXN_ID=?";
	public static final String GET_ALL_PROPERTY_DETLS_DASH_NEW = "SELECT B.PROPERTY_ID,B.VAL_TXN_ID,B.MARKET_VALUE,C.PARTY_TYPE FROM IGRS_PROP_VAL_TXN_DETLS A,IGRS_REG_PROPRTY_DTLS B,IGRS_PROP_DUTY_DETLS C  WHERE B.VAL_TXN_ID=A.VAL_TXN_ID AND C.VAL_TXN_ID=A.VAL_TXN_ID AND C.VAL_TXN_ID=? AND C.DUTY_TXN_ID=? AND B.REG_TXN_ID=?";
	public static final String GET_REMAINING_VALUATION_IDS_DASH = "SELECT B.VAL_TXN_ID FROM IGRS_REG_PROPRTY_DTLS B, igrs_reg_txn_detls C WHERE b.PROPERTY_ADDRESS IS NULL  AND B.REG_TXN_ID=c.reg_txn_id AND  C.DUTY_TXN_ID=? ORDER BY B.VAL_TXN_ID ASC";
	public static final String GET_REG_INIT_DEED_INST_ID_NEW = "SELECT DEED_ID,INSTRUMENTS_ID,ADJUDICATION_FLAG,CANCELLATION_TYPE_FLAG,DUTY_TXN_ID,NVL(DEED_DRAFT_ID,0),TRANS_CHECK,DEED_DOC_FILEPATH_INITIAL,DEED_DOC_FILEPATH,DEED_DOC_FILENAME,DEED_CONSENTER_PAGES FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	public static final String GET_ALL_PARTIES = "SELECT PARTY_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE IS_APPLICANT IN ('Y','C','N') AND REG_TXN_ID=? ORDER BY PARTY_TXN_ID";
	// Below query is written by Rakesh for POA owner
	public static final String GET_ALL_PARTIES_CLR = "SELECT PARTY_TXN_ID FROM IGRS_REG_TXN_PARTY_DETLS WHERE IS_APPLICANT IN ('Y','C','N','O') AND REG_TXN_ID=? ORDER BY PARTY_TXN_ID";
	public static final String GET_ALL_PROPERTIES = "SELECT PROPERTY_ID FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=? ORDER BY CREATED_DATE ASC";
	// public static final String GET_ALL_PARTIES_FOR_MAP
	// ="SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID,A.IS_APPLICANT,A.ROLE_NAME,A.DESG_OF_OFFICIAL,A.APPELLATE_TYPE_ID FROM IGRS_REG_TXN_PARTY_DETLS A, IGRS_PARTY_TYPE_MASTER B WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID AND IS_APPLICANT IN ('Y','C','N') AND REG_TXN_ID=? ORDER BY PARTY_TXN_ID";
	public static final String GET_ALL_PARTIES_FOR_MAP = "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID,A.IS_APPLICANT,A.ROLE_NAME,A.DESG_OF_OFFICIAL,A.APPELLATE_TYPE_ID,A.party_age,a.PARTY_MIDDLE_NAME,a.MINOR_GUARDIAN,a.RELATION_TYPE_ID,a.UNIVERSAL_DEED_CLAIMANT_FLAG,a.GUARDIAN_NAME FROM IGRS_REG_TXN_PARTY_DETLS A, IGRS_PARTY_TYPE_MASTER B WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID AND IS_APPLICANT IN ('Y','C','N') AND REG_TXN_ID=? ORDER BY PARTY_TXN_ID";
	// Below query is written by Rakesh for POA owner
	public static final String GET_ALL_PARTIES_FOR_MAP_CLR = "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID,A.IS_APPLICANT,A.ROLE_NAME,A.DESG_OF_OFFICIAL,A.APPELLATE_TYPE_ID,A.party_age,a.PARTY_MIDDLE_NAME,a.MINOR_GUARDIAN,a.RELATION_TYPE_ID,a.UNIVERSAL_DEED_CLAIMANT_FLAG,a.GUARDIAN_NAME FROM IGRS_REG_TXN_PARTY_DETLS A, IGRS_PARTY_TYPE_MASTER B WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID AND IS_APPLICANT IN ('Y','C','N','O') AND REG_TXN_ID=? ORDER BY PARTY_TXN_ID";
	public static final String GET_OWR_NAME_FOR_CLR_IND = "select PARTY_FIRST_NAME||' '||PARTY_LAST_NAME from IGRS_REG_TXN_PARTY_DETLS where party_txn_id=(select parent_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?)";
	public static final String GET_OWR_NAME_FOR_CLR_ORG = "select AUTHRZD_PERSN_NAME from IGRS_REG_TXN_PARTY_DETLS where party_txn_id=(select parent_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?)";
	// public static final String
	// UPDATE_REG_PROP_TRANS_MAP_WITH_SHARES="UPDATE IGRS_REG_INIT_PROP_TRANS_MAP SET SHARES=?,UPDATE_BY=?,UPDATE_DATE=sysdate WHERE REG_TXN_ID=? AND PROPERTY_ID=? AND PARTY_TXN_ID=? ";
	// clr change
	public static final String UPDATE_REG_PROP_TRANS_MAP_WITH_SHARES = "UPDATE IGRS_REG_INIT_PROP_TRANS_MAP SET SHARES=?,UPDATE_BY=?,UPDATE_DATE=sysdate, MUTATION_SHARE =? WHERE REG_TXN_ID=? AND PROPERTY_ID=? AND PARTY_TXN_ID=? ";
	public static final String GET_DUTIES_FROM_DUTY = "SELECT STAMP_DUTY,MUNICIPAL_DUTY,BLOCK_DUTY,UPKAR_DUTY,REG_FEE,TOTAL,REG_FEE_AFTER_EXEMP,TOTAL_AFTER_EXEMP,DUTY_ALREADY_PAID,REG_FEE_PAID,EXEMP_STAMP,EXEMP_REG,EWS_APPLIED FROM IGRS_DUTY_TXN_DETLS WHERE DUTY_TXN_ID=?";
	// public static final String
	// INSERT_DUTIES_DETAILS_NEW="INSERT INTO IGRS_REG_INIT_STAMP_DUTY_DETLS(REG_INIT_DUTY_TXN_ID,REG_TXN_ID,STAMP_DUTY,GRAM_DUTY,NAGAR_DUTY,UPKAR,REG_FEE,TOTAL,CREATED_DATE,CREATED_BY,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT,REG_FEE_AFTER_EXEMP,TOTAL_AFTER_EXEMP,EXEMP_DUTY,EXEMP_FEE) VALUES(IGRS_REG_INIT_DUTY_ID_SEQ.NEXTVAL,?,?,?,?,?,?,?,sysdate,?,'',?,?,'',?,?,?,?)";
	public static final String INSERT_DUTIES_DETAILS_NEW = "INSERT INTO IGRS_REG_INIT_STAMP_DUTY_DETLS(REG_INIT_DUTY_TXN_ID,REG_TXN_ID,STAMP_DUTY,NAGAR_DUTY,GRAM_DUTY,UPKAR,REG_FEE,TOTAL,CREATED_DATE,CREATED_BY,MARKET_VALUE_SHARE,DUTY_ALREADY_PAID,REG_ALREADY_PAID,SECURED_AMOUNT,REG_FEE_AFTER_EXEMP,TOTAL_AFTER_EXEMP,EXEMP_DUTY,EXEMP_FEE,EWS_APPLIED) VALUES(IGRS_REG_INIT_DUTY_ID_SEQ.NEXTVAL,?,?,?,?,?,?,?,sysdate,?,'',?,?,'',?,?,?,?,?)";
	public static final String DELETE_DUTIES_DETAILS = "DELETE FROM IGRS_REG_INIT_STAMP_DUTY_DETLS WHERE REG_TXN_ID=?";
	public static final String SELECTPROPERTYTYPEL1DETAILS_HINDI = "SELECT PROP_TYPE_L1_ID,PROP_TYPE_L1_NAME,H_PROP_TYPE_L1_NAME FROM IGRS_PROP_TYPE_L1_MASTER_DUMMY WHERE PROPERTY_TYPE_ID=? AND PROP_TYPE_L1_STATUS='A' AND DISPLAY_FLAG_GUIDLN='Y'";
	public static final String SELECT_PROPERTY_TYPE_L2_DETAILS_HINDI = "SELECT PROPERTY_TYPE_L2_ID,PROPERTY_TYPE_L2_NAME,H_PROPERTY_TYPE_L2_NAME FROM IGRS_PROP_TYPE_L2_MASTER_DUMMY WHERE PROPERTY_TYPE_L1_ID=? AND PROPERTY_TYPE_L2_STATUS='A' AND DISPLAY_FLAG IN ('G','B')";
	public static final String GET_PARTY_TYPE_1_OR_2_DEED_BASED = "SELECT PARTY_1_OR_2 FROM IGRS_PARTY_TYPE_DEED_MAP WHERE DEED_TYPE_ID=? AND PARTY_TYPE_ID=? AND MAPPING_STATUS='A' ";
	public static final String GET_PARTY_TYPE_1_OR_2_INST_BASED = "SELECT PARTY_1_OR_2 FROM IGRS_PARTY_TYPE_INST_MAP WHERE INSTRUMENT_ID=? AND PARTY_TYPE_ID=? AND MAPPING_STATUS='A' ";
	// public static final String
	// INSERT_REG_PROP_TRANS_MAP_WITH_SHARES="INSERT INTO IGRS_REG_INIT_PROP_TRANS_MAP(REG_TXN_ID,PROPERTY_ID,PARTY_TXN_ID,CREATED_BY,CREATED_DATE,MAPPING_TXN_ID,SHARES) VALUES (?,?,?,?,sysdate,IGRS_REG_TRANS_PROP_MAP_ID_SEQ.NEXTVAL,?)";
	// Changed for CLR
	public static final String INSERT_REG_PROP_TRANS_MAP_WITH_SHARES = "INSERT INTO IGRS_REG_INIT_PROP_TRANS_MAP(REG_TXN_ID,PROPERTY_ID,PARTY_TXN_ID,CREATED_BY,CREATED_DATE,MAPPING_TXN_ID,SHARES,MUTATION_SHARE) VALUES (?,?,?,?,sysdate,IGRS_REG_TRANS_PROP_MAP_ID_SEQ.NEXTVAL,?,?)";
	public static final String GET_TRANSACTING_PARTY_DETS_WITH_PARTICULAR = "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID,A.ROLE_NAME, A.APPELLATE_TYPE_ID, A.DESG_OF_OFFICIAL ,A.party_age,A.GUARDIAN_NAME,A.minor_guardian, a.relation_type_id,A.UNIVERSAL_DEED_CLAIMANT_FLAG,a.party_middle_name " + "FROM IGRS_REG_TXN_PARTY_DETLS A," + "IGRS_PARTY_TYPE_MASTER B," + "IGRS_REG_INIT_PARTI_TRANS_MAP C " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID " + "AND C.PARTY_TXN_ID=A.PARTY_TXN_ID " + "AND C.REG_TXN_ID=A.REG_TXN_ID " + "AND C.REG_TXN_ID=? " + "AND C.PARTICULAR_TXN_ID=? ORDER BY A.PARTY_TXN_ID";
	public static final String GET_EXCHNG_DEED_FINAL_MV_NEW = "SELECT REF_MARKET_VALUE FROM IGRS_DUTY_TXN_DETLS WHERE DUTY_TXN_ID=?";
	public static final String GET_ALL_EXEMPTIONS = "SELECT A.EXEMPTION_ID, B.APPLICABLE_ON FROM IGRS_DUTY_EXEMPTION_DETLS A, IGRS_EXEMPTION_MASTER B WHERE A.EXEMPTION_ID=B.EXEMPTION_ID AND A.DUTY_TXN_ID=? ORDER BY A.EXEMPTION_ID";
	public static final String GET_EXMP_NAME = "SELECT EXEMPTION_NAME FROM IGRS_EXEMPTION_MASTER WHERE EXEMPTION_ID=?";
	public static final String GET_EXMP_NAME_HI = "SELECT H_EXEMPTION_NAME FROM IGRS_EXEMPTION_MASTER WHERE EXEMPTION_ID=?";
	public static final String GET_USER_ENTERABLE = "SELECT B.FIELD_NAME, A.FIELD_VALUE FROM IGRS_PROP_DUTY_FIELD_DETLS A, IGRS_INST_FIELD_MAPPING B WHERE A.INST_FIELD_MAP_ID = B.INST_FIELD_MAP_ID AND A.DUTY_TXN_ID=? AND A.PROP_DUTY_ID IS NULL";
	public static final String GET_USER_ENTERABLE_HI = "SELECT B.FIELD_NAME_H, A.FIELD_VALUE FROM IGRS_PROP_DUTY_FIELD_DETLS A, IGRS_INST_FIELD_MAPPING B WHERE A.INST_FIELD_MAP_ID = B.INST_FIELD_MAP_ID AND A.DUTY_TXN_ID=? AND A.PROP_DUTY_ID IS NULL";
	public static final String GET_DEED_NAME_HI = "SELECT H_DEED_TYPE_NAME FROM IGRS_DEED_TYPE_MASTER WHERE DEED_TYPE_ID=?";
	public static final String GET_INST_NAME_HI = "SELECT H_INSTRUMENT_NAME FROM IGRS_DEED_INSTRUMENT_MASTER WHERE INSTRUMENT_ID=?";
	public static final String GET_ALL_PROPERTIES_WITH_TYPE = "SELECT A.PROPERTY_ID,A.PROP_TYPE_ID,b.property_type_name,b.H_PROPERTY_TYPE_NAME FROM IGRS_REG_PROPRTY_DTLS A, IGRS_PROPERTY_TYPE_MASTER B WHERE A.REG_TXN_ID=? AND A.PROP_TYPE_ID=B.PROPERTY_TYPE_ID AND A.PROPERTY_ADDRESS IS NOT NULL ORDER BY A.CREATED_DATE ASC";
	public static String PROPERTY_TYPE_NAME_EN = "SELECT PROPERTY_TYPE_ID,PROPERTY_TYPE_NAME FROM IGRS_PROPERTY_TYPE_MASTER WHERE  PROPERTY_TYPE_STATUS='A'";
	public static String PROPERTY_TYPE_NAME_HI = "SELECT PROPERTY_TYPE_ID,H_PROPERTY_TYPE_NAME FROM IGRS_PROPERTY_TYPE_MASTER WHERE PROPERTY_TYPE_STATUS='A'";
	public static String AREA_NAME_EN = "SELECT AREA_TYPE_ID,AREA_TYPE_NAME FROM IGRS_AREA_TYPE_MASTER WHERE  AREA_TYPE_STATUS='A'";
	public static String AREA_NAME_HI = "SELECT AREA_TYPE_ID,H_AREA_TYPE_NAME FROM IGRS_AREA_TYPE_MASTER WHERE AREA_TYPE_STATUS='A'";
	public static String TEHSIL_NAME_EN = "SELECT TEHSIL_ID,TEHSIL_NAME FROM IGRS_TEHSIL_MASTER WHERE DISTRICT_ID=? AND TEHSIL_STATUS='A'";
	public static String TEHSIL_NAME_HI = "SELECT TEHSIL_ID,H_TEHSIL_NAME FROM IGRS_TEHSIL_MASTER WHERE DISTRICT_ID=? AND TEHSIL_STATUS='A'";
	public static String GET_CANCELLATION_LABEL = "SELECT A.CANCELLATION_INST_ID,C.INSTRUMENT_NAME,c.h_instrument_name,A.CANCELLATION_FLAG FROM IGRS_DUTY_TXN_DETLS A, IGRS_DEED_INSTRUMENT_MASTER C WHERE A.CANCELLATION_INST_ID=c.instrument_id AND  A.DUTY_TXN_ID=? AND A.CANCELLATION_FLAG='Y'";
	public static String GET_PROP_WISE_DUTY = "SELECT A.PROPERTY_ID,b.val_txn_id,b.PROP_DUTY_ID,b.stamp_duty,b.municipal_duty,b.block_duty,b.upkar_duty," + "b.total,b.reg_fee,b.duty_already_paid,b.reg_already_paid,b.payable_duty,b.payable_reg,a.market_value " + "FROM IGRS_REG_PROPRTY_DTLS A," + "IGRS_PROP_DUTY_DETLS B " + "WHERE a.val_txn_id=b.val_txn_id " + "AND b.duty_txn_id=? " + "AND a.REG_TXN_ID=? " + "order by b.val_txn_id";
	public static String GET_CONSENTER_WISE_DUTY = "SELECT A.CONSENTER_FIRST_NAME,b.CONSENTER_TXN_NUM,b.REG_TXN_ID,b.STAMP_DUTY,b.MUNICIPAL_DUTY,b.JANPAD_DUTY,b.UPKAR_DUTY," + "b.TOTAL,b.REG_FEE,b.EXEMPTED_DUTY,b.EXEMPTED_REG_FEE,b.TOTAL_AFTER_EXEMP,b.REG_FEE_AFTER_EXEMP " + "FROM IGRS_CONSENTER_DUTY_DETAILS B, IGRS_REG_CONSENTER_DETAILS A " + "WHERE A.CONSENTER_TXN_NUM=b.CONSENTER_TXN_NUM AND B.REG_TXN_ID=? " + "order by b.CONSENTER_TXN_NUM";
	public static String GET_PROP_WISE_USER_ENTERABLE = "SELECT B.FIELD_NAME," + "A.FIELD_VALUE " + "FROM IGRS_PROP_DUTY_FIELD_DETLS A," + "IGRS_INST_FIELD_MAPPING B " + "WHERE A.INST_FIELD_MAP_ID = B.INST_FIELD_MAP_ID " + "AND A.DUTY_TXN_ID=? " + "AND A.PROP_DUTY_ID=?";
	public static String GET_PROP_WISE_USER_ENTERABLE_HI = "SELECT B.FIELD_NAME_H," + "A.FIELD_VALUE " + "FROM IGRS_PROP_DUTY_FIELD_DETLS A," + "IGRS_INST_FIELD_MAPPING B " + "WHERE A.INST_FIELD_MAP_ID = B.INST_FIELD_MAP_ID " + "AND A.DUTY_TXN_ID=? " + "AND A.PROP_DUTY_ID=?";
	// ADDED BY SHREERAJ FOR INSTRUMENT FLAGS
	public static final String GET_INSTRUMENT_FLAGS = "SELECT PROP_REQ_FLAG,PROP_VAL_REQ_FLAG,COMMON_FLOW FROM IGRS_DEED_INSTRUMENT_MASTER WHERE INSTRUMENT_ID=?";
	public static final String GET_ALL_PARTICULAR = "SELECT PARTICULAR_TXN_ID,PARTICULAR_NAME FROM IGRS_REG_TXN_PARTICULAR_DETLS WHERE REG_TXN_ID=? ORDER BY CREATED_DATE ASC";
	public static final String INSERT_REG_PATICULAR_TRANS_MAP = "INSERT INTO IGRS_REG_INIT_PARTI_TRANS_MAP(REG_TXN_ID,PARTICULAR_TXN_ID,PARTY_TXN_ID,CREATED_BY,CREATED_DATE,MAPPING_TXN_ID) VALUES (?,?,?,?,sysdate,IGRS_REG_TRANS_PROP_MAP_ID_SEQ.NEXTVAL)";
	public static final String GET_TRANSACTING_PARTY_DETS_PARTICULAR = "SELECT B.PARTY_TYPE_NAME,A.PARTY_FIRST_NAME,A.PARTY_LAST_NAME,A.AUTHRZD_PERSN_NAME,A.PARTY_TXN_ID,A.PARTY_TYPE_ID " + "FROM IGRS_REG_TXN_PARTY_DETLS A," + "IGRS_PARTY_TYPE_MASTER B," + "IGRS_REG_INIT_PARTI_TRANS_MAP C " + "WHERE B.PARTY_TYPE_ID=A.PARTY_TYPE_ID " + "AND C.PARTY_TXN_ID=A.PARTY_TXN_ID " + "AND C.REG_TXN_ID=A.REG_TXN_ID " + "AND C.REG_TXN_ID=? " + "AND C.PARTICULAR_TXN_ID=? ORDER BY A.PARTY_TXN_ID";
	public static final String IGRS_PLOT_TOT_AREA = "SELECT total_area from IGRS_PROP_PLOT_DETLS where VAL_TXN_ID=?";
	public static final String IGRS_AGRI_TOT_AREA = "SELECT SUM((NVL(TOTAL_AREA,0)+NVL(TOTAL_DIVERTED_AREA,0))) TOT from IGRS_PROP_AGRI_DETLS where VAL_TXN_ID=?";
	public static final String GET_MPCST_PARAMS = "SELECT DIST_ID,TEHSIL_ID,AREA_TYPE_ID,SUB_AREA_TYPE_ID,WARD_PATWARI_ID,COLONY_ID,DISTRICT_NAME from IGRS_PROP_VAL_TXN_DETLS a, IGRS_DISTRICT_MASTER b where a.dist_id=b.district_id and VAL_TXN_ID=?";
	// Added by Mohit for Addtional Uploads
	public static final String IGRS_INSERT_ADDITIONAL_UPLOADS = "INSERT INTO IGRS_REG_ADDITIONAL_UPLOADS(UPLOAD_TXN_ID,REG_TXN_ID,PARTY_TXN_ID,PROPERTY_ID,FILE_PATH,FILE_NAME,STATUS,CREATED_DATE,CREATED_BY,CONSENTER_ID) values(ADDITIONAL_UPLOADS.NEXTVAL,?,?,?,?,?,?,sysdate,?,?)";
	public static final String IGRS_GET_ADDITIONAL_UPLOADS = "select FILE_PATH,FILE_NAME,UPLOAD_TXN_ID from IGRS_REG_ADDITIONAL_UPLOADS where REG_TXN_ID=? AND PARTY_TXN_ID=?";
	public static final String IGRS_GET_ADDITIONAL_UPLOADS_CONSENTER = "select FILE_PATH,FILE_NAME,UPLOAD_TXN_ID from IGRS_REG_ADDITIONAL_UPLOADS where REG_TXN_ID=? AND CONSENTER_ID=?";
	public static final String IGRS_GET_ADDITIONAL_UPLOADS_ADJU = "select FILE_PATH,FILE_NAME,UPLOAD_TXN_ID from IGRS_REG_ADDITIONAL_UPLOADS where REG_TXN_ID=? AND PARTY_TXN_ID IS NULL AND PROPERTY_ID IS NULL AND CONSENTER_ID IS NULL";
	public static final String IGRS_DELETE_REMOVED_UPLOADS = "delete from IGRS_REG_ADDITIONAL_UPLOADS where REG_TXN_ID=? and PARTY_TXN_ID=?";
	public static final String IGRS_DELETE_REMOVED_UPLOADS_CONSENTER = "delete from IGRS_REG_ADDITIONAL_UPLOADS where REG_TXN_ID=? and CONSENTER_ID=?";
	public static final String UPDATE_REG_INIT_TXN_STATUS_FEE = "UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS=?, REG_FEE_PAY_CHECK=? WHERE REG_TXN_ID=?";
	public static final String UPDATE_PAYMENT_FLAG_FEE = "UPDATE IGRS_REG_PAYMENT_DETLS SET PAYMENT_FLAG=? WHERE REG_TXN_ID=? AND PAYMENT_TYPE_ID=2";
	public static final String CHECK_REG_FEE_PAY_FLAG = "SELECT NVL(REG_FEE_PAY_CHECK, 'N') FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	public static final String CHECK_REG_FEE_COMPLT_PAY_FLAG = "SELECT * FROM IGRS_REG_PAYMENT_DETLS WHERE REG_TXN_ID=? AND PAYMENT_TYPE_ID=2 AND PAYMENT_FLAG='P'";
	public static final String IGRS_INSERT_ADDITIONAL_UPLOADS_PROPERTY = "INSERT INTO IGRS_REG_ADDITIONAL_UPLOADS(UPLOAD_TXN_ID,REG_TXN_ID,PROPERTY_ID,PARTY_TXN_ID,FILE_PATH,FILE_NAME,STATUS,CREATED_DATE,CREATED_BY,CONSENTER_ID) values(ADDITIONAL_UPLOADS.NEXTVAL,?,?,?,?,?,?,sysdate,?,?)";
	public static final String IGRS_GET_ADDITIONAL_UPLOADS_PROPERTY = "select FILE_PATH,FILE_NAME,UPLOAD_TXN_ID from IGRS_REG_ADDITIONAL_UPLOADS where REG_TXN_ID=? AND PROPERTY_ID=?";
	public static final String CHECK_DEED_DRAFT_ID_EXIST = "SELECT NVL(CREATED_BY,'0') FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE DEED_DRAFT_ID=? and CREATED_BY=? AND APPLICATION_NUMBER=? AND APPLICATION_TYPE='R' ";
	public static final String CHECK_DEED_DRAFT_ID_EXIST_ADJU = "SELECT NVL(CREATED_BY,'0') FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE DEED_DRAFT_ID=? AND APPLICATION_TYPE='A' AND APPLICATION_NUMBER=?";
	public static final String UPDATE_DEED_DRAFT_ID = "UPDATE IGRS_REG_TXN_DETLS SET DEED_DRAFT_ID=? WHERE REG_TXN_ID=?";
	public static final String UPDATE_DEED_DRAFT_TABLE = "UPDATE IGRS_DEED_DRAFT_TXN_DTLS SET DEED_DRAFT_STATUS='D', UPDATE_DATE=sysdate WHERE DEED_DRAFT_ID=?";
	public static final String CHECK_DEED_DRAFT_ID_EXIST_CONSUME = "SELECT DEED_DRAFT_STATUS FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE DEED_DRAFT_ID  =? AND DEED_DRAFT_STATUS='A' and CREATED_BY=?";
	public static final String CHECK_DEED_DRAFT_ID_EXIST_CONSUME_ADJU = "SELECT DEED_DRAFT_STATUS FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE DEED_DRAFT_ID  =? AND DEED_DRAFT_STATUS='A'";
	public static final String IGRS_DELETE_REMOVED_UPLOADS_PROPERTY = "delete from IGRS_REG_ADDITIONAL_UPLOADS where REG_TXN_ID=? and PROPERTY_ID=?";
	public static final String UPDATE_DEED_DRAFT_PATH_NAME = "UPDATE IGRS_REG_TXN_DETLS SET DEED_DOC_FILEPATH_INITIAL=? WHERE REG_TXN_ID=?";
	public static final String UPDATE_DEED_DRAFT_ID_ROLLBACK = "UPDATE IGRS_REG_TXN_DETLS SET DEED_DRAFT_ID='' WHERE REG_TXN_ID=?";
	public static final String GET_DEED_DRAFT_ID = "SELECT DEED_DRAFT_ID, DEED_DOC_FILEPATH_INITIAL FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?";
	public static final String UPDATE_DEED_DRAFT_TABLE_ROLLBACK = "UPDATE IGRS_DEED_DRAFT_TXN_DTLS SET DEED_DRAFT_STATUS='A', UPDATE_DATE=sysdate WHERE DEED_DRAFT_ID=?";
	public static final String GET_ADJU_FEE = "SELECT FEE_DR FROM IGRS_FUNCTION_SERVICE_MAPPING WHERE FUNCTION_ID=?";
	public static final String GET_DEED_DRAFT_MAX_PAGE_NUMBER = "SELECT MAX(DEED_PAGE_ID) FROM IGRS_DEED_DRAFT_CONTENT_DTLS WHERE DEED_DRAFT_ID = ?";
	public static final String GET_TOTAL_CONSENTER_CONSID_AMOUNT = "SELECT SUM(CONSIDERATION_AMOUNT) FROM IGRS_REG_CONSENTER_DETAILS WHERE REG_TXN_ID = ?";
	public static final String GET_TOTAL_CONSENTER_CONSID_AMOUNT_FINAL = "SELECT TOTAL_CONSENTER_CONSID FROM IGRS_REG_ADJUDCN_FINAL_DTLS WHERE ADJUDCN_TXN_ID = ?";
	public static final String UPDATE_MERGED_DEED_STATUS = "UPDATE IGRS_REG_TXN_DETLS SET DEED_DOC_FILENAME=?,DEED_DOC_FILEPATH=?,DEED_CONSENTER_PAGES=?,DEED_EXECUTION_DATE=sysdate WHERE REG_TXN_ID = ?";
	public static final String INSERT_CONSENTER_DETLS = "INSERT INTO IGRS_REG_CONSENTER_DETAILS(CONSENTER_FIRST_NAME,CONSENTER_AGE,RELATION_TYPE_ID,FATHER_NAME,CONSENTER_ADDRESS,COUNTRY_ID,STATE_ID,DISTRICT_ID,PHOTO_PROOF_ID,PHOTO_PROOF_NUMBER,REG_TXN_ID,CREATED_BY,CREATED_DATE,DELETED_FLAG,CONSENTER_TXN_NUM,CONSIDERATION_AMOUNT,WITH_CONSIDERATION) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,sysdate,'0',?,?,?)";
	// aadhar
	public static final String INSERT_CONSENTER_DETLS_adhar = "INSERT INTO IGRS_REG_CONSENTER_DETAILS(CONSENTER_FIRST_NAME,CONSENTER_AGE,RELATION_TYPE_ID,FATHER_NAME,CONSENTER_ADDRESS,COUNTRY_ID,STATE_ID,DISTRICT_ID,PHOTO_PROOF_ID,PHOTO_PROOF_NUMBER,REG_TXN_ID,CREATED_BY,CREATED_DATE,DELETED_FLAG,CONSENTER_TXN_NUM,CONSIDERATION_AMOUNT,WITH_CONSIDERATION,ADHAR_NAME) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,sysdate,'0',?,?,?,?)";
	public static final String USER_TXN_ID = "SELECT MAX(USER_TXN_ID) FROM IGRS_USER_REG_DETAILS WHERE USER_ID=?";
	public static final String UPDATE_CONSENTER_DETLS = "UPDATE IGRS_REG_CONSENTER_DETAILS SET CONSENTER_FIRST_NAME=?,CONSENTER_AGE=?,RELATION_TYPE_ID=?,FATHER_NAME=?,CONSENTER_ADDRESS=?,COUNTRY_ID=?,STATE_ID=?,DISTRICT_ID=?,PHOTO_PROOF_ID=?,PHOTO_PROOF_NUMBER=?,UPDATE_BY=?,UPDATE_DATE=sysdate,DELETED_FLAG='0' where CONSENTER_TXN_NUM=? and REG_TXN_ID=?";
	public static final String GET_REG_CONSENTER_ID_SEQ = "SELECT IGRS_REG_CONSENTER_SEQ.NEXTVAL FROM DUAL";
	public static final String GET_CONSENTERS = "SELECT CONSENTER_TXN_NUM,CONSENTER_FIRST_NAME,CONSENTER_AGE,FATHER_NAME FROM IGRS_REG_CONSENTER_DETAILS WHERE REG_TXN_ID=? order by CONSENTER_TXN_NUM";
	// below changes for adhar
	public static final String GET_CONSENTER_DEATILS_VIEW = "SELECT A.CONSENTER_TXN_NUM,A.reg_txn_id,A.CONSENTER_FIRST_NAME,A.CONSENTER_AGE,A.FATHER_NAME, A.CONSENTER_ADDRESS,A.photo_proof_number, b.country_name,c.state_name,d.district_name,e.relation_type_name,e.relation_type_name,A.COUNTRY_ID,a.state_id,a.district_id,a.relation_type_id,a.photo_proof_id,b.H_COUNTRY_NAME,c.H_STATE_NAME,d.H_DISTRICT_NAME,e.H_RELATION_TYPE_NAME,e.H_RELATION_TYPE_NAME,a.CONSIDERATION_AMOUNT,a.WITH_CONSIDERATION ,a.ADHAR_NAME FROM IGRS_REG_CONSENTER_DETAILS A, IGRS_COUNTRY_MASTER B, igrs_state_master C, igrs_district_master D, igrs_relation_type_master E WHERE A.REG_TXN_ID=? AND A.CONSENTER_TXN_NUM=? AND A.COUNTRY_ID=B.COUNTRY_ID AND A.state_id=C.STATE_ID AND A.district_id=D.DISTRICT_ID AND A.relation_type_id=E.RELATION_TYPE_ID";
	public static final String DELETE_CONSENTER_DETLS = "DELETE FROM IGRS_REG_CONSENTER_DETAILS WHERE CONSENTER_TXN_NUM=? AND REG_TXN_ID=?";
	// public static final String
	// GET_CONSENTER_FLAG="select a.CONSENTER_FLAG,a.CONSENTER_COUNT from IGRS_DUTY_TXN_DETLS a , IGRS_REG_TXN_DETLS b where a.duty_txn_id=b.duty_txn_id and b.reg_txn_id=?";
	public static final String GET_CONSENTER_FLAG = "select CONSENTER_WITH_CONSID from IGRS_REG_TXN_DETLS where reg_txn_id=?";
	public static final String GET_ADD_CONSENTER_FLAG = "select ADD_CONSENTER_FLAG from IGRS_REG_TXN_DETLS where reg_txn_id=?";
	public static final String UPDATE_CONSENTER_FLAG = "UPDATE IGRS_REG_TXN_DETLS SET REGISTRATION_TXN_STATUS=? , ADD_CONSENTER_FLAG=? , CONSENTER_WITH_CONSID=? WHERE REG_TXN_ID=?";
	public static final String TOTAL_PAYABLE_AMOUNT = "SELECT NVL(TOTAL_AFTER_EXEMP,0) FROM IGRS_REG_INIT_STAMP_DUTY_DETLS WHERE REG_TXN_ID=?";
	public static final String TOTAL_PAYABLE_AMOUNT_ADJU = "SELECT NVL(TOTAL_DUTY,0) FROM IGRS_REG_ADJUDCN_FINAL_DTLS WHERE ADJUDCN_TXN_ID=?";
	public static final String TOTAL_PAID = "SELECT SUM(NVL(PAID_AMOUNT,0)) FROM IGRS_REG_PAYMENT_DETLS WHERE REG_TXN_ID=? AND SOURCE_MOD_FLAG='I' AND PAYMENT_TYPE_ID=1";
	// public static final String UPDATE_REG_PROP_MPCST_DETLS =
	// "UPDATE IGRS_REG_PROPRTY_DTLS SET MPCST_FILE1_PATH=?,MPCST_FILE2_PATH=?,FILE1_HASH_MPCST=?,FILE2_HASH_MPCST=?,FILE1_HASH_PAS=?,FILE2_HASH_PAS=? ,UPDATE_BY=? ,UPDATE_DATE=sysdate,MPCST_AVAIL_FLAG=? WHERE PROPERTY_ID=? AND REG_TXN_ID=?";
	public static final String UPDATE_REG_PROP_MPCST_DETLS = "UPDATE IGRS_REG_PROPRTY_DTLS SET FILE1_HASH_MPCST=?,FILE2_HASH_MPCST=?,UPDATE_BY=? ,UPDATE_DATE=sysdate,MPCST_AVAIL_FLAG=? WHERE PROPERTY_ID=? AND REG_TXN_ID=?";
	public static final String GET_REG_PROP_MPCST_DETLS = "SELECT FILE1_HASH_MPCST,FILE2_HASH_MPCST,MPCST_AVAIL_FLAG FROM IGRS_REG_PROPRTY_DTLS WHERE PROPERTY_ID=?";
	public static final String GET_PROP_DUTY_ID = "SELECT b.PROP_DUTY_ID FROM IGRS_REG_PROPRTY_DTLS A, IGRS_PROP_DUTY_DETLS B WHERE a.val_txn_id=b.val_txn_id and a.PROPERTY_ID=? AND b.DUTY_TXN_ID=? ";
	public static final String GET_DEVELOPER_SHARE = "SELECT c.FIELD_VALUE FROM IGRS_PROP_DUTY_FIELD_DETLS c WHERE PROP_DUTY_ID=? and INST_FIELD_MAP_ID=303";
	public static final String GET_OWNER_SHARE = "SELECT c.FIELD_VALUE FROM IGRS_PROP_DUTY_FIELD_DETLS c WHERE PROP_DUTY_ID=? and INST_FIELD_MAP_ID=304";
	public static final String GET_OWNER_HASHMAP = "SELECT PARTY_TXN_ID,APPELLATE_TYPE_ID,PARTY_FIRST_NAME,ORGANIZATION_NAME,AUTHRZD_PERSN_NAME FROM IGRS_REG_TXN_PARTY_DETLS WHERE REG_TXN_ID=? AND PARENT_ID=? ORDER BY PARTY_TXN_ID";
	public static final String GET_PARTY_UPLOADS = "SELECT COLLECTOR_CERTIFICATE_PATH,PHOTO_PROOF_PATH,NOT_AFFD_EXEC_PATH,EXEC_PHOTO_PATH,NOT_AFFD_ATTR_PATH,ATTR_PHOTO_PATH,CLAIMNT_PHOTO_PATH,PAN_FORM_60_PATH FROM IGRS_REG_TXN_PARTY_DETLS WHERE IS_APPLICANT NOT IN ('O') AND REG_TXN_ID=? ";
	public static final String GET_PROPERTY_UPLOADS = "SELECT ANGLE_1_PATH,ANGLE_2_PATH,ANGLE_3_PATH,MAP_PATH,RIN_PATH,KHASRA_PATH FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=? ";
	public static final String GET_ADD_UPLOADS = "SELECT FILE_PATH FROM IGRS_REG_ADDITIONAL_UPLOADS WHERE REG_TXN_ID=? ";
	public static final String GET_PRINT_FORM = "SELECT IGRS_REG_TXN_DETLS.ADJUDICATION_FLAG, IGRS_REG_TXN_DETLS.INSTRUMENTS_ID,igrs_deed_type_master.deed_type_name,igrs_deed_instrument_master.instrument_name,igrs_deed_type_master.h_deed_type_name,igrs_deed_instrument_master.h_instrument_name FROM IGRS_REG_TXN_DETLS,IGRS_DEED_TYPE_MASTER,IGRS_DEED_INSTRUMENT_MASTER WHERE IGRS_REG_TXN_DETLS.DEED_ID=igrs_deed_type_master.deed_type_id and igrs_reg_txn_detls.instruments_id=igrs_deed_instrument_master.instrument_id and IGRS_REG_TXN_DETLS.REG_TXN_ID=?";
	public static final String UPDATE_EWS_DUTIES = "UPDATE IGRS_REG_INIT_STAMP_DUTY_DETLS set TOTAL_AFTER_EXEMP=? ,EXEMP_DUTY=?, UPDATE_BY=?, UPDATE_DATE=sysdate, EWS_APPLIED='Y' where REG_TXN_ID=?";
	public static final String UPDATE_EWS_DUTIES_DUTY = "UPDATE IGRS_DUTY_TXN_DETLS set TOTAL_AFTER_EXEMP=? ,EXEMP_STAMP=?, UPDATED_BY=?, UPDATED_DATE=sysdate, EWS_APPLIED='Y' where DUTY_TXN_ID=(SELECT DUTY_TXN_ID FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID=?)";
	public static final String GET_CONSENTERS_PDF = "SELECT nvl(CONSENTER_FIRST_NAME,'')||' '||nvl(CONSENTER_MIDDLE_NAME,'')||' '||nvl(CONSENTER_LAST_NAME,'') ,FATHER_NAME,CONSIDERATION_AMOUNT FROM  IGRS_REG_CONSENTER_DETAILS WHERE REG_TXN_ID=?";
	public static final String MineralInsertion = "insert into IGRS_REG_TXN_MINING_DETLS(TXN_ID,REG_TXN_ID,DEED_ID,INSTRUMENT_ID,DURATION_OF_LEASE_IN_MONTHS,CREATED_DATE,MINERAL_ID) values(IGRS_REG_TXN_MINING_SEQ.NEXTVAL,?,?,?,?,sysdate,?)";
	public static final String GET_PARTY_ROLE_NAME_FOR_POA = "SELECT H_PARTY_TYPE_NAME ||' ,'||PARTY_TYPE_NAME AS FULL_PARTY_NAME FROM IGRS_PARTY_TYPE_MASTER WHERE PARTY_TYPE_ID =? ";
	public static final String GET_OWNER_PARTY_DESC_ORG = "SELECT CASE WHEN (SELECT COUNT(*) FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? and parent_id IS not NULL )>1 " + " THEN (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? AND rownum <2 " + " and PARTY_TXN_ID= (select min(party_txn_id) from IGRS_REG_TXN_PARTY_DETLS where reg_txn_id=? and parent_id IS not NULL)" + " )||' '||'and others by (' ||','||')'||' '|| (SELECT AUTHRZD_PERSN_NAME " + " FROM IGRS_REG_TXN_PARTY_DETLS WHERE parent_id IS NULL AND reg_txn_id   =? ) " + " ELSE (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id   =? AND rownum     <2 and parent_id IS not NULL " + " )||' '||'by ('||','||')'||' '||r.AUTHRZD_PERSN_NAME END " + " FROM IGRS_REG_TXN_PARTY_DETLS r, igrs_party_type_master p WHERE r.parent_id IS NULL and r.party_type_id=p.party_type_id AND r.reg_txn_id   =?";
	public static final String GET_OWNER_PARTY_DESC_HINDI_ORG = "SELECT CASE WHEN (SELECT COUNT(*) FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? and parent_id IS not NULL )>1 " + " THEN (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? AND rownum <2 " + " and PARTY_TXN_ID= (select min(party_txn_id) from IGRS_REG_TXN_PARTY_DETLS where reg_txn_id=? and parent_id IS not NULL)" + " )||' '||'एवं अन्‍य  सभी द्वारा (' ||','||')'||' '|| (SELECT AUTHRZD_PERSN_NAME " + " FROM IGRS_REG_TXN_PARTY_DETLS WHERE parent_id IS NULL AND reg_txn_id   =? ) " + " ELSE (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id   =? AND rownum     <2 and parent_id IS not NULL " + " )||' '||'द्वारा ('||','||')'||' '||r.AUTHRZD_PERSN_NAME  END " + " FROM IGRS_REG_TXN_PARTY_DETLS r, igrs_party_type_master p WHERE r.parent_id IS NULL and r.party_type_id=p.party_type_id AND r.reg_txn_id   =?";
	public static final String GET_OWNER_POA_PARTY_DESC_ORG = "SELECT AUTHRZD_PERSN_NAME   " + "FROM IGRS_REG_TXN_PARTY_DETLS " + " WHERE parent_id IS NULL " + " AND reg_txn_id   =? ";
	public static final String GET_OWNER_PARTY_DESC = "SELECT CASE WHEN (SELECT COUNT(*) FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? and parent_id IS not NULL )>1 " + " THEN (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? AND rownum <2 " + " and PARTY_TXN_ID= (select min(party_txn_id) from IGRS_REG_TXN_PARTY_DETLS where reg_txn_id=? and parent_id IS not NULL)" + " )||' '||'and others by (' ||','||')'||' '|| (SELECT party_first_name||' '||PARTY_MIDDLE_NAME||' ' ||party_last_name " + " FROM IGRS_REG_TXN_PARTY_DETLS WHERE parent_id IS NULL AND reg_txn_id   =? ) " + " ELSE (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id   =? AND rownum     <2 and parent_id IS not NULL " + " )||' '||'by ('||','||')'||' '||r.party_first_name||' '||r.PARTY_MIDDLE_NAME||' '||r.party_last_name END " + " FROM IGRS_REG_TXN_PARTY_DETLS r, igrs_party_type_master p WHERE r.parent_id IS NULL and r.party_type_id=p.party_type_id AND r.reg_txn_id   =?";
	public static final String GET_OWNER_PARTY_DESC_poa = "select party_name from (SELECT reg_txn_id  " + " , LISTAGG(nvl(party_first_name||' '||party_last_name,'') || NVL(AUTHRZD_PERSN_NAME,''), ',')  " + "      WITHIN GROUP (ORDER BY party_first_name) as party_name  " + " FROM   igrs_reg_txn_party_detls WHERE reg_txn_id = ? and parent_id is not null  " + "  GROUP BY reg_txn_id) ";
	public static final String GET_OWNER_PARTY_DESC_poa_eng = "select decode(instr(party_name,',',1,1) , 0, party_name , substr(party_name,1,instr(party_name,',',1,1)-1)||' and others ') party_name_1 from( " + "SELECT reg_txn_id " + "   , LISTAGG(nvl(party_first_name||' '||party_last_name,'') || NVL(AUTHRZD_PERSN_NAME,''), ',') " + "     WITHIN GROUP (ORDER BY party_first_name) as party_name " + "   FROM   igrs_reg_txn_party_detls WHERE reg_txn_id = ? and parent_id is not null  " + "    GROUP BY reg_txn_id)";
	public static final String GET_OWNER_PARTY_DESC_poa_hindi = "select decode(instr(party_name,',',1,1) , 0, party_name , substr(party_name,1,instr(party_name,',',1,1)-1)||' एवं अन्‍य सभी ') party_name_1 from( " + "SELECT reg_txn_id " + "   , LISTAGG(nvl(party_first_name||' '||party_last_name,'') || NVL(AUTHRZD_PERSN_NAME,''), ',') " + "     WITHIN GROUP (ORDER BY party_first_name) as party_name " + "   FROM   igrs_reg_txn_party_detls WHERE reg_txn_id = ? and parent_id is not null  " + "    GROUP BY reg_txn_id)";
	public static final String POA_NAME = "SELECT party_first_name " + " ||' '" + "  ||PARTY_MIDDLE_NAME " + "  ||' ' " + " ||party_last_name " + "FROM IGRS_REG_TXN_PARTY_DETLS " + "  WHERE parent_id IS NULL " + " AND reg_txn_id   =?";
	public static final String GET_OWNER_PARTY_DESC_HINDI = "SELECT CASE WHEN (SELECT COUNT(*) FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? and parent_id IS not NULL )>1 " + " THEN (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id=? AND rownum <2 " + " and PARTY_TXN_ID= (select min(party_txn_id) from IGRS_REG_TXN_PARTY_DETLS where reg_txn_id=? and parent_id IS not NULL)" + " )||' '||'एवं अन्‍य  सभी द्वारा (' ||','||')'||' '|| (SELECT party_first_name||' '||PARTY_MIDDLE_NAME||' ' ||party_last_name " + " FROM IGRS_REG_TXN_PARTY_DETLS WHERE parent_id IS NULL AND reg_txn_id   =? ) " + " ELSE (SELECT nvl(party_first_name,'') || nvl(AUTHRZD_PERSN_NAME,'') FROM IGRS_REG_TXN_PARTY_DETLS WHERE reg_txn_id   =? AND rownum     <2 and parent_id IS not NULL " + " )||' '||'द्वारा ('||','||')'||' '||r.party_first_name||' '||r.PARTY_MIDDLE_NAME||' '||r.party_last_name END " + " FROM IGRS_REG_TXN_PARTY_DETLS r, igrs_party_type_master p WHERE r.parent_id IS NULL and r.party_type_id=p.party_type_id AND r.reg_txn_id   =?";
	public static final String GET_OWNER_POA_DESC_DISPLAY = "Select Case When Y.Cnt>1" + " Then nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' and others by (,) ' || X.Party_First_Name ||' '|| X.Party_Middle_Name ||' '|| X.Party_Last_Name" + " Else nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' by (,) ' || X.Party_First_Name ||' '|| X.Party_Middle_Name ||' '|| X.Party_Last_Name End " + " From (Select T.* From (Select Parent_Id, Min (Party_Txn_Id) As Party_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id =? And Parent_Id  Is Not Null Group By Parent_Id) M,Igrs_Reg_Txn_Party_Detls T " + " Where M.Parent_Id=T.Parent_Id And M.Party_Id = T.Party_Txn_Id) Q," + "(Select Party_First_Name,Party_Middle_Name,Party_Last_Name,Party_Txn_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id=? And Parent_Id Is Null) X," + "(Select Count(*) As Cnt,Parent_Id From Igrs_Reg_Txn_Party_Detls Where Parent_Id " + " Is Not Null And Reg_Txn_Id=? Group By Parent_Id) Y " + " Where X.Party_Txn_Id=Q.Parent_Id And  X.Party_Txn_Id= Y.Parent_Id ORDER BY  X.Party_Txn_Id";
	public static final String GET_OWNER_POA_DESC_DISPLAY_updated = "SELECT CASE " + " WHEN Cnt > 1    THEN       NVL (P_FIRST_NAME, '')   || NVL (AUTHRZD_PERSN_NAME, '')     || '-'  || Party_First_Name   || ' '   || Party_Middle_Name  || ' '    || Party_Last_Name " + " ELSE     NVL (P_FIRST_NAME , '')   || NVL (AUTHRZD_PERSN_NAME, '')  || '-'  || Party_First_Name    || ' '   || Party_Middle_Name   || ' ' || Party_Last_Name " + " END " + "  OUTPUT " + " from (     select        wm_concat(q.Party_First_Name)  P_FIRST_NAME , Q.AUTHRZD_PERSN_NAME , X.Party_First_Name ,  X.Party_Middle_Name  , X.Party_Last_Name, Y.Cnt , X.Party_Txn_Id " + " FROM (SELECT T.* " + "    FROM (  SELECT Parent_Id, (Party_Txn_Id) AS Party_Id " + "            FROM Igrs_Reg_Txn_Party_Detls " + "         WHERE Reg_Txn_Id = ? AND Parent_Id IS NOT NULL " + "     GROUP BY Parent_Id, Party_Txn_Id) M, " + "   Igrs_Reg_Txn_Party_Detls T " + "  WHERE M.Parent_Id = T.Parent_Id AND M.Party_Id = T.Party_Txn_Id) Q, " + " (SELECT Party_First_Name, " + "        Party_Middle_Name, " + "       Party_Last_Name, " + "      Party_Txn_Id " + " FROM Igrs_Reg_Txn_Party_Detls " + " WHERE Reg_Txn_Id = ? AND Parent_Id IS NULL) X, " + " (  SELECT COUNT (*) AS Cnt, Parent_Id " + "    FROM Igrs_Reg_Txn_Party_Detls " + "    WHERE Parent_Id IS NOT NULL AND Reg_Txn_Id = ? " + "   GROUP BY Parent_Id) Y " + " WHERE X.Party_Txn_Id = Q.Parent_Id AND X.Party_Txn_Id = Y.Parent_Id " + " group by Q.AUTHRZD_PERSN_NAME , X.Party_First_Name ,  X.Party_Middle_Name  , X.Party_Last_Name, Y.Cnt , X.Party_Txn_Id) " + "order by Party_Txn_Id ";
	public static final String GET_OWNER_POA_DESC_DISPLAY_HINDI = "Select Case When Y.Cnt>1" + " Then nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' एवं अन्‍य  सभी द्वारा (,) ' || X.Party_First_Name ||' '|| X.Party_Middle_Name ||' '|| X.Party_Last_Name" + " Else nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' द्वारा (,) ' || X.Party_First_Name ||' '|| X.Party_Middle_Name ||' '|| X.Party_Last_Name End " + " From (Select T.* From (Select Parent_Id, Min (Party_Txn_Id) As Party_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id =? And Parent_Id  Is Not Null Group By Parent_Id) M,Igrs_Reg_Txn_Party_Detls T " + " Where M.Parent_Id=T.Parent_Id And M.Party_Id = T.Party_Txn_Id) Q," + "(Select Party_First_Name,Party_Middle_Name,Party_Last_Name,Party_Txn_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id=? And Parent_Id Is Null) X," + "(Select Count(*) As Cnt,Parent_Id From Igrs_Reg_Txn_Party_Detls Where Parent_Id " + " Is Not Null And Reg_Txn_Id=? Group By Parent_Id) Y " + " Where X.Party_Txn_Id=Q.Parent_Id And  X.Party_Txn_Id= Y.Parent_Id ORDER BY  X.Party_Txn_Id";
	public static final String GET_OWNER_POA_DESC_DISPLAY_ORG = "Select Case When Y.Cnt>1" + " Then nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' and others by (,) ' || X.AUTHRZD_PERSN_NAME " + " Else nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' by (,) ' || X.AUTHRZD_PERSN_NAME  End " + " From (Select T.* From (Select Parent_Id, Min (Party_Txn_Id) As Party_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id =? And Parent_Id  Is Not Null Group By Parent_Id) M,Igrs_Reg_Txn_Party_Detls T " + " Where M.Parent_Id=T.Parent_Id And M.Party_Id = T.Party_Txn_Id) Q," + "(Select AUTHRZD_PERSN_NAME,Party_Txn_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id=? And Parent_Id Is Null) X," + "(Select Count(*) As Cnt,Parent_Id From Igrs_Reg_Txn_Party_Detls Where Parent_Id " + " Is Not Null And Reg_Txn_Id=? Group By Parent_Id) Y " + " Where X.Party_Txn_Id=Q.Parent_Id And  X.Party_Txn_Id= Y.Parent_Id ORDER BY  X.Party_Txn_Id";
	public static final String GET_OWNER_POA_DESC_DISPLAY_HINDI_ORG = "Select Case When Y.Cnt>1" + " Then nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' एवं अन्‍य  सभी द्वारा (,) ' || X.AUTHRZD_PERSN_NAME " + " Else nvl(Q.Party_First_Name,'') || nvl(Q.AUTHRZD_PERSN_NAME,'') ||' द्वारा (,) ' || X.AUTHRZD_PERSN_NAME End " + " From (Select T.* From (Select Parent_Id, Min (Party_Txn_Id) As Party_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id =? And Parent_Id  Is Not Null Group By Parent_Id) M,Igrs_Reg_Txn_Party_Detls T " + " Where M.Parent_Id=T.Parent_Id And M.Party_Id = T.Party_Txn_Id) Q," + "(Select AUTHRZD_PERSN_NAME,Party_Txn_Id " + " From Igrs_Reg_Txn_Party_Detls Where Reg_Txn_Id=? And Parent_Id Is Null) X," + "(Select Count(*) As Cnt,Parent_Id From Igrs_Reg_Txn_Party_Detls Where Parent_Id " + " Is Not Null And Reg_Txn_Id=? Group By Parent_Id) Y " + " Where X.Party_Txn_Id=Q.Parent_Id And  X.Party_Txn_Id= Y.Parent_Id ORDER BY  X.Party_Txn_Id";
	public static final String GET_EXECUTANT_CLAIMANT_NAME_FOR_POA = "SELECT H_CLAIMANT_FLAG_DESC||','||CLAIMANT_FLAG_DESC As Full_Claimant_FLAG_Desc FROM IGRS_CLAIMANT_FLAG_MASTER WHERE CLAIMANT_FLAG_ID=?";
	public static final String minorName = "SELECT  MINOR_GUARDIAN FROM IGRS_REG_TXN_PARTY_DETLS WHERE PARTY_TXN_ID=?";
	public static final String valDistrictId = "SELECT  dist_id FROM IGRS_prop_val_txn_detls WHERE val_txn_id=?";
	public static final String propTypeId = "SELECT  PROP_TYPE_ID FROM IGRS_prop_val_txn_detls WHERE val_txn_id=?";
	public static final String valTehsilId = "SELECT  TEHSIL_ID FROM IGRS_prop_val_txn_detls WHERE val_txn_id=?";
	public static final String GET_OWNER_POA_DESC_DISPLAY_ORG_updated = "select CASE " + "WHEN Cnt>1   THEN NVL(P_FIRST_NAME,'')   || NVL(AUTHRZD_PERSN_NAME_1,'')  ||'-' || AUTHRZD_PERSN_NAME " + " ELSE NVL(P_FIRST_NAME,'')  || NVL(AUTHRZD_PERSN_NAME_1,'')  ||'-' || AUTHRZD_PERSN_NAME " + " END OUTPUT " + " from (SELECT wm_concat(q.Party_First_Name) P_FIRST_NAME , X.AUTHRZD_PERSN_NAME , Q.AUTHRZD_PERSN_NAME  AUTHRZD_PERSN_NAME_1, y.cnt " + " FROM (SELECT T.* FROM(SELECT Parent_Id, (Party_Txn_Id) AS Party_Id FROM Igrs_Reg_Txn_Party_Detls WHERE Reg_Txn_Id =? AND Parent_Id   IS NOT NULL " + " GROUP BY Parent_Id,Party_Txn_Id) M, Igrs_Reg_Txn_Party_Detls T WHERE M.Parent_Id=T.Parent_Id AND M.Party_Id   = T.Party_Txn_Id ) Q,(SELECT AUTHRZD_PERSN_NAME, " + " Party_Txn_Id FROM Igrs_Reg_Txn_Party_Detls WHERE Reg_Txn_Id=? AND Parent_Id  IS NULL) X,(SELECT COUNT(*) AS Cnt, Parent_Id FROM Igrs_Reg_Txn_Party_Detls " + " WHERE Parent_Id IS NOT NULL AND Reg_Txn_Id   =? GROUP BY Parent_Id ) Y WHERE X.Party_Txn_Id=Q.Parent_Id AND X.Party_Txn_Id  = Y.Parent_Id group by X.AUTHRZD_PERSN_NAME , Q.AUTHRZD_PERSN_NAME , y.cnt) ";
	public static final String check2 = " select reg_txn_id from igrs_reg_estamp_map where estamp_txn_id=? ";
	public static final String GET_DEED_DOC_DETAILS = "SELECT DEED_DOC_FILENAME,DEED_DOC_FILEPATH FROM IGRS_REG_TXN_DETLS WHERE REG_TXN_ID = ?";
	// added for aadhar integration by ankit -- start
	public static final String adhar_sequence = "select  igrs_adhar_txn_seq.NEXTVAL from dual";
	public static final String insert_adhar_party_detls = "insert into igrs_reg_adhar_party_details (ADHAR_TXN_ID,PARTY_TXN_ID,ADHAR_NO,ADHAR_NAME,CREATED_BY,REG_TXN_ID, TRANSACTION_ID1,ACKID_INIT,CREATED_DATE) values (?,?,?,?,?,?,?,?,SYSDATE )";
	public static final String insert_adhar_consenter_detls = "insert into igrs_reg_adhar_party_details (ADHAR_TXN_ID,CONSENTER_TXN_NUM,ADHAR_NO,ADHAR_NAME,CREATED_BY,REG_TXN_ID, TRANSACTION_ID1,ACKID_INIT,CREATED_DATE) values (?,?,?,?,?,?,?,?,SYSDATE )";
	public static final String update_party_detls_for_adhar = "update igrs_reg_txn_party_detls set adhar_txn_id = ?, adhar_name = ? where party_txn_id = ?  and REG_TXN_ID =?";
	public static final String update_party_detls_for_government_offc = "update igrs_reg_txn_party_detls set GOV_OFFICE_ID = ? where party_txn_id = ?  and REG_TXN_ID =?";
	public static final String update_consenter_detls_for_adhar = "update IGRS_REG_CONSENTER_DETAILS set adhar_txn_id = ?,adhar_name = ? where CONSENTER_TXN_NUM = ?  and REG_TXN_ID =?";
	public static final String adhar_fail_txn_sequence = "select IGRS_ADHAR_FAIL_TXN_SEQ.NEXTVAL from dual";
	public static final String insert_adhar_fail_txn = "insert into IGRS_REG_ADHAR_FAIL_TXN (TXN_ID,ADHAR_NO,PARTY_TXN_ID,REG_TXN_ID,CONSENTER_TXN_NUM,ERROR_CODE,ERROR_DESC,TRANSACTION_CODE,CREATED_DATE,EKYC) values (?,?,?,?,?,?,?,?,SYSDATE,?)";
	// aaded for aadhar integration by ankit -- end
	public static final String get_govt_office_name = "Select GOVERNMENT_CODE, " + "OFFICE_NAME,H_OFFICE_NAME from IGRS_GOVERNMENT_CLR_MASTER " + "ORDER BY OFFICE_NAME ASC";

	public static final String update_reg_khasra_clr_txn_detls = "update igrs_reg_khasra_prop_clr set PROPERTY_ID=?,REG_TXN_ID =? where VAL_TXN_ID =?";
	// public static final String update_reg_khasra_clr_txn_detls =
	// "update igrs_reg_prop_khasra_clr_detls set PROPERTY_ID=?,REG_TXN_ID =? where VAL_TXN_ID =?";
	public static final String update1_reg_khasra_clr_txn_detls = "update igrs_reg_prop_khasra_clr_detls set NORTH_KHASRA_NO=?,SOUTH_KHASRA_NO =?,EAST_KHASRA_NO=?,WEST_KHASRA_NO=?,RI_CIRCLE=?,MAP_PATH_CLR=?,KHASRA_PATH_CLR=? where PROPERTY_ID=? AND KHASRA_ID = ?";
	// public static final String GET_KHASRA_DETAILS =
	// "SELECT KHASRA_NO,KHASRA_ID,KHASRA_AREA, TOTAL_SALEBLE_AREA , RIN_PUSHTIKA_NUMBER FROM igrs_reg_prop_khasra_clr_detls WHERE PROPERTY_ID = ?";

	public static final String GET_KHASRA_DETAILS = "SELECT KHASRA_NO,KHASRA_ID,KHASRA_AREA, TOTAL_SALEBLE_AREA , RIN_PUSHTIKA_NUMBER ,RI_CIRCLE FROM IGRS_REG_KHASRA_PROP_CLR WHERE PROPERTY_ID = ?";

	public static final String CLR_PARTY_TXN_ID = "SELECT IGRS_KHASRA_OWNER_CLR_SEQ.nextval FROM dual";
	// public static final String INSERT_CLR_PROP_OWNER_MAPPING =
	// "INSERT INTO IGRS_REG_KHASRA_PARTY_CLR (PARTY_TXN_ID,KHASRA_NO,KHASRA_ID,PARTY_DETAILS,CASTE,SHARE_OF_PARTY,PROPERTY_ID) VALUES (?,?,?,?,?,?,?)";
	public static final String INSERT_CLR_PROP_OWNER_MAPPING = "INSERT INTO IGRS_REG_KHASRA_PARTY_CLR (PARTY_TXN_ID,KHASRA_NO,KHASRA_ID,PARTY_DETAILS,CASTE,SHARE_OF_PARTY,PROPERTY_ID,FATHER_NAME,ADDRESS,OWNERSHIP_TYPE) VALUES (?,?,?,?,?,?,?,?,?,?)";

	// ADDED BY RAKESH FOR CLR KHASRA DATA VIEW
	public static final String GET_CLR_KHASRA_DETAILS = "SELECT CLR_FLAG,RI_CIRCLE,KHASRA_NO,KHASRA_AREA,NORTH_KHASRA_NO, SOUTH_KHASRA_NO, EAST_KHASRA_NO, WEST_KHASRA_NO,MAP_PATH_CLR,KHASRA_PATH_CLR FROM IGRS_REG_PROP_KHASRA_CLR_DETLS WHERE  PROPERTY_ID=?";
	// public static final String GET_CLR_PARTY_DETAILS =
	// "SELECT PARTY_DETAILS,CASTE,SHARE_OF_PARTY,KHASRA_NO FROM IGRS_REG_KHASRA_PARTY_CLR WHERE PROPERTY_ID = ? AND KHASRA_NO=?";

	public static final String GET_CLR_PARTY_DETAILS = "SELECT PARTY_DETAILS,CASTE,SHARE_OF_PARTY,KHASRA_NO,FATHER_NAME,ADDRESS,OWNERSHIP_TYPE  FROM IGRS_REG_KHASRA_PARTY_CLR WHERE PROPERTY_ID = ? AND KHASRA_NO=?";
	public static final String GET_PROPERTY_TYPE_ID = "SELECT PROP_TYPE_ID FROM IGRS_reg_proprty_dtls WHERE PROPERTY_ID=?";
	public static final String GET_PROPERTY_TYPE_ID_AND_CLR_FLAG = "SELECT PROP_TYPE_ID,CLR_FLAG FROM IGRS_reg_proprty_dtls WHERE PROPERTY_ID=?";
	public static final String Update_khasra_clr_detls = "update IGRS_REG_PROP_KHASRA_CLR_DETLS set ri_circle = ? where PROPERTY_ID =? and REG_TXN_ID= ?";
	// added by akansha for clr
	// public static final String getClrByClrTable =
	// "SELECT CLR_FLAG FROM IGRS_REG_PROP_KHASRA_CLR_DETLS WHERE VAL_TXN_ID=?";

	public static final String getClrByClrTable = "SELECT CLR_FLAG FROM IGRS_REG_KHASRA_PROP_CLR WHERE VAL_TXN_ID=?";
	public static final String GET_KHARSA_AREA = "SELECT KHASRA_AREA, TOTAL_SALEBLE_AREA FROM IGRS_REG_PROP_KHASRA_CLR_DETLS WHERE REG_TXN_ID=? AND KHASRA_NO =? AND PROPERTY_ID =?";
	public static final String SELLABLE_AGRI_AREA = "SELECT TOTAL_AREA FROM igrs_prop_agri_detls WHERE val_txn_id =?";
	public static final String SELLABLE_PLOT_AREA = "SELECT TOTAL_AREA FROM igrs_prop_plot_detls WHERE val_txn_id =?";
	public static final String SELLABLE_BUILDING_AREA = "SELECT TOTAL_AREA FROM igrs_prop_building_detls WHERE val_txn_id =?";
	// public static final String check_ValtxnId_ForKhasra =
	// "select count(val_txn_id) from IGRS_REG_PROP_KHASRA_CLR_DETLS where VAL_TXN_ID = ? and PROPERTY_ID is not null and REG_TXN_ID is not null";

	public static final String check_ValtxnId_ForKhasra = "select count(val_txn_id) from IGRS_REG_KHASRA_PROP_CLR where VAL_TXN_ID = ? and PROPERTY_ID is not null and REG_TXN_ID is not null";

	// public static final String check_ValtxnId_ForKhasra_forProp =
	// "select count(val_txn_id) from IGRS_REG_PROP_KHASRA_CLR_DETLS where VAL_TXN_ID = ? and PROPERTY_ID =? and REG_TXN_ID =?";

	public static final String check_ValtxnId_ForKhasra_forProp = "select count(val_txn_id) from IGRS_REG_KHASRA_PROP_CLR where VAL_TXN_ID = ? and PROPERTY_ID =? and REG_TXN_ID =?";

	public static final String khasra_txn_id = "SELECT  MIN( KHASRA_TXN_ID) from IGRS_REG_PROP_KHASRA_CLR_DETLS where KHASRA_ID = ? and VAL_TXN_ID in " + "(SELECT VAL_TXN_ID " + "  FROM IGRS_REG_PROP_KHASRA_CLR_DETLS " + " where VAL_TXN_ID =? " + " group by VAL_TXN_ID  " + " having COUNT(VAL_TXN_ID)>0) " + "order by VAL_TXN_ID ";
	// public static final String getKhasraIDs=
	// "select distinct KHASRA_ID from IGRS_REG_PROP_KHASRA_CLR_DETLS where VAL_TXN_ID = ? and PROPERTY_ID  is not null and REG_TXN_ID is not null ";
	public static final String getKhasraIDs = "select distinct KHASRA_ID , KHASRA_TXN_ID from IGRS_REG_KHASRA_PROP_CLR where VAL_TXN_ID = ? and FIRST_INSERT_FLAG ='Y'";
	// added by saurav for khasra txn id
	public static final String GET_KHASRA_TXN_ID = "SELECT IGRS_KHASRA_CLR_SEQ.NEXTVAL FROM DUAL";
	// public static final String insert_khasra_txn_details = "INSERT " +
	// "INTO IGRS_REG_PROP_KHASRA_CLR_DETLS " + "  ( " + "    KHASRA_TXN_ID, " +
	// "    VAL_TXN_ID, " + "    KHASRA_NO, " + "    KHASRA_ID, " +
	// "    KHASRA_AREA, " + "    IRRIGATED_FLAG, " + "    IRRIGATED_AREA, " +
	// "    UNIRRI_SINGLE_CROP_FLAG, " + "    UNIRRI_SINGLE_CROP_AREA, " +
	// "    UNIRRI_DOUBLE_CROP_FLAG, " + "    UNIRRI_DOUBLE_CROP_AREA, " +
	// "    PADTI_FLAG, " + "    PADTI_AREA, " + "    OWNERSHIP_TYPE, " +
	// "    NOHIYAT, " + "    CURRENT_STATUS, " + "    REMARKS, " +
	// "    CLR_FLAG, " + "    TOTAL_SALEBLE_AREA, " +
	// "    MORTGAGE_INFORMATION, " + "    CREATED_BY, " + "    CREATED_DATE, "
	// + "    PROPERTY_ID, " + "    REG_TXN_ID , " + "    RIN_PUSHTIKA_NUMBER, "
	// + "    SAMPADA_SINGLE_CROP_AREA, " + "    SAMPADA_DOUBLE_CROP_AREA, " +
	// "    SAMPADA_IRRIGATED_AREA, " + "    CENSUS_CLR_CODE, " +
	// "    SAMPADA_UNIRRIGATED_AREA, " + "    SAMPADA_TOTAL_DIVERTED_AREA, " +
	// "    SAMPADA_DIV_RESIDENTIAL_AREA, " +
	// "    SAMPADA_DIV_COMMERCIAL_AREA, " + "    SAMPADA_DIV_INDUSTRIAL_AREA, "
	// + "    SAMPADA_DIV_EDUCATIONAL_AREA, " + "    SAMPADA_DIV_HEALTH_AREA, "
	// + "    SAMPADA_DIV_OTHER_AREA, " + "    SAMPADA_TOTAL_UNDIVERTED_AREA, "
	// + " LGD_CODE " + " ) " + "  VALUES " + "  ( " +
	// "    IGRS_KHASRA_CLR_SEQ.NEXTVAL , " + "    ?, " + "    ?, " + "    ?, "
	// + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "    sysdate, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ? " +
	// "  ) ";
	// public static final String insert_khasra_txn_details = "INSERT " +
	// "INTO IGRS_REG_PROP_KHASRA_CLR_DETLS " + "  ( " + "    VAL_TXN_ID, " +
	// "    KHASRA_NO, " + "    KHASRA_ID, " + "    KHASRA_AREA, " +
	// "    CLR_FLAG, " + "    TOTAL_SALEBLE_AREA, " + "    CREATED_BY, " +
	// "    CREATED_DATE, " + "    PROPERTY_ID, " + "    REG_TXN_ID , " +
	// "    RIN_PUSHTIKA_NUMBER, " + "    SAMPADA_SINGLE_CROP_AREA, " +
	// "    SAMPADA_DOUBLE_CROP_AREA, " + "    SAMPADA_IRRIGATED_AREA, " +
	// "    CENSUS_CLR_CODE, " + "    SAMPADA_UNIRRIGATED_AREA, " +
	// "    SAMPADA_TOTAL_DIVERTED_AREA, " +
	// "    SAMPADA_DIV_RESIDENTIAL_AREA, " +
	// "    SAMPADA_DIV_COMMERCIAL_AREA, " + "    SAMPADA_DIV_INDUSTRIAL_AREA, "
	// + "    SAMPADA_DIV_EDUCATIONAL_AREA, " + "    SAMPADA_DIV_HEALTH_AREA, "
	// + "    SAMPADA_DIV_OTHER_AREA, " + "    SAMPADA_TOTAL_UNDIVERTED_AREA, "
	// + " LGD_CODE, " + " KHASRA_TXN_ID) " + "  VALUES " + "  ( " + "  ? , " +
	// "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "  sysdate, " + "   ?, ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " +
	// " ? " + " ) ";
	public static final String insert_khasra_txn_details = "INSERT INTO IGRS_REG_KHASRA_PROP_CLR  (    VAL_TXN_ID,    KHASRA_NO,    KHASRA_ID,    KHASRA_AREA,    CLR_FLAG,    TOTAL_SALEBLE_AREA,    CREATED_BY,    CREATED_DATE,    PROPERTY_ID,    REG_TXN_ID ,    RIN_PUSHTIKA_NUMBER,    SAMPADA_SINGLE_CROP_AREA,    SAMPADA_DOUBLE_CROP_AREA,    SAMPADA_IRRIGATED_AREA,    CENSUS_CLR_CODE,    SAMPADA_UNIRRIGATED_AREA,    SAMPADA_TOTAL_DIVERTED_AREA,    SAMPADA_DIV_RESIDENTIAL_AREA,    SAMPADA_DIV_COMMERCIAL_AREA,    SAMPADA_DIV_INDUSTRIAL_AREA,    SAMPADA_DIV_EDUCATIONAL_AREA,    SAMPADA_DIV_HEALTH_AREA,    SAMPADA_DIV_OTHER_AREA,    SAMPADA_TOTAL_UNDIVERTED_AREA,    LGD_CODE,    KHASRA_TXN_ID,    RI_CIRCLE,    NOHIYAT,DISTCODE_CLR,TEHCODE_CLR,HALKANUMBER,BASRANUMBER,KHASRAID_DEPT_CLR,ACTION_STATUS,LAND_USETYPE,LAND_USETYPE_DETL,CROP_TYPE,KHASRA_UNQ_NO,ALPIN_NO  )  VALUES  (    ? ,    ?,    ?,    ?,    ?,    ?,    ?,    " + " sysdate,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?,    ?  )  ";
	public static final String INSERT_REG_INIT_PROP_KHASRA_DETLS_CLR = "INSERT INTO IGRS_REG_PROP_KHASARA_DTLS(KHASRA_TXN_ID,PROPERTY_ID,KHASRA_NUMBER,RIN_PUSHTIKA_NUMBER,KHASRA_AREA,LAGAAN,NORTH_BOUNDARY,SOUTH_BOUNDARY,EAST_BOUNDARY,WEST_BOUNDARY,CREATED_BY,CREATED_DATE,CLR_FLAG) VALUES (IGRS_REG_KHASRA_TXN_ID_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,?,sysdate,?)";
	public static final String GET_ALL_PROPERTIES_CLR = "SELECT PROPERTY_ID FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=? and PROP_TYPE_ID =? and CLR_FLAG =? ORDER BY CREATED_DATE ASC";
	public static final String GET_AGRI_PROPERTIES_CLR = "SELECT distinct KHASRA_NO FROM  igrs_reg_prop_khasra_clr_detls WHERE REG_TXN_ID=? and PROPERTY_ID =?";
	public static final String GET_AGRI_PARTY_DETLS = "select distinct PARTY_TXN_ID from IGRS_REG_TXN_PARTY_DETLS where REG_TXN_ID =? and PARTY_TXN_ID not in (select parent_id from IGRS_REG_TXN_PARTY_DETLS where REG_TXN_ID =? and parent_id is not null)";
	public static final String GET_PARTY_MAP_SEQ = "SELECT IGRS_REG_SHARE_MAP_CLR_SQ.NEXTVAL FROM DUAL";
	public static final String INSERT_SHARE_CLR_DETLS = "INSERT INTO IGRS_REG_PROP_SHARE_MAP_CLR( MAPPING_TXN_ID,REG_TXN_ID, PROPERTY_ID,KHASRA_NO,PARTY_TXN_ID,CREATED_BY,CREATED_DATE ) VALUES(?,?,?,?,?,?,sysdate)";
	public static final String INSERT_REG_PROP_TRANS_MAP_POA = "INSERT INTO IGRS_REG_INIT_PROP_TRANS_MAP(REG_TXN_ID,PROPERTY_ID,PARTY_TXN_ID,CREATED_BY,CREATED_DATE,MAPPING_TXN_ID,POA_FLAG) VALUES (?,?,?,?,sysdate,IGRS_REG_TRANS_PROP_MAP_ID_SEQ.NEXTVAL,?)";
	// public static final String GET_ALL_KHASRA_NO_WRT_PROPID =
	// "select distinct khasra_no from igrs_reg_prop_khasra_clr_detls where property_id=?";

	public static final String GET_ALL_KHASRA_NO_WRT_PROPID = "select distinct khasra_no from IGRS_REG_KHASRA_PROP_CLR where property_id=?";

	public static final String GET_PARTY_ROLE_NAME_FOR_POA_OWNER_CLR = "select party_type_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = (select parent_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?)";
	public static final String GET_APPLELATE_FOR_POA_OWNER_CLR = "select APPELLATE_TYPE_ID from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = (select parent_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?)";
	public static final String GET_POA_PARTY_TXN_ID = "select parent_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?";
	public static final String GET_ROLEID_OF_PARENT = "select party_type_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id=(select parent_id from IGRS_REG_TXN_PARTY_DETLS where party_txn_id=?)";
	public static final String INSERT_IGRS_REG_PROP_SHARE_MAP_CLR = "INSERT INTO IGRS_REG_PROP_SHARE_MAP_CLR(REG_TXN_ID,PROPERTY_ID,PARTY_TXN_ID,CREATED_BY,CREATED_DATE,MAPPING_TXN_ID,SHARES,MUTATION_SHARE,KHASRA_NO) VALUES (?,?,?,?,sysdate,IGRS_REG_SHARE_MAP_CLR_SQ.NEXTVAL,?,?,?)";
	public static final String UPDATE_PROPERTY_SHARE_MAP_STATUS = "update IGRS_REG_PROPRTY_DTLS set SHARE_MAPPED = ? where REG_TXN_ID=? and PROPERTY_ID = ?";
	public static final String GET_ALL_PROPERTIES_FOR_SHARE_MAP = "SELECT PROPERTY_ID FROM IGRS_REG_PROPRTY_DTLS WHERE REG_TXN_ID=? AND (SHARE_MAPPED !='1' or SHARE_MAPPED is null) ORDER BY CREATED_DATE ASC";
	// public static final String khasra_txn_details = "SELECT KHASRA_NO, " +
	// "  KHASRA_ID, " + "  KHASRA_AREA, " + "  IRRIGATED_FLAG, " +
	// "  IRRIGATED_AREA, " + "  UNIRRI_SINGLE_CROP_FLAG, " +
	// "  UNIRRI_SINGLE_CROP_AREA, " + "  UNIRRI_DOUBLE_CROP_FLAG, " +
	// "  UNIRRI_DOUBLE_CROP_AREA, " + "  PADTI_FLAG, " + "  PADTI_AREA, " +
	// "  OWNERSHIP_TYPE, " + "  NOHIYAT, " + "  CURRENT_STATUS, " +
	// "  REMARKS, " + "  CLR_FLAG, " + "  TOTAL_SALEBLE_AREA, " +
	// "  MORTGAGE_INFORMATION, " + "  RIN_PUSHTIKA_NUMBER, " +
	// "  SAMPADA_SINGLE_CROP_AREA, " + "  SAMPADA_DOUBLE_CROP_AREA, " +
	// "  SAMPADA_IRRIGATED_AREA, " + "  CENSUS_CLR_CODE, " +
	// "  SAMPADA_UNIRRIGATED_AREA, " + "  SAMPADA_TOTAL_DIVERTED_AREA, " +
	// "  SAMPADA_DIV_RESIDENTIAL_AREA, " + "  SAMPADA_DIV_COMMERCIAL_AREA, " +
	// "  SAMPADA_DIV_INDUSTRIAL_AREA, " + "  SAMPADA_DIV_EDUCATIONAL_AREA, " +
	// "  SAMPADA_DIV_HEALTH_AREA, " + "  SAMPADA_DIV_OTHER_AREA, " +
	// "  SAMPADA_TOTAL_UNDIVERTED_AREA, "+" LGD_CODE " +
	// "FROM IGRS_REG_PROP_KHASRA_CLR_DETLS " + "WHERE KHASRA_TXN_ID= ? " +
	// "AND val_txn_id     = ? " + "AND KHASRA_ID      = ? ";

	// public static final String khasra_txn_details = "SELECT KHASRA_NO, " +
	// "  KHASRA_ID, " + "  KHASRA_AREA, " + "  CLR_FLAG, " +
	// "  TOTAL_SALEBLE_AREA, " + "  RIN_PUSHTIKA_NUMBER, " +
	// "  SAMPADA_SINGLE_CROP_AREA, " + "  SAMPADA_DOUBLE_CROP_AREA, " +
	// "  SAMPADA_IRRIGATED_AREA, " + "  CENSUS_CLR_CODE, " +
	// "  SAMPADA_UNIRRIGATED_AREA, " + "  SAMPADA_TOTAL_DIVERTED_AREA, " +
	// "  SAMPADA_DIV_RESIDENTIAL_AREA, " + "  SAMPADA_DIV_COMMERCIAL_AREA, " +
	// "  SAMPADA_DIV_INDUSTRIAL_AREA, " + "  SAMPADA_DIV_EDUCATIONAL_AREA, " +
	// "  SAMPADA_DIV_HEALTH_AREA, " + "  SAMPADA_DIV_OTHER_AREA, " +
	// "  SAMPADA_TOTAL_UNDIVERTED_AREA, " + " LGD_CODE " +
	// "FROM IGRS_REG_PROP_KHASRA_CLR_DETLS " + "WHERE KHASRA_TXN_ID= ? " +
	// "AND val_txn_id     = ? " + "AND KHASRA_ID      = ? ";

	public static final String khasra_txn_details = "SELECT KHASRA_NO,KHASRA_ID,KHASRA_AREA,CLR_FLAG,TOTAL_SALEBLE_AREA,RIN_PUSHTIKA_NUMBER,  SAMPADA_SINGLE_CROP_AREA,SAMPADA_DOUBLE_CROP_AREA,SAMPADA_IRRIGATED_AREA,CENSUS_CLR_CODE,SAMPADA_UNIRRIGATED_AREA,SAMPADA_TOTAL_DIVERTED_AREA,SAMPADA_DIV_RESIDENTIAL_AREA,SAMPADA_DIV_COMMERCIAL_AREA,SAMPADA_DIV_INDUSTRIAL_AREA,  SAMPADA_DIV_EDUCATIONAL_AREA,SAMPADA_DIV_HEALTH_AREA,SAMPADA_DIV_OTHER_AREA,SAMPADA_TOTAL_UNDIVERTED_AREA,  LGD_CODE,RI_CIRCLE,NOHIYAT,DISTCODE_CLR,TEHCODE_CLR,HALKANUMBER,BASRANUMBER,    KHASRAID_DEPT_CLR,ACTION_STATUS,LAND_USETYPE,LAND_USETYPE_DETL,CROP_TYPE,KHASRA_UNQ_NO,  ALPIN_NO FROM IGRS_REG_KHASRA_PROP_CLR WHERE KHASRA_TXN_ID= ? AND val_txn_id  = ? AND KHASRA_ID= ? ";
	public static final String GET_PARTY_TYPE_FLAG = "select PARTY_TYPE_ID from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?";
	public static final String get_Govt_office_name_en = "select OFFICE_NAME from igrs_government_clr_master where government_code =?";
	public static final String get_Govt_office_name_hi = "select H_OFFICE_NAME from igrs_government_clr_master where government_code =?";
	public static final String get_applicant_flag = "select IS_APPLICANT from IGRS_REG_TXN_PARTY_DETLS where party_txn_id = ?";
	// changes to insert the stamp details manually entered by DR on
	// Adjudication Fee payment page - By Santosh
	// public static final String
	// INSERT_ADJU_DUTIES_DETAILS="INSERT INTO IGRS_REG_ADJUDCN_FINAL_DTLS(STAMP_DUTY,MUNICIPAL_DUTY,JANPAD_DUTY,UPKAR_DUTY,REGISTRATION_FEE,TOTAL_DUTY,ADJUDCN_TXN_ID,CREATED_DATE,CREATED_BY,ADJUDICATION_REMARKS) VALUES(?,?,?,?,?,?,?,sysdate,?,?)";
	public static final String GET_PROP_KHASRA_DETLS_DISPLAY_Validate = "SELECT KHASRA_NUMBER" + " FROM IGRS_REG_PROP_KHASARA_DTLS " + " WHERE PROPERTY_ID=?";
	public static final String GET_MOHALLA_ID_FOR_CENSUS_CODE = "SELECT a.CENSUS_CLR_CODE " + " FROM IGRS_COLONY_MASTER a, " + "  igrs_reg_proprty_dtls b " + " where b.property_id  =? " + " AND b.MOHALLA_ID   = a.COLONY_ID";
	public static final String get_clr_rcms_district = "SELECT a.CLR_RCMS_FLAG " + " FROM IGRS_DISTRICT_MASTER a, " + "  igrs_reg_proprty_dtls b " + " WHERE b.property_id = ? " + " AND b.DISTRICT_ID   = a.DISTRICT_ID";
	// saurav for deed drafting changes
	public static final String GET_DEED_TYPE_APP = "SELECT count(*) FROM IGRS_DEED_DRAFT_TXN_DTLS WHERE deed_draft_id=? and created_by=? and application_type='E'";
	public static final String UPDATE_REST_DEED_DRAFT_ID = "update IGRS_DEED_DRAFT_TXN_DTLS set deed_draft_status='D', UPDATE_DATE=sysdate where created_by=? and APPLICATION_NUMBER=?";
	public static final String GET_ADJU_FLAG_DEED = "SELECT APPLICATION_TYPE from IGRS_DEED_DRAFT_TXN_DTLS WHERE deed_draft_id=? and created_by=?";
	// Added by ankit for plant and machinery
	public static final String GET_MOV_PROP_FLAG = " SELECT MOVABLE_PROP_FLAG FROM IGRS_INST_FIELD_MAPPING WHERE DEED_ID = ?  AND INSTRUMENT_ID = ? AND MOVABLE_PROP_FLAG='Y'";
	// added by ankit for prop val changes
	public static final String GET_INSTRUMENT_FLAGS_DEED_PDF = "SELECT PROP_REQ_FLAG,PROP_VAL_REQ_FLAG,COMMON_FLOW,PROP_OPTIONAL_FLAG FROM IGRS_DEED_INSTRUMENT_MASTER WHERE INSTRUMENT_ID=?";
	// added by ankit for aadhar bypass CLR
	public static final String DEFAULT_BYPASS_FLAG_AADHAR = "SELECT MIN(STATUS_VALUE) FROM IGRS_ADHAR_STATUS_MASTER WHERE STATUS = 'A' AND MODULE_NAME = ? AND ADHAR_STATUS_DESC = ?";
	// added by ankit for GIS work
	public static final String GET_MUN_GIS_FLAG = "SELECT MUN_GIS_FLAG from IGRS_SUB_AREA_TYPE_MASTER where SUB_AREA_TYPE_ID= ?  AND SUB_AREA_TYPE_STATUS='A'";
	public static final String GET_DUPLICATE_GIS_ID_COUNT = "select count(*) from IGRS_REG_PROPRTY_DTLS where gis_reference_key is not null and gis_reference_key = ? AND property_id NOT IN (?)";
	public static final String GIS_Update_txn_sequence = "select IGRS_GIS_Update_TXN_SEQ.NEXTVAL from dual";
	public static final String IGRS_GIS_CHK_Update_TXN = "insert into IGRS_GIS_CHK_Update_TXN_DETLS (GIS_TXN_ID,PROPERTY_ID,REG_TXN_ID,GIS_REFERENCE_KEY,GIS_REFERENCE_KEY_OLD,UPDATED_BY,UPDATED_DATE) values (?,?,?,?,?,?,SYSDATE)";
	public static final String UPDATE_GIS_ID = "UPDATE IGRS_REG_PROPRTY_DTLS SET GIS_REFERENCE_KEY=? WHERE PROPERTY_ID=?";
	// added by ankit for female rebate
	public static final String GET_FEMALE_FLAGS_REGISTERED = "select exemption_id ,appellate_type_id, nvl(PARTY_GENDER,'NA') from igrs_reg_txn_party_detls pa, igrs_duty_exemption_detls exp, igrs_reg_txn_detls rx " + "where rx.REG_TXN_ID =  ? AND rx.duty_txn_id = exp.duty_txn_id AND exp.exemption_id IN (188,189 )  AND pa.REG_TXN_ID = rx.REG_TXN_ID AND pa.party_type_id IN (50001, 50006, 50022, 50038) ";
	public static final String GET_FEMALE_FLAGS_REGISTEREDPOA = "SELECT exemption_id ,PARENT_ID,party_type_id FROM IGRS_REG_TXN_PARTY_DETLS a, igrs_duty_exemption_detls exp, igrs_reg_txn_detls rx where a.party_txn_id IN (SELECT PARENT_ID FROM IGRS_REG_TXN_PARTY_DETLS b WHERE b.reg_txn_id =? AND b.parent_id IS NOT NULL " + "AND b.party_type_id In (50004) AND b.party_gender not IN ( 'F')) and a.reg_txn_id =? AND rx.duty_txn_id = exp.duty_txn_id AND exp.exemption_id IN (188,189 ) AND a.REG_TXN_ID = rx.REG_TXN_ID and a.party_type_id IN (50022, 50038, 50066, 50014, 50039, 50045, 50052, 50083, 50087, 50092,50073)";

	public static final String get_inst_clr_flag = " select clr_flag FROM IGRS_DEED_INSTRUMENT_MASTER WHERE INSTRUMENT_ID=? ";
	// added by saurav for new webservice
	// public static final String
	// GET_KHASRA_ID_DATA="select khasra_id, khasra_txn_id from IGRS_REG_PROP_KHASRA_CLR_DETLS where val_txn_id=?";

	public static final String GET_KHASRA_ID_DATA = "select khasra_id, khasra_txn_id from IGRS_REG_KHASRA_PROP_CLR where val_txn_id=?";
	public static final String CHK_CROP_DETAIL = "select count(1) from IGRS_REG_KHASRA_CROP_CLR_DETLS  where khasra_id=? and khasra_txn_id=?";
	public static final String UPDATE_CLR_CROP_DETAIL = "update IGRS_REG_KHASRA_CROP_CLR_DETLS set reg_txn_id=?, property_id=?  where khasra_id=? and khasra_txn_id=?";
	public static final String CHK_TREE_DETAIL = "select count(1) from igrs_reg_khasra_tree_clr_detls  where khasra_id=? and khasra_txn_id=?";
	public static final String UPDATE_CLR_TREE_DETAIL = "update igrs_reg_khasra_tree_clr_detls set reg_txn_id=?, property_id=?  where khasra_id=? and khasra_txn_id=?";
	public static final String CHK_IRR_DETAIL = "select count(1) from igrs_reg_khasra_irri_src_clr  where khasra_id=? and khasra_txn_id=?";
	public static final String UPDATE_CLR_IRR_DETAIL = "update igrs_reg_khasra_irri_src_clr set reg_txn_id=?, property_id=?  where khasra_id=? and khasra_txn_id=?";
	public static final String CHK_RMK_DETAIL = "select count(1) from igrs_reg_khasra_remrk_clr_dtls  where khasra_id=? and khasra_txn_id=?";
	public static final String UPDATE_CLR_RMK_DETAIL = "update igrs_reg_khasra_remrk_clr_dtls set reg_txn_id=?, property_id=?  where khasra_id=? and khasra_txn_id=?";
	public static final String CHK_MORTG_DETAIL = "select count(1) from igrs_reg_khasra_mortg_clr_dtls  where khasra_id=? and khasra_txn_id=?";
	public static final String UPDATE_CLR_MRTG_RMK_DETAIL = "update igrs_reg_khasra_mortg_clr_dtls set reg_txn_id=?, property_id=?  where khasra_id=? and khasra_txn_id=?";

	public static final String CHK_KHASRA_ID_CROP = "select count(khasra_id) from IGRS_REG_KHASRA_CROP_CLR_DETLS where khasra_id=? and reg_txn_id is not null and property_id is not null";
	public static final String CHK_KHASRA_ID_TREE = "select count(khasra_id) from igrs_reg_khasra_tree_clr_detls where khasra_id=? and reg_txn_id is not null and property_id is not null";
	public static final String CHK_KHASRA_ID_IRR_SRC = "select count(khasra_id) from igrs_reg_khasra_irri_src_clr where khasra_id=? and reg_txn_id is not null and property_id is not null";
	public static final String CHK_KHASRA_ID_RMK = "select count(khasra_id) from igrs_reg_khasra_remrk_clr_dtls where khasra_id=? and reg_txn_id is not null and property_id is not null";
	public static final String CHK_KHASRA_ID_MRTG_RMK = "select count(khasra_id) from igrs_reg_khasra_mortg_clr_dtls where khasra_id=? and reg_txn_id is not null and property_id is not null";
	public static final String FETCH_CROP_DETAIL = "select KHASRA_NO,SEASONTYPE,CROPTYPE,CROPAREA from IGRS_REG_KHASRA_CROP_CLR_DETLS where khasra_id=? and khasra_txn_id=?";

	public static final String INSERT_NEW_CROP_DETAIL = "Insert into IGRS_REG_KHASRA_CROP_CLR_DETLS (ID,KHASRA_TXN_ID,KHASRA_ID,REG_TXN_ID,PROPERTY_ID,KHASRA_NO,SEASONTYPE,CROPTYPE,CROPAREA)  ((select IGRS_CLR_CROP_ID.NEXTVAL,?,?,?,?,KHASRA_NO,SEASONTYPE,CROPTYPE,CROPAREA from IGRS_REG_KHASRA_CROP_CLR_DETLS where khasra_id=? and khasra_txn_id=?))";
	public static final String INSERT_NEW_TREE_DETAIL = "Insert into igrs_reg_khasra_tree_clr_detls (ID,KHASRA_TXN_ID,KHASRA_ID,REG_TXN_ID,PROPERTY_ID,KHASRA_NO,treename,treecount)  ((select IGRS_CLR_TREE_ID.NEXTVAL,?,?,?,?,KHASRA_NO,treename,treecount from igrs_reg_khasra_tree_clr_detls where khasra_id=? and khasra_txn_id=?))";
	public static final String INSERT_NEW_SRC_IRR_DETAIL = "Insert into igrs_reg_khasra_irri_src_clr (ID,KHASRA_TXN_ID,KHASRA_ID,REG_TXN_ID,PROPERTY_ID,KHASRA_NO,IRRIGATION_SOURCE)  ((select IGRS_CLR_IRR_ID.NEXTVAL,?,?,?,?,KHASRA_NO,IRRIGATION_SOURCE from igrs_reg_khasra_irri_src_clr where khasra_id=? and khasra_txn_id=?))";
	public static final String INSERT_NEW_KHASRA_RMK = "Insert into igrs_reg_khasra_remrk_clr_dtls (ID,KHASRA_TXN_ID,KHASRA_ID,REG_TXN_ID,PROPERTY_ID,KHASRA_NO,REMARK)  ((select IGRS_CLR_RMK_ID.NEXTVAL,?,?,?,?,KHASRA_NO,REMARK from igrs_reg_khasra_remrk_clr_dtls where khasra_id=? and khasra_txn_id=?))";
	public static final String INSERT_NEW_KHASRA_MRTG_RMK = "Insert into igrs_reg_khasra_mortg_clr_dtls (ID,KHASRA_TXN_ID,KHASRA_ID,REG_TXN_ID,PROPERTY_ID,KHASRA_NO,MORTGAGEREMARK,MORTGAGETYPE)  ((select IGRS_CLR_MRTG_ID.NEXTVAL,?,?,?,?,KHASRA_NO,MORTGAGEREMARK,MORTGAGETYPE from igrs_reg_khasra_mortg_clr_dtls where khasra_id=? and khasra_txn_id=?))";
	public static final String update_reg_khasra_clr_own_dtl = "update IGRS_REG_KHASRA_PARTY_CLR set PROPERTY_ID=? where VAL_TXN_ID =?";

	// added by saurav
	public static final String RCMS_CHECK = "SELECT nvl(b.rcms_flag,'N'), a.instruments_id FROM igrs_reg_txn_detls A, igrs_deed_type_master B, igrs_reg_proprty_dtls c WHERE a.reg_txn_id=? AND a.deed_id=b.deed_type_id and a.reg_txn_id=c.reg_txn_id and c.prop_type_id=3";
	public static final String RCMS_CYBER_CHECK = "SELECT nvl(b.IS_CYBER,'N'), a.instruments_id FROM igrs_reg_txn_detls A, Igrs_Deed_Instrument_Master B, igrs_reg_proprty_dtls c WHERE a.reg_txn_id=? AND a.Instruments_Id=b.Instrument_Id and a.reg_txn_id=c.reg_txn_id and c.prop_type_id=3";
	
	public static final String TEHSIL_COUNT = "select count(distinct tehsil_id) from igrs_reg_proprty_dtls where reg_txn_id=?";
	public static final String RCMS_FEE = "select ATTRIBUTE_VALUE from igrs_config_param_list where attribute_id='ATT_RCMS_FEE' AND attribute_status='A'";
	public static final String RCMS_FEE_CHECK = "select NVL(SUM(paid_amount),0) from igrs_reg_payment_detls where reg_txn_id=? and payment_txn_id is not null and payment_flag in ('P','C') AND payment_type_id='4'";
	public static final String FORM_DISTINCT_DATA = "SELECT DISTINCT FORM_TYPE_ID, DECLARATION_ID FROM IGRS_CYBER_FORM_MASTER where form_type_id=?  ORDER BY declaration_id";
	public static final String FORM_THREE_DISTICT_DATA = "SELECT DISTINCT FORM_TYPE_ID, DECLARATION_ID FROM IGRS_CYBER_FORM_MASTER where form_type_id='FORM_3'";
	public static final String FORM_DECLARATION_DATA = "SELECT FORM_DEC_ID, DECLARATION_ID, declaration_sub_id,DECLARATION_DESC, H_DECLARATION_DESC, USER_ENTERABLE_FIELD, USER_ENTERABLE_FIELD_ID FROM IGRS_CYBER_FORM_MASTER where form_type_id=? and declaration_id=? AND declaration_status='A' order by DECLARATION_ID, declaration_sub_id asc";
	public static final String FORM_ENTERABLE_DATA = "select user_enterable_id, user_enterbale_field_id, field_sub_id, field_name, field_name_h from IGRS_CYBER_ENTRBL_FIELD_MASTER where user_enterbale_field_id=? and field_status='A'";
	public static final String FORM_TXN_ID = "SELECT IGRS_FORM_TXN_ID_SEQUENCE.NEXTVAL FROM DUAL";
	public static final String INSERT_FORM_VIA_DATA = "INSERT " + "INTO igrs_cyber_form_detail " + "  ( " + "    FORM_TXN_ID, " + "    FORM_NAME, " + "    DECLARATION_TXN_ID, " + "    REG_TXN_ID, " + "    CREATED_DATE, " + "    CREATED_BY,USER_FIELD_FLAG " + "  ) " + "  VALUES " + "  ( " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    systimestamp, " + "    ?,? " + "  )";
	public static final String USER_ENTERABLE_TXN_ID = "SELECT IGRS_USER_TXN_ID_SEQUENCE.NEXTVAL FROM DUAL";
	public static final String INSERT_USER_ENTERABLE_DATA = "INSERT " + "INTO igrs_cyber_form_user_enterable " + "  ( " + "    USER_ENT_TXN_ID, " + "    CREATED_DATE, " + "    FORM_TXN_ID, " + "    USER_FIELD_ID, " + "    REG_TXN_ID, " + "    CREATED_BY, FIELD_VALUE " + "  ) " + "  VALUES " + "  ( " + "    ?, " + "    SYSTIMESTAMP, " + "    ?, " + "    ?, " + "    ?, " + "    ?,? " + "  )";
	public static final String CHECK_FORM_VIA_REC = "SELECT COUNT(reg_txn_id) FROM igrs_cyber_form_detail WHERE reg_txn_id=? and form_name=?";
	public static final String FETCH_PARTY_TXN_ID = "select distinct party_txn_id from igrs_reg_txn_party_detls where reg_txn_id=?";
	public static final String FETCH_SELLER_INF0_EN = "SELECT a.appellate_type_id, " + "  a.party_first_name " + "  ||' ' " + "  ||a.party_middle_name " + "  ||' ' " + "  ||a.party_last_name, " + "  a.organization_name " + "  ||'/' " + "  ||a.authrzd_persn_name, " + "  a.name_of_official " + "  ||'/' " + "  ||a.desg_of_official, " + "  a.party_address, " + "  a.adrs_of_official, " + "  a.guardian_name, " + "  (SELECT NVL(a1.RELATION_TYPE_NAME,'--') " + "  FROM igrs_relation_type_master a1 " + "  WHERE a1.relation_type_id=a.relation_type_id " + "  ), " + "  a.parent_id, a.mobile_number mobile_number, nvl(a.email_id,'NA') email_id, a.photo_proof_id , (select nvl(a2.photo_proof_type_name,'NA') from igrs_photoid_proof_type_master a2 where a2.PHOTO_PROOF_TYPE_ID=a.photo_proof_type_id) photo_proof_type_name, a.party_age, d.category_name, d.h_category_name " + " FROM igrs_reg_txn_party_detls a, " + "  igrs_party_type_master b, igrs_person_category_master d " + "WHERE a.party_txn_id IN (?) " + "AND a.party_type_id   = b.party_type_id " + "AND b.claimant_flag  IN (1,2,5) and a.category_id=d.category_id(+) and a.parent_id IS NULL";
	public static final String FETCH_SELLER_INF0_HI = "SELECT a.appellate_type_id, " + "  a.party_first_name " + "  ||' ' " + "  ||a.party_middle_name " + "  ||' ' " + "  ||a.party_last_name, " + "  a.organization_name " + "  ||'/' " + "  ||a.authrzd_persn_name, " + "  a.name_of_official " + "  ||'/' " + "  ||a.desg_of_official, " + "  a.party_address, " + "  a.adrs_of_official, " + "  a.guardian_name, " + "  (SELECT NVL(a1.h_RELATION_TYPE_NAME,'--') " + "  FROM igrs_relation_type_master a1 " + "  WHERE a1.relation_type_id=a.relation_type_id " + "  ), " + "  a.parent_id, a.mobile_number mobile_number, nvl(a.email_id,'NA') email_id, a.photo_proof_id , (select nvl(a2.h_photo_proof_type_name,'NA') from igrs_photoid_proof_type_master a2 where a2.PHOTO_PROOF_TYPE_ID=a.photo_proof_type_id) photo_proof_type_name, a.party_age, d.category_name, d.h_category_name " + " FROM igrs_reg_txn_party_detls a, " + "  igrs_party_type_master b, igrs_person_category_master d " + "WHERE a.party_txn_id IN (?) " + "AND a.party_type_id   = b.party_type_id " + "AND b.claimant_flag  IN (1,2,5) and a.category_id=d.category_id(+) and a.parent_id IS NULL";
	public static final String CHECK_IF_SELLER = "select count(b.party_txn_id) From igrs_party_type_master a, igrs_reg_txn_party_detls b where a.party_type_id=b.party_type_id and b.party_txn_id=? and a.claimant_flag in (1,2,5)";
	public static final String INSERT_SELLER_INFO = "INSERT " + "INTO IGRS_CYBER_FORM_USER_ENTERABLE " + "  ( " + "    USER_ENT_TXN_ID, " + "    USER_FIELD_ID, " + "    created_date, " + "    REG_TXN_ID, " + "    CREATED_BY, " + "    PARTY_NAME, " + "    PARTY_ADDRESS, " + "    RELATION, " + "    GUARDIAN, " + "    ADHAR_LAST_FOUR_DIGIT ,PARTY_TXN_ID" + "  ) " + "  VALUES " + "  ( " + "    ?, " + "    ?, " + "    systimestamp, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?,? " + "  )";
	public static final String FETCH_BUYER_INF0_EN = "SELECT a.appellate_type_id, " + "  a.party_first_name " + "  ||' ' " + "  ||a.party_middle_name " + "  ||' ' " + "  ||a.party_last_name, " + "  a.organization_name " + "  ||'/' " + "  ||a.authrzd_persn_name, " + "  a.name_of_official " + "  ||'/' " + "  ||a.desg_of_official, " + "  a.party_address, " + "  a.adrs_of_official, " + "  a.guardian_name, " + "  (SELECT NVL(a1.RELATION_TYPE_NAME,'--') " + "  FROM igrs_relation_type_master a1 " + "  WHERE a1.relation_type_id=a.relation_type_id " + "  ), " + "  a.parent_id, a.mobile_number mobile_number, nvl(a.email_id,'NA') email_id, a.photo_proof_id , (select nvl(a2.photo_proof_type_name,'NA') from igrs_photoid_proof_type_master a2 where a2.PHOTO_PROOF_TYPE_ID=a.photo_proof_type_id) photo_proof_type_name, a.party_age, d.category_name, d.h_category_name " + " FROM igrs_reg_txn_party_detls a, " + "  igrs_party_type_master b, igrs_person_category_master d  " + "WHERE a.party_txn_id IN (?) " + "AND a.party_type_id   = b.party_type_id " + "AND b.claimant_flag  IN (3,4,6) and a.category_id=d.category_id(+) and a.parent_id IS NULL";
	public static final String FETCH_BUYER_INF0_HI = "SELECT a.appellate_type_id, " + "  a.party_first_name " + "  ||' ' " + "  ||a.party_middle_name " + "  ||' ' " + "  ||a.party_last_name, " + "  a.organization_name " + "  ||'/' " + "  ||a.authrzd_persn_name, " + "  a.name_of_official " + "  ||'/' " + "  ||a.desg_of_official, " + "  a.party_address, " + "  a.adrs_of_official, " + "  a.guardian_name, " + "  (SELECT NVL(a1.H_RELATION_TYPE_NAME,'--') " + "  FROM igrs_relation_type_master a1 " + "  WHERE a1.relation_type_id=a.relation_type_id " + "  ), " + "  a.parent_id, a.mobile_number mobile_number, nvl(a.email_id,'NA') email_id, a.photo_proof_id , (select nvl(a2.H_PHOTO_PROOF_TYPE_NAME,'NA') from igrs_photoid_proof_type_master a2 where a2.PHOTO_PROOF_TYPE_ID=a.photo_proof_type_id) photo_proof_type_name, a.party_age, d.category_name, d.h_category_name " + " FROM igrs_reg_txn_party_detls a, " + "  igrs_party_type_master b, igrs_person_category_master d  " + "WHERE a.party_txn_id IN (?) " + "AND a.party_type_id   = b.party_type_id " + "AND b.claimant_flag  IN (3,4,6) and a.category_id=d.category_id(+) and a.parent_id IS NULL";
	public static final String CHECK_IF_BUYER = "select count(b.party_txn_id) From igrs_party_type_master a, igrs_reg_txn_party_detls b where a.party_type_id=b.party_type_id and b.party_txn_id=? and a.claimant_flag in (3,4,6)";
	public static final String INSERT_BUYER_INFO = "INSERT " + "INTO IGRS_CYBER_FORM_USER_ENTERABLE " + "  ( " + "    USER_ENT_TXN_ID, " + "    USER_FIELD_ID, " + "    created_date, " + "    REG_TXN_ID, " + "    CREATED_BY, " + "    PARTY_NAME, " + "    PARTY_ADDRESS, " + "    RELATION, " + "    GUARDIAN, " + "    ADHAR_LAST_FOUR_DIGIT ,PARTY_TXN_ID" + "  ) " + "  VALUES " + "  ( " + "    ?, " + "    ?, " + "    systimestamp, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?, " + "    ?,? " + "  )";
	public static final String UPDATE_ADHAR_LAST_FOUR_DIGIT = "UPDATE igrs_reg_txn_party_detls SET adhar_four_digit=? where PARTY_TXN_ID=?";
	public static final String FETCH_PROP_DETAIL = "SELECT e.ward_patwari_name, e.h_ward_patwari_name, f.colony_name, f.h_colony_name,a.party_txn_id, a.property_id,  a.khasra_no,   a.shares , b.parent_id, c.khasra_id, c.khasra_area, c.total_saleble_area, c.crop_type, (a.shares*C.total_saleble_area)/100 USER_SHARE FROM IGRS_REG_PROP_SHARE_MAP_CLR a,  igrs_reg_txn_party_detls b, igrs_reg_khasra_prop_clr c, igrs_reg_proprty_dtls d, igrs_ward_patwari_master e, igrs_colony_master f WHERE d.reg_txn_id=? and a.party_txn_id=b.party_txn_id and a.reg_txn_id = c.reg_txn_id and a.property_id=c.property_id and a.reg_txn_id = d.reg_txn_id and a.property_id=d.property_id and d.ward_id=e.ward_patwari_id and d.mohalla_id=f.colony_id and a.khasra_no=c.khasra_no order by a.property_id,  a.khasra_no";
	public static final String FETCH_PROPIDS="select property_id, reg_txn_id from igrs_reg_proprty_dtls where reg_txn_id=? and prop_type_id=3";
	public static final String FETCH_PARTY_DATA = "select appellate_type_id, party_first_name||' '||party_middle_name||' '||party_last_name, organization_name||'/'||authrzd_persn_name, name_of_official||'/'||desg_of_official, party_address, adrs_of_official from igrs_reg_txn_party_detls where party_txn_id=?";
	public static final String FETCH_PARTY_DETAIL_FOR_ESIGN="select user_field_id, party_name, party_address,relation, guardian, adhar_last_four_digit, party_txn_id,\r\n" + 
			"(select count(1) from IGRS_ESIGN_TXN_DETLS e where e.party_txn_id=u.party_txn_id and status='P') esignStatus from igrs_cyber_form_user_enterable u where reg_txn_id=? and user_field_id IN ('SELLER','BUYER')";

	//added by ankit for aadhar Esign and PDF work
		public static final String GET_ALL_DECLARATION_DETLS = "SELECT a.declaration_id, a.declaration_id ||'.'||a.declaration_sub_id, a.declaration_desc, a.h_declaration_desc, a.USER_ENTERABLE_FIELD, a.USER_ENTERABLE_FIELD_ID, b.form_txn_id FROM IGRS_CYBER_FORM_MASTER a, igrs_cyber_form_detail b  WHERE  b.reg_txn_id = ? AND  b.form_name =?  AND b.declaration_txn_id=a.form_dec_id ORDER BY a.unq_id ";
		//added by ankit for aadhar esign and PDF work
		public static final String GET_ALL_USER_ENTERABLE_DETLS = "SELECT a.form_txn_id,a.USER_ENT_TXN_ID,b.USER_ENTERABLE_ID,b.field_name, b.FIELD_NAME_H, a.field_value FROM igrs_cyber_form_user_enterable a, IGRS_CYBER_ENTRBL_FIELD_MASTER b WHERE a.user_field_id=b.USER_ENTERABLE_ID AND a.reg_txn_id = ? order by a.USER_ENT_TXN_ID ";
		//public static final String GET_FORMVI_PARTY_DETLS = "select PARTY_NAME, PARTY_ADDRESS, RELATION, GUARDIAN, ADHAR_LAST_FOUR_DIGIT, PARTY_TXN_ID from igrs_cyber_form_user_enterable where reg_txn_id=? and user_field_id=?";
		
		//public static final String GET_FORMVI_PARTY_DETLS = "select t.PARTY_FIRST_NAME||' '||t.PARTY_MIDDLE_NAME||' '||t.PARTY_LAST_NAME, t.PARTY_ADDRESS,r.RELATION_TYPE_NAME,t.GUARDIAN_NAME,t.EMAIL_ID, t.MOBILE_NUMBER, i.PHOTO_PROOF_TYPE_NAME, t.PHOTO_PROOF_ID,t.adhar_four_digit,t.PARTY_TXN_ID from igrs_reg_txn_party_detls t, IGRS_RELATION_TYPE_MASTER r, IGRS_PHOTOID_PROOF_TYPE_MASTER i where PARTY_TXN_ID IN (select  PARTY_TXN_ID  from igrs_cyber_form_user_enterable where reg_txn_id=? and user_field_id=?) AND t.PHOTO_PROOF_TYPE_ID = i.PHOTO_PROOF_TYPE_ID AND t.RELATION_TYPE_ID = r.RELATION_TYPE_ID";
		public static final String GET_FORMVI_PARTY_DETLS = "SELECT a.appellate_type_id,a.party_first_name||' '||a.party_middle_name||' '||a.party_last_name,a.organization_name||'/'||a.authrzd_persn_name,a.name_of_official||'/'||a.desg_of_official,a.party_address,a.adrs_of_official,a.guardian_name, NVL((SELECT a1.RELATION_TYPE_NAME\r\n" + 
				"FROM igrs_relation_type_master a1\r\n" + 
				"WHERE a1.relation_type_id=a.relation_type_id),'--'\r\n" + 
				") RELATION_TYPE_NAME,\r\n" + 
				"NVL((SELECT a1.H_RELATION_TYPE_NAME\r\n" + 
				"FROM igrs_relation_type_master a1\r\n" + 
				"WHERE a1.relation_type_id=a.relation_type_id)\r\n" + 
				",'HINDI--') RELATION_TYPE_NAME_H,"
				+ "  a.mobile_number mobile_number, NVL(a.email_id,'NA') email_id, a.photo_proof_id ,"
				+ " NVL((SELECT a2.photo_proof_type_name\r\n" + 
				"FROM igrs_photoid_proof_type_master a2\r\n" + 
				"WHERE a2.PHOTO_PROOF_TYPE_ID=a.photo_proof_type_id),'--'\r\n" + 
				") photo_proof_type_name ,\r\n" + 
				"NVL((SELECT a2.h_photo_proof_type_name\r\n" + 
				"FROM igrs_photoid_proof_type_master a2\r\n" + 
				"WHERE a2.PHOTO_PROOF_TYPE_ID=a.photo_proof_type_id),'HINDI --'\r\n" + 
				") photo_proof_type_name_H , "
				+ "a.adhar_four_digit, a.PARTY_TXN_ID FROM igrs_reg_txn_party_detls a, igrs_party_type_master b   "
				+ "WHERE a.reg_txn_id =? AND a.party_type_id = b.party_type_id AND b.claimant_flag IN (?,?,?) AND a.parent_id IS NULL";
		
		public static final String GET_PARTY_DETAILS_FOR_ESIGNPDF = "select user_field_id, party_name, party_address,relation, guardian, adhar_last_four_digit, party_txn_id ,reg_txn_id\r\n" + 
				"from igrs_cyber_form_user_enterable where party_txn_id=?";
		
		public static final String INSERT_ESIGN_TXN_DETLS = "INSERT INTO IGRS_ESIGN_TXN_DETLS (ESIGN_TXN_ID,PARTY_TXN_ID,REG_TXN_ID,CREATED_BY,CREATED_DATE,IP_ADDRESS,PDF_FILE_PATH,ERROR_CODE,ERROR_DESC,STATUS,UPDATE_BY,UPDATE_DATE,PDF_HASH) VALUES(?,?,?,?,sysdate,?,?,?,?,?,?,sysdate,?)";
		
		public static final String UPDATE_ESIGN_DETLS = "UPDATE IGRS_ESIGN_TXN_DETLS SET ERROR_CODE=? , ERROR_DESC=? , STATUS=? , UPDATE_BY=? , UPDATE_DATE=sysdate WHERE ESIGN_TXN_ID=?";
		
		public static final String GET_DOC_HASH = "select pdf_hash from igrs_esign_txn_detls where ESIGN_TXN_ID = ?";
	public static final String FETCH_PAYMENT_DETAIL="select b.challan_number, b.amount from igrs_reg_payment_detls a, igrs_cyber_teh_challan_details b where a.txn_id=B.TXN_ID AND A.REG_TXN_ID=? and a.payment_txn_id is not null";
	public static final String FETCH_PAYMENT_DETAIL_ON="select Challan_Number, Payable_Amount From Igrs_Payment_Echallan_Details where Reference_Id=? and Function_Id='FUN_601'";
	public static final String FETCH_SELECTED_FORM_VIB_DETAIL=" select b.declaration_desc, b.h_declaration_desc From igrs_cyber_form_detail A, igrs_cyber_form_master B where A.form_name='FORM_VIB' AND A.reg_txn_id=? AND a.declaration_txn_id=b.form_dec_id ORDER BY Unq_Id";
	
	public static final String UPDATE_FORMA_PATH="update igrs_reg_txn_detls set form_vi=? where reg_txn_id=?";
	public static final String UPDATE_FORMA1_PATH="update igrs_reg_txn_detls set form_via=? where reg_txn_id=?";
	public static final String UPDATE_FORMA2_PATH="update igrs_reg_txn_detls set form_vib=? where reg_txn_id=?";
	
		public static final String GET_FAIl_TXN_DTLS = "select count(1) from igrs_esign_txn_detls where REG_TXN_ID= ? AND STATUS ='F' ";
	public static final String GET_PROP_DISTRICT_ID="select DISTRICT_ID from igrs_reg_proprty_dtls where clr_flag='Y' AND reg_txn_id=?";
	
	public static final String GET_PROP_DISTRICT = "select to_char(sysdate,'DD-MON-YYYY'), B.District_Name, B.H_District_Name From Igrs_Reg_Proprty_Dtls a, Igrs_District_Master b where a.Reg_Txn_Id=? and A.District_Id=B.District_Id order by A.Created_Date asc";
	//public static final String UPDATE_FORMA1_PATH = ""

	public static final String UPDATE_SIGNED_FORMA1_PATH="update igrs_reg_txn_detls set signed_form_via=? where reg_txn_id=?";
	public static final String UPDATE_SIGNED_FORMA2_PATH="update igrs_reg_txn_detls set signed_form_vib=? where reg_txn_id=?";
	
	public static final String GET_USER_DETAIL="select C.User_Type_Name||', '||A.First_Name||' '||A.Middle_Name||' '||A.Last_Name from Igrs_User_Reg_Details a, Igrs_Users_List b, Igrs_User_Type_Master c where a.user_id=B.User_Id and B.User_Type_Id=C.User_Type_Id and a.user_id=?";

	public static final String UPDATE_A1_CONSENT="update Igrs_Reg_Txn_Detls set A1consent=?, A1spconsent=? where reg_txn_id=?";
	public static final String UPDATE_A2_CONSENT="update Igrs_Reg_Txn_Detls set A2consent=?, A2spconsent=? where reg_txn_id=?";
	
	public static final String SELECT_A1_CONSENT="SELECT A1consent, A1spconsent FROM Igrs_Reg_Txn_Detls where reg_txn_id=?";
	public static final String SELECT_A2_CONSENT="SELECT A2consent, A2spconsent FROM Igrs_Reg_Txn_Detls where reg_txn_id=?";
	
	public static final String GET_USER_DETAIL_WITH_REGID="select A.First_Name||' '||A.Middle_Name||' '||A.Last_Name from Igrs_User_Reg_Details a, Igrs_Users_List b, Igrs_User_Type_Master c where a.user_id=B.User_Id and B.User_Type_Id=C.User_Type_Id and a.user_id=(SELECT CREATED_BY FROM Igrs_Reg_Txn_Detls WHERE REG_TXN_ID=?)";

}

